<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view>
        <script><![CDATA[
            function GL1020_ruleAssignSegReturnFun() {
                $('GL1020_gl_interface_rules_assign_segment_screen').close();
            }
            
            function GL1020_ruleAssignSegCodeEditFun(record, name) {
                if (record.isNew) {
                    return 'GL1020_rule_assign_segment_lov_editor';
                }
                return '';
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="GL1020_rule_segments_head_ds" autoCreate="true" model="gl.gld_interface_rules">
                <a:fields>
                    <a:field name="rule_code"/>
                    <a:field name="description"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="GL1020_rule_assign_segment_ds" autoPageSize="true" autoQuery="true" model="gl.gld_rule_segments" queryUrl="${/request/@context_path}/autocrud/gl.gld_rule_segments/query?rule_id=${/parameter/@rule_id}" selectable="true">
                <a:fields>
                    <a:field name="seg_assign_id"/>
                    <a:field name="rule_id" defaultValue="${/parameter/@rule_id}"/>
                    <a:field name="segment_code" autoComplete="true" lovGridHeight="320" lovHeight="450" lovService="gl.gld_segments_lov?set_of_books_id=${/parameter/@set_of_books_id}" lovWidth="720" required="true" title="GL.SEGMENTS">
                        <a:mapping>
                            <a:map from="segment_code" to="segment_code"/>
                            <a:map from="segment_name" to="segment_name"/>
                            <a:map from="segment_id" to="segment_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="segment_name"/>
                    <a:field name="segment_id"/>
                    <a:field name="is_required" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="enabled_flag" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                </a:fields>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton click="GL1020_ruleAssignSegReturnFun" text="PROMPT.RETURN" width="80"/>
                <a:gridButton bind="GL1020_rule_assign_segment_grid" type="add" width="80"/>
                <a:gridButton bind="GL1020_rule_assign_segment_grid" type="save" width="80"/>
                <a:gridButton bind="GL1020_rule_assign_segment_grid" type="clear" width="80"/>
                <a:gridButton bind="GL1020_rule_assign_segment_grid" type="delete" width="80"/>
            </a:screenTopToolbar>
            <a:form id="segment_form" column="2" title="GL.SEGMENTS">
                <a:label name="rule_code" bindTarget="GL1020_rule_segments_head_ds"/>
                <a:label name="description" bindTarget="GL1020_rule_segments_head_ds"/>
            </a:form>
            <a:grid id="GL1020_rule_assign_segment_grid" bindTarget="GL1020_rule_assign_segment_ds" marginHeight="171" navBar="true">
                <a:columns>
                    <a:column name="segment_code" align="center" editorFunction="GL1020_ruleAssignSegCodeEditFun" sortable="true" width="200"/>
                    <a:column name="segment_name" width="250"/>
                    <a:column name="is_required" align="center" editor="GL1020_rule_assign_segment_checkbox_editor" width="80"/>
                    <a:column name="enabled_flag" align="center" editor="GL1020_rule_assign_segment_checkbox_editor" width="80"/>
                </a:columns>
                <a:editors>
                    <a:lov id="GL1020_rule_assign_segment_lov_editor"/>
                    <a:checkBox id="GL1020_rule_assign_segment_checkbox_editor"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
			
			var headRecord = $('GL1020_rule_segments_head_ds').getAt(0);
			var ruleRecord = $('GL1020_gld_interface_rules_ds').getAt('${/parameter/@recordIndex}');
			
			headRecord.set('rule_code',ruleRecord.get('rule_code'));
			headRecord.set('description',ruleRecord.get('description'));
				
			
		]]></script>
        <script purpose="auto_resize"><![CDATA[

            function segmentAssignInitSize() {
                //描述宽度
            　　    var labelWidth = 75;
            　　    //标签宽度,5 = 3padding + 2border-spacing
            　　    var tagWidth = 150 + 5;
            　　    //页面宽度、高度
            　　    var vw = $A.getViewportWidth();
            　　    var vh = $A.getViewportHeight();
            　　    //留白宽度
            　　    var marginWidth = 35;
            　　    //自适应宽度
            　　    var autoWidth = vw - marginWidth;
            　　    //Form内部宽度，-2border
            　　    var formInnerWidth = autoWidth - 2;
            　　    //所占列数
            　　    var colSpan = 4;
            　　    //设置组件的自适应宽度
            		Ext.get('segment_form').setWidth(autoWidth+4);
            	   $('GL1020_rule_assign_segment_grid').setWidth(autoWidth);
            }
            //Ext.fly(window).on('resize', segmentAssignInitSize);
            segmentAssignInitSize();
        ]]></script>
    </a:view>
</a:screen>
