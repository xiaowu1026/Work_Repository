<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view>
        <a:link id="sys_data_purge_create_job_link" model="db.sys_data_purge_pkg.create_job" modelaction="batch_update"/>
        <a:link id="sys_data_purge_removejob_link" model="db.sys_data_purge_pkg.remove_job" modelaction="batch_update"/>
        <a:link id="data_purge_window_link" url="${/request/@context_path}/modules/sch/SCH1040/sys_data_purge_table_object.screen"/>
        <a:link id="dolog_see_window_link" url="${/request/@context_path}/modules/sch/SCH1040/sys_data_purge_logsee.screen"/>
        <script><![CDATA[
        
            function queryDataPurge(){
                $('sch_sys_clean_result_ds').query();
            }
            function resetDataPurge(){
            	$('sch_sys_clean_query_ds').reset();
            }
            function purgeCodeEdit(record,name){
                if(record.isNew){
                    return 'employee_code_grid_tf';
                }
                return '';
            }
            
            function purgScheduleEdit(record,name){
                if(record.isNew){
                    return 'lov_grid_tf';
                }
                var status =record.get('status');
                 if(status=='NEW'){
                    return 'lov_grid_tf';
                }
                return '';
            }
        	
        	function createjob() {
                var ds = $("sch_sys_clean_result_ds");
                var records = ds.getSelected();
                //var DATA_PURGE_HD_ID=records.get('DATA_PURGE_HD_ID');
                var length = ds.getSelected().length;
                if (length < 1) {
                    Aurora.showMessage("${l:PROMPT_MESSAGE}", "${l:SELECT_RECORD}");
                } else {
                    var jobData = [];
                    for (var i = 0;i < records.length;i++) {
                        var data = records[i].data;
                        data['_status'] = 'execute';
                        jobData.push(data);
                    }
                    var queryConfirm = Aurora.showConfirm('${l:CONFIRM}', '确认创建job？', function() {
                        queryConfirm.close();
                        Aurora.request({
                            url: /*${/request/@context_path}/autocrud/sys.sys_alert_rule_jobs_submit/batch_update*/
                            $('sys_data_purge_create_job_link').getUrl(),
                            para: jobData,
                            success: function(args) {
                                ds.query();
                            },
                            scope: this
                        });
                    }, function() {
                        queryConfirm.close();
                    }, null, null);
                }
            }
        	
        	function removejob() {
                var ds = $("sch_sys_clean_result_ds");
                var records = ds.getSelected();
                //var DATA_PURGE_HD_ID=records.get('DATA_PURGE_HD_ID');
                var length = ds.getSelected().length;
                if (length < 1) {
                    Aurora.showMessage("${l:PROMPT_MESSAGE}", "${l:SELECT_RECORD}");
                } else {
                    var jobData = [];
                    for (var i = 0;i < records.length;i++) {
                        var data = records[i].data;
                        data['_status'] = 'execute';
                        jobData.push(data);
                    }
                    var queryConfirm = Aurora.showConfirm('${l:CONFIRM}', '确认停止job？', function() {
                        queryConfirm.close();
                        Aurora.request({
                            url: /*${/request/@context_path}/autocrud/sys.sys_alert_rule_jobs_submit/batch_update*/
                            $('sys_data_purge_removejob_link').getUrl(),
                            para: jobData,
                            success: function(args) {
                                ds.query();
                            },
                            scope: this
                        });
                    }, function() {
                        queryConfirm.close();
                    }, null, null);
                }
            }
            
            function TableObject(value, record, name){
                var data_purge_hd_id = record.get('data_purge_hd_id');
                if(!record.isNew){
                    return '<a href="javascript:TableObjectInfo('+data_purge_hd_id+')">表对象</a>';
                }
            }
            
            function TableObjectInfo(data_purge_hd_id){
               new Aurora.Window({
                    id: 'data_purge_window',
                    url: /*sys_function_service.screen*/
                    $('data_purge_window_link').getUrl() + '?data_purge_hd_id=' + data_purge_hd_id,
                    title: '',
                    fullScreen: true
                });
            }
            
            function DoLogSee(value, record, name){
                var data_purge_hd_id = record.get('data_purge_hd_id');
                if(!record.isNew){
                    return '<a href="javascript:DoLogSeeInfo('+data_purge_hd_id+')">执行日志</a>';
                }
            }
            
            function DoLogSeeInfo(data_purge_hd_id){
               new Aurora.Window({
                    id: 'dolog_see_window',
                    url: /*sys_function_service.screen*/
                    $('dolog_see_window_link').getUrl() + '?data_purge_hd_id=' + data_purge_hd_id,
                    title: '',
                    fullScreen: true
                });
            }
             function lineAddFunction(dataSet, record, index) {
                 record.set('status_display', '新建');
                 record.set('status', 'NEW');
                 
                 
             }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="sch_sys_clean_query_ds"/>
            <a:dataSet id="sys_data_purge_status_ds" lookupCode="SYS_DATA_PURGE_STATUS"/>
            <a:dataSet id="sch_sys_clean_result_ds" autoPageSize="true" autoQuery="true" fetchAll="false" model="sch.SCH1040.sys_data_purge_hd" queryDataSet="sch_sys_clean_query_ds" selectable="true">
                <a:fields>
                    <a:field name="data_purge_code" required="true"/>
                    <a:field name="data_purge_name" required="true"/>
                    <a:field name="schedule_name" autoComplete="true" autoCompleteField="description" lovGridHeight="350" lovHeight="480" lovService="sch.SCH1040.sch_schedule" lovWidth="500" required="true" title="SYS_DATA_PURGE_HD.SCHEDULE_NAME">
                        <a:mapping>
                            <a:map from="schedule_name" to="schedule_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="status_display" displayField="code_value_name" options="sys_data_purge_status_ds" returnField="status" valueField="code_value"/>
                    <a:field name="status"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="lineAddFunction"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton click="resetDataPurge" text="HAP_RESET" width="80"/>
                <a:gridButton bind="sch_sys_clean_result_grid" type="add" width="80"/>
                <a:gridButton bind="sch_sys_clean_result_grid" type="clear" width="80"/>
                <a:gridButton bind="sch_sys_clean_result_grid" type="save" width="80"/>
                <a:toolbarButton click="createjob" text="创建job" width="80"/>
                <a:toolbarButton click="removejob" text="停止job" width="80"/>
            </a:screenTopToolbar>
            <a:queryForm bindTarget="sch_sys_clean_query_ds" resultTarget="sch_sys_clean_result_ds" style="width:100%;border:none">
                <a:formToolBar labelWidth="100">
                    <a:textField name="data_purge_code" bindTarget="sch_sys_clean_query_ds" prompt="执行方案代码" typeCase="upper"/>
                    <a:textField name="data_purge_name" bindTarget="sch_sys_clean_query_ds" prompt="执行方案名称"/>
                </a:formToolBar>
            </a:queryForm>
            <a:grid id="sch_sys_clean_result_grid" bindTarget="sch_sys_clean_result_ds" marginHeight="126" navBar="true">
                <a:columns>
                    <a:column name="data_purge_code" align="center" editorFunction="purgeCodeEdit" prompt="执行方案代码" width="120"/>
                    <a:column name="data_purge_name" align="left" editorFunction="purgeCodeEdit" prompt="执行方案名称" width="120"/>
                    <a:column name="schedule_name" align="left" editorFunction="purgScheduleEdit" width="120"/>
                    <a:column name="status_display" align="left" prompt="状态" width="120"/>
                    <a:column name="data_purge_hd_id1" align="center" prompt="表对象操作" renderer="TableObject" width="120"/>
                    <a:column name="data_purge_hd_id" align="center" prompt="执行日志查看" renderer="DoLogSee" width="120"/>
                </a:columns>
                <a:editors>
                    <a:comboBox id="status_grid_cmb"/>
                    <a:textField id="employee_code_grid_tf" typeCase="upper"/>
                    <a:textField id="name_grid_tf"/>
                    <a:textField id="text_grid_tf"/>
                    <a:checkBox id="enabled_grid_dp"/>
                    <a:lov id="lov_grid_tf"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[

            function cshPrepayPostInitSize() {
            
                //描述宽度
                var labelWidth = 75;
                //标签宽度,5 = 3padding + 2border-spacing
                var tagWidth = 150 + 5;
                //页面宽度、高度
                var vw = $A.getViewportWidth();
                var vh = $A.getViewportHeight();
                //留白宽度
                var marginWidth = 35;
                //自适应宽度
                var autoWidth = vw - marginWidth;
                //Form内部宽度，-2border
                var formInnerWidth = autoWidth - 2;
                //所占列数
                var colSpan = 4;
                //设置组件的自适应宽度
                
                $('sch_sys_clean_result_grid').setWidth(autoWidth + 4 - 17);
            }
            //Ext.fly(window).on('resize', cshPrepayPostInitSize);
            cshPrepayPostInitSize();
        ]]></script>
    </a:view>
</a:screen>
