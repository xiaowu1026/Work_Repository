<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: dengyang  
    $Date: 2014-5-5 下午2:08:08  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="bpm.OAF1020.oa_flow_categories_for_lov" rootpath="oa_flow_category"/>
    </a:init-procedure>
    <a:view>
        <a:link id="bpm_page_group_fields_link" url="${/request/@context_path}/modules/bpm/BPM1020/bpm_page_group_fields.screen"/>
        <a:link id="bpm_pages_link" url="${/request/@context_path}/modules/bpm/BPM1020/bpm_pages.screen"/>
        <a:link id="oa_flow_query_auth_alloc_link" url="${/request/@context_path}/modules/bpm/BPM1020/oa_flow_query_auth_alloc.screen"/>
        <a:link id="oa_flow_events_link" url="${/request/@context_path}/modules/bpm/BPM1020/oa_flow_events.screen"/>
        <a:link id="bpm_refresh_cache_link" url="${/request/@context_path}/modules/bpm/ENGINE/bpm_refresh_cache.svc"/>
        <script><![CDATA[

            function doQuery() {
                $('bpm_page_groups_result_ds').query();
            }
            
            function doReset() {
                $('bpm_page_groups_query_ds').reset();
            }
            
            function fieldslinkFunction(value, record, name) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '<a href="javascript:FieldsDefineView(' + group_id + ')">' + '${l:BPM_PAGE_GROUPS.FIELD_DEFINE}' + '</a>';
                }
            }
            
            function FieldsDefineView(group_id) {
                new Aurora.Window({
                    id: 'bpm_page_group_fields_screen',
                    url: $('bpm_page_group_fields_link').getUrl() + '?group_id=' + group_id,
                    title: '${l:BPM_PAGE_GROUPS.FIELD_DEFINE}',
                    fullScreen: true
                });
            }
            
            function pageslinkFunction(value, record, name) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '<a href="javascript:PagesConfigureView(' + group_id + ')">' + '${l:BPM_PAGE_GROUPS.PAGES_CONFIGURE}' + '</a>';
                }
            }
            
            function PagesConfigureView(group_id) {
                new Aurora.Window({
                    id: 'bpm_pages_screen',
                    url: $('bpm_pages_link').getUrl() + '?group_id=' + group_id,
                    title: '${l:BPM_PAGE_GROUPS.PAGES_CONFIGURE}',
                    fullScreen: true
                });
            }
            
            function alloclinkFunction(value, record, name) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '<a href="javascript:allocConfigureView(' + group_id + ')">' + '${l:BPM_PAGE_GROUPS.QUERY_AUTH_ALLOC}' + '</a>';
                }
            }
            
            function allocConfigureView(group_id) {
                new Aurora.Window({
                    id: 'oa_flow_query_auth_alloc_screen',
                    url: $('oa_flow_query_auth_alloc_link').getUrl() + '?group_id=' + group_id,
                    title: '${l:BPM_PAGE_GROUPS.QUERY_AUTH_ALLOC}',
                    fullScreen: true
                });
            }
            
            function eventslinkFunction(value, record, name) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '<a href="javascript:EventsConfigureView(' + group_id + ')">' + '${l:BPM_PAGE_GROUPS.EVENTS_CONFIGURE}' + '</a>';
                }
            }
            
            function EventsConfigureView(group_id) {
                new Aurora.Window({
                    id: 'oa_flow_events_screen',
                    url: $('oa_flow_events_link').getUrl() + '?group_id=' + group_id,
                    title: '${l:BPM_PAGE_GROUPS.EVENTS_CONFIGURE}',
                    fullScreen: true
                });
            }
            
            function comboboxEditFunction(record) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '';
                } else {
                    return 'comboboxEdit';
                }
            }
            
            function textEditFunction(record) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '';
                } else {
                    return 'textEdit_upper';
                }
            }
            
            function lovEditFunction(record) {
                var group_id = record.get('group_id');
                if (group_id) {
                    return '';
                } else {
                    return 'lovEdit';
                }
            }
            
            function doPageGroupRefreshCache() {
                var param = $('bpm_page_groups_result_ds').getJsonData(true);
                if (param && param.length && param.length > 0) {
                    Aurora.Masker.mask(Ext.getBody(), '${l:BPM_REFRESH_CACHE_PROMPT}');
                    Aurora.request({
                        url: $('bpm_refresh_cache_link').getUrl(),
                        para: param,
                        success: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                            Aurora.showInfoMessage('${l:PROMPT}', '${l:BPM_REFRESH_CACHE_COMPLETE}');
                        },
                        failure: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        error: function() {
                            Aurora.Masker.unmask(Ext.getBody());
                        },
                        scope: this
                    });
                } else {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.SELECT_LINE_DATE}');
                }
            }
            
            function doUpdate(ds, record, name, value, old_value) {
                if (name == 'oa_flow_category_id') {
                    if (value != null && value != '') {
                        $('oa_flow_sub_category_ds').setQueryParameter('oa_flow_category_id', record.get('oa_flow_category_id'));
                        $('oa_flow_sub_category_ds').query();
                        record.getField('oa_flow_sub_category_desc').setReadOnly(false);
                    } else {
                        record.getField('oa_flow_sub_category_desc').setReadOnly(true);
                    }
                    record.set('oa_flow_sub_category_desc', '');
                }
            }
            
            function updateHandler(ds, record, name, value, old_value) {
                if (name == 'oa_flow_category_id') {
                    if (value != null && value != '') {
                        $('oa_flow_sub_category_ds').setQueryParameter('oa_flow_category_id', record.get('oa_flow_category_id'));
                        $('oa_flow_sub_category_ds').query();
                        record.getField('oa_flow_sub_category_desc').setReadOnly(false);
                    } else {
                        record.getField('oa_flow_sub_category_desc').setReadOnly(true);
                    }
                    record.set('oa_flow_sub_category_desc', '');
                }
            }
            
            function doLoad(ds) {
                var records = ds.getAll();
                for (var i = 0;i < records.length;i++) {
                    if (records[i].get('oa_flow_category_id')) {
                        $('oa_flow_sub_category_ds').setQueryParameter('oa_flow_category_id', records[i].get('oa_flow_category_id'));
                        $('oa_flow_sub_category_ds').query();
                        records[i].getField('oa_flow_sub_category_desc').setReadOnly(false);
                    }
            
                }
            
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="oa_flow_category_ds">
                <a:datas dataSource="/model/oa_flow_category"/>
            </a:dataSet>
            <a:dataSet id="oa_flow_sub_category_ds" model="bpm.OAF1020.oa_flow_sub_categories_for_lov"/>
            <a:dataSet id="group_type_ds" lookupCode="EXP_DOCUMENT_CATEGORY"/>
            <a:dataSet id="bpm_page_groups_query_ds">
                <a:fields>
                    <a:field name="group_type_desc" displayField="code_value_name" options="group_type_ds" prompt="BPM_PAGE_GROUPS.GRUOP_TYPE" returnField="group_type" valueField="code_value"/>
                    <a:field name="group_type"/>
                    <a:field name="group_code" prompt="BPM_PAGE_GROUPS.GRUOP_CODE"/>
                    <a:field name="group_desc" prompt="BPM_PAGE_GROUPS.GRUOP_DESC"/>
                    <a:field name="template_desc" autoComplete="true" autoCompleteField="template_desc" lovGridHeight="320" lovHeight="450" lovService="bpm.BPM1020.bpm_templates_for_lov" lovWidth="500" prompt="BPM_PAGE_GROUPS.TEMPLATE_ID" title="BPM_PAGE_GROUPS.TEMPLATE_CHOOSE">
                        <a:mapping>
                            <a:map from="template_id" to="template_id"/>
                            <a:map from="template_desc" to="template_desc"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="template_id"/>
                    <a:field name="oa_flow_category_desc" displayField="description" options="oa_flow_category_ds" prompt="BPM_PAGE_GROUPS.OA_FLOW_CATEGORY" returnField="oa_flow_category_id" valueField="oa_flow_category_id"/>
                    <a:field name="oa_flow_sub_category_desc" displayField="description" options="oa_flow_sub_category_ds" prompt="BPM_PAGE_GROUPS.OA_FLOW_SUB_CATEGORY" readOnly="true" returnField="oa_flow_sub_category_id" valueField="oa_flow_sub_category_id"/>
                    <a:field name="oa_flow_category_id"/>
                    <a:field name="oa_flow_sub_category_id"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="doUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="bpm_page_groups_result_ds" autoPageSize="true" autoQuery="true" model="bpm.BPM1020.bpm_page_groups" queryDataSet="bpm_page_groups_query_ds" selectable="true">
                <a:fields>
                    <a:field name="group_type_desc" displayField="code_value_name" options="group_type_ds" prompt="BPM_PAGE_GROUPS.GRUOP_TYPE" required="true" returnField="group_type" valueField="code_value"/>
                    <a:field name="group_type"/>
                    <a:field name="group_code" prompt="BPM_PAGE_GROUPS.GRUOP_CODE" required="true"/>
                    <a:field name="group_desc" prompt="BPM_PAGE_GROUPS.GRUOP_DESC" required="true"/>
                    <a:field name="template_desc" autoComplete="true" autoCompleteField="template_desc" lovGridHeight="320" lovHeight="450" lovService="bpm.BPM1020.bpm_templates_for_lov" lovWidth="500" prompt="BPM_PAGE_GROUPS.TEMPLATE_ID" required="true" title="BPM_PAGE_GROUPS.TEMPLATE_CHOOSE">
                        <a:mapping>
                            <a:map from="template_id" to="template_id"/>
                            <a:map from="template_desc" to="template_desc"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="template_screen"/>
                    <a:field name="enabled_flag" checkedValue="Y" defaultValue="Y" prompt="BPM_PAGE_GROUPS.ENABLED_FLAG" uncheckedValue="N"/>
                    <a:field name="oa_flow_category_desc" displayField="description" options="oa_flow_category_ds" prompt="BPM_PAGE_GROUPS.OA_FLOW_CATEGORY" required="true" returnField="oa_flow_category_id" valueField="oa_flow_category_id">
                        <a:mapping>
                            <a:map from="oa_flow_category_id" to="oa_flow_category_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="oa_flow_sub_category_desc" displayField="description" options="oa_flow_sub_category_ds" prompt="BPM_PAGE_GROUPS.OA_FLOW_SUB_CATEGORY" readOnly="true" returnField="oa_flow_sub_category_id" valueField="oa_flow_sub_category_id">
                        <a:mapping>
                            <a:map from="oa_flow_sub_category_id" to="oa_flow_sub_category_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="oa_flow_category_id"/>
                    <a:field name="oa_flow_sub_category_id"/>
                    <a:field name="auto_approve_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="interface_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                </a:fields>
                <a:events>
                    <!-- <a:event name="submitsuccess" handler="doQuery"/> -->
                    <a:event name="update" handler="updateHandler"/>
                    <a:event name="load" handler="doLoad"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form title="BPM_PAGE_GROUPS.OA_PROCEDURE_TYPE_QUERY">
                <a:hBox>
                    <a:comboBox name="group_type_desc" bindTarget="bpm_page_groups_query_ds"/>
                    <a:textField name="group_code" bindTarget="bpm_page_groups_query_ds"/>
                    <a:textField name="group_desc" bindTarget="bpm_page_groups_query_ds"/>
                </a:hBox>
                <a:hBox>
                    <a:lov name="template_desc" bindTarget="bpm_page_groups_query_ds"/>
                    <a:comboBox name="oa_flow_category_desc" bindTarget="bpm_page_groups_query_ds"/>
                    <a:comboBox name="oa_flow_sub_category_desc" bindTarget="bpm_page_groups_query_ds"/>
                </a:hBox>
            </a:form>
            <a:hBox>
                <a:button click="doQuery" text="HAP_QUERY"/>
                <a:button click="doReset" text="HAP_RESET"/>
                <a:button click="doPageGroupRefreshCache" text="BPM.REFRESH_CACHE"/>
            </a:hBox>
            <a:grid id="grid" bindTarget="bpm_page_groups_result_ds" marginHeight="170" marginWidth="40" navBar="true">
                <a:toolBar>
                    <a:button type="add"/>
                    <a:button type="clear"/>
                    <a:button type="save"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="group_type_desc" editorFunction="comboboxEditFunction"/>
                    <a:column name="group_code" editorFunction="textEditFunction"/>
                    <a:column name="group_desc" editor="textEdit"/>
                    <a:column name="template_desc" editorFunction="lovEditFunction"/>
                    <a:column name="oa_flow_category_desc" editor="comboboxEdit"/>
                    <a:column name="oa_flow_sub_category_desc" editor="comboboxEdit"/>
                    <a:column name="enabled_flag" editor="checkboxEdit" width="50"/>
                    <a:column name="auto_approve_flag" editor="checkboxEdit" width="50"/>
                    <a:column name="interface_flag" editor="checkboxEdit" width="50"/>
                    <a:column name="fields_define" align="center" renderer="fieldslinkFunction" width="80"/>
                    <a:column name="pages_configure" align="center" renderer="pageslinkFunction" width="80"/>
                    <a:column name="query_auth_alloc" align="center" renderer="alloclinkFunction" width="80"/>
                    <a:column name="events_configure" align="center" renderer="eventslinkFunction" width="80"/>
                </a:columns>
                <a:editors>
                    <a:checkBox id="checkboxEdit"/>
                    <a:comboBox id="comboboxEdit"/>
                    <a:textField id="textEdit"/>
                    <a:textField id="textEdit_upper" typeCase="upper"/>
                    <a:lov id="lovEdit"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
