<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: wangguangfan  
    $Date: 2013-3-26 下午02:34:07  
    $Revision: 1.0  
    $Purpose: 绩效考评活动创建
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view package="aurora.ui.std" template="default">
        <a:link id="pm_apr_activity_batch_svc_link" url="${/request/@context_path}/modules/pm/PM1070/pm_apr_activity_batch.svc"/>
        <a:link id="pm_apr_activity_ds_query_link" url="${/request/@context_path}/autocrud/pm.PM1070.pm_apr_activity_maintain/query?activity_id=${/parameter/@activity_id}"/>
        <a:link id="pm_apr_activity_object_ds_query_link" url="${/request/@context_path}/autocrud/pm.PM1070.pm_apr_activity_object_maintain/query?activity_id=${/parameter/@activity_id}"/>
        <a:link id="pm_apr_activity_refresh_object" model="db.pm_apr_act_core_pkg.refresh_activity_object" modelaction="execute"/>
        <script><![CDATA[
        	function confirmFunction(){
        	    var header_ds = $('pm_apr_activity_ds');
        	    var object_ds = $('pm_apr_activity_object_ds');
        	    if(header_ds.validate() && object_ds.validate()){
					header_ds.setSubmitUrl($('pm_apr_activity_batch_svc_link').getUrl());
					header_ds.submit();
        	    }
        	    
        	}
        	
        	function submitsuccessFunction(ds,res){
        	    document.getElementById('refreshObject').style.display='';
        	    
        	}
        	
        	function returnFunction(){
        	    if('${/parameter/@type}' == 'add'){//新增
        	    	$('activity_create_window').close();
        	    }
        	    if('${/parameter/@type}' == 'modify'){//修改
        	        $('activity_modify_window').close();
        	    }
        	    $('pm_apr_activity_grid').query();
        	}
        	
        	function dateValidatorFunction(record, name, value) { //日期校验方法
                if (name == 'date_from' || name == 'date_to') {
                    var start_date = record.get('date_from');
                    var end_date = record.get('date_to');
                    if ( !! end_date) { //由于结束日期非必填，只有在结束日期填了才进行比较
                        if (!compareDate(start_date, end_date)) {
                            return '${l:START_GREATER_THAN_END}'; //校验不通过返回字符串
                        }
                    }
                    return true; //校验通过返回true
                }
            }
            
            function objectDateValidator(record, name, value){
                var header_start_date = $('pm_apr_activity_ds').getCurrentRecord().get('date_from');
                var header_end_date = $('pm_apr_activity_ds').getCurrentRecord().get('date_to');
                if (name == 'date_from' || name == 'date_to') {
                    var start_date = record.get('date_from');
                    var end_date = record.get('date_to');
                    if ( !! end_date) { //由于结束日期非必填，只有在结束日期填了才进行比较
                        if (!compareDate(start_date, end_date)) {
                            return '${l:START_GREATER_THAN_END}'; //校验不通过返回字符串
                        }
                    }
                    if(header_start_date != null && header_start_date != ''){
                        if(start_date < header_start_date || end_date < header_start_date){
                            return '${l:PM_APR_ACTIVITY.ACTIVITY_DATE_VALIDATOR}';
                        }
                    }
                    if(header_end_date != null && header_end_date != ''){
                        if(start_date > header_end_date || end_date > header_end_date){
                            return '${l:PM_APR_ACTIVITY.ACTIVITY_DATE_VALIDATOR}';
                        }
                    }
                    return true; //校验通过返回true
                }
            }
            
            function compareDate(start, end) {
                if (start > end) {
                    return false;
                }
                return true;
            }
            
            function updateFunction(ds,record,name,value,oldvalue){
                if(name == "position_name"){
                    if(value){
                        var position_id = record.get('position_id');
                        record.getMeta().getField('employee_name').setLovPara('position_id',position_id);
                    }else{
                        record.set('employee_name','');
                        record.set('employee_code','');
                        record.set('employee_id',null);
                    }
                    if(value != oldvalue){
                        record.set('employee_name','');
                        record.set('employee_code','');
                        record.set('employee_id',null);
                    }
                }
                
            }
            
            function addFunction(ds,record,index){
                var header_start_date = $('pm_apr_activity_ds').getCurrentRecord().get('date_from');
                var header_end_date = $('pm_apr_activity_ds').getCurrentRecord().get('date_to');
                if(header_start_date != null && header_start_date != ''){
                	record.set('date_from',header_start_date);
                }
                if(header_end_date != null && header_end_date != ''){
                    record.set('date_to',header_end_date);
                }
            }
            
            //刷新对象
            function refreshObjectFunction(){
                var p_activity_id = $('pm_apr_activity_ds').getCurrentRecord().get('activity_id');
                var param = [];
                var data = {activity_id:p_activity_id};
                param.push(data);
                Aurora.request({
					para:param,
					url:$('pm_apr_activity_refresh_object').getUrl(),
					success:function(){
					    $('pm_apr_activity_object_ds').setQueryParameter('activity_id',p_activity_id);
						$('pm_apr_activity_object_ds').query();
					},
					scope:this
				});
            }
            
            function editorFunction(record,name){
                if(name == 'employee_name'){
                    var position_id = record.get('position_id');
                    if(!position_id){
                        return '';
                    }
                    record.getMeta().getField('employee_name').setLovPara('position_id',position_id);
                    return 'lov_id';
                }
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="pm_period_type_ds" lookupCode="PM_APR_ACTIVITY_PERIOD"/>
            <a:dataSet id="pm_apr_activity_ds" autoCreate="true" model="pm.PM1070.pm_apr_activity_maintain">
                <a:fields>
                    <a:field name="activity_name" required="true"/>
                    <a:field name="period_type_name" displayField="code_value_name" options="pm_period_type_ds" required="true" returnField="period_type" valueField="code_value"/>
                    <a:field name="period_type"/>
                    <a:field name="manager_name" autoComplete="true" autoCompleteField="name" lovGridHeight="350" lovHeight="480" lovService="pm.PM1070.pm_apr_activity_employee_lov" lovWidth="500" prompt="EXP_EMPLOYEES.EMPLOYEE_ID" required="true" title="EXP_EMPLOYEES.QUERY">
                        <a:mapping>
                            <a:map from="employee_id" to="manager_id"/>
                            <a:map from="name" to="manager_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="date_from" required="true" validator="dateValidatorFunction"/>
                    <a:field name="date_to" required="true" validator="dateValidatorFunction"/>
                    <a:field name="activity_status" defaultValue="PLAN"/>
                    <a:field name="calculation_status" defaultValue="WAITING"/>
                    <a:field name="company_id" defaultValue="${/session/@company_id}"/>
                    <a:field name="result_version_num" defaultValue="1"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="submitsuccessFunction"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pm_apr_activity_object_ds" bindName="details" bindTarget="pm_apr_activity_ds" model="pm.PM1070.pm_apr_activity_object_maintain" selectable="true">
                <a:fields>
                    <a:field name="position_name" autoComplete="true" autoCompleteField="position_name" lovGridHeight="300" lovHeight="460" lovService="exp.EXP1050.exp_employee_assign_position_lov?company_id=${/session/@company_id}" lovWidth="470" title="EXP_EMPLOYEE_ASSIGN.CHOOSEZ_POSITION">
                        <a:mapping>
                            <a:map from="position_id" to="position_id"/>
                            <a:map from="position_name" to="position_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="employee_name" autoComplete="true" autoCompleteField="name" lovGridHeight="350" lovHeight="480" lovService="pm.PM1070.pm_apr_activity_position_employee_lov" lovWidth="500" prompt="EXP_EMPLOYEES.EMPLOYEE_ID" required="true" title="EXP_EMPLOYEES.QUERY">
                        <a:mapping>
                            <a:map from="employee_id" to="employee_id"/>
                            <a:map from="employee_code" to="employee_code"/>
                            <a:map from="name" to="employee_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="date_from" required="true" validator="objectDateValidator"/>
                    <a:field name="date_to" required="true" validator="objectDateValidator"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="updateFunction"/>
                    <a:event name="add" handler="addFunction"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form column="2" labelWidth="100" title="PM_APR_ACTIVITY.ACTIVITY_MANAGE" width="730">
                <a:textField name="activity_name" bindTarget="pm_apr_activity_ds" prompt="PM_APR_ACTIVITY.ACTIVITY_NAME"/>
                <a:comboBox name="period_type_name" bindTarget="pm_apr_activity_ds" prompt="PM_APR_ACTIVITY.PERIOD_TYPE"/>
                <a:datePicker name="date_from" bindTarget="pm_apr_activity_ds" prompt="PM_APR_ACTIVITY.DATE_FROM"/>
                <a:datePicker name="date_to" bindTarget="pm_apr_activity_ds" prompt="PM_APR_ACTIVITY.DATE_TO"/>
                <a:lov name="manager_name" bindTarget="pm_apr_activity_ds" prompt="PM_APR_ACTIVITY.MANAGER_ID"/>
            </a:form>
            <a:hBox>
                <a:button id="confirmId" click="confirmFunction" text="PROMPT.SAVE"/>
                <a:button click="returnFunction" text="PROMPT.RETURN"/>
                <a:button id="refreshObject" click="refreshObjectFunction" text="PM_APR_ACTIVITY.REFRESH_OBJECT"/>
            </a:hBox>
            <a:grid bindTarget="pm_apr_activity_object_ds" height="300" navBar="true" width="730">
                <a:toolBar>
                    <a:button id="addId" type="add"/>
                    <a:button id="deleteId" type="delete"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="position_name" editor="lov_id" prompt="EXP_EMPLOYEE_ASSIGN.POSITION_NAME" width="200"/>
                    <a:column name="employee_name" editorFunction="editorFunction" prompt="EXP_EMPLOYEE.EMPLOYEE_NAME"/>
                    <a:column name="employee_code" prompt="EXP_EMPLOYEES_VL.EMPLOYEE_CODE"/>
                    <a:column name="date_from" editor="date_id" prompt="PM_APR_ACTIVITY.DATE_FROM" renderer="Aurora.formatDate"/>
                    <a:column name="date_to" editor="date_id" prompt="PM_APR_ACTIVITY.DATE_TO" renderer="Aurora.formatDate"/>
                </a:columns>
                <a:editors>
                    <a:lov id="lov_id"/>
                    <a:datePicker id="date_id"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
        	function init(){
        	    document.getElementById('refreshObject').style.display='none';
        	    var type = '${/parameter/@type}';
        	    if(type == 'modify'){
        	        document.getElementById('refreshObject').style.display='';
        	        $('pm_apr_activity_ds').setQueryUrl($('pm_apr_activity_ds_query_link').getUrl());
        	        $('pm_apr_activity_object_ds').setQueryUrl($('pm_apr_activity_object_ds_query_link').getUrl());
        	        $('pm_apr_activity_ds').query();
        	        $('pm_apr_activity_object_ds').query();
        	    }
        	}
        	init();
        ]]></script>
    </a:view>
</a:screen>
