<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: gaoyang  
    $Date: 2011-10-12 下午1:32:45  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:c="aurora.application.action" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <a:model-query model="pur.pur_requisition_line_assign_record" rootPath="record"/>
        <a:model-query model="pur.pur_requisition_line_assign_typelist" rootPath="typelist"/>
        <a:model-query model="pur.pur_requisition_line_assign_currency_code" rootPath="currency_code"/>
        <a:model-query model="pur.PUR5010.pur_requisition_line_assign_precision1" rootPath="precision1"/>
        <a:model-query model="pur.pur_requisition_line_assign_headinfo" rootPath="headinfo"/>
        <a:model-query model="pur.pur_requisition_line_assign" rootPath="callback"/>
        <a:model-query model="pur.pur_proxy_dimension_line_r" rootPath="line_dimension"/>
    </a:init-procedure>
    <a:view>
        <a:link id="get_exchange_rate_link_17" model="pur.get_exchange_rate" modelaction="batch_update"/>
        <a:link id="exp_expense_policy_infoinit_link_1" model="pur.exp_expense_policy_infoinit" modelaction="update"/>
        <a:link id="pur_requisition_line_assign_link_1" model="pur.pur_requisition_line_assign" modelaction="query"/>
        <a:link id="pur_requisition_line_assign_d_link" model="pur.pur_requisition_line_assign_d" modelaction="query"/>
        <a:link id="exp_employee_infoinit_link_2" model="db.exp_requisition_pkg.get_employee_info" modelaction="batch_update"/>
        <script><![CDATA[
        	var recordinti;
          	var from_currency ="${/model/currency_code/record/@functional_currency_code}";
		  	var to_currency="${/model/headinfo/record/@currency_code}";
		  	var exchage_rate_quotation ="${/model/headinfo/record/@exchange_rate_quotation}";
		 	var exchange_rate_type ='${/model/headinfo/record/@exchange_rate_type}';
		  	var exchage_rate ="${/model/headinfo/record/@exchange_rate}";
		 	 var empinit ={};
        	function backtolist(){
        		$('pur_requisition_line_assign_screen').close();
        	}
        	function loadComplete(){
        		var record=$('pur_requisition_line_assign_query_ds').getAt(0);
        		record.set('report_date','${/model/headinfo/record/@report_date}');
        		record.set('expense_item_code','${/model/record/record/@expense_item_code}');
        		record.set('item_code','${/model/record/record/@item_code}');
        		record.set('line_amount','${/model/headinfo/record/@line_amount}');
        		var line_no ='${/model/headinfo/record/@line_no}';
        			Aurora.request({
        				url:/*${/request/@context_path}/autocrud/pur.exp_employee_infoinit/batch_update*/$('exp_employee_infoinit_link_2').getUrl(),
        				para:[{
        					employee_id:'${/parameter/@employee_id}',
        					_status:'update'
        				}],
        				success:function(res){
        					empinit = res.result.record;
        					empinit['employee_id']='${/model/headinfo/record/@employee_id}';
        				},
        				scope:this
        			});
        			Aurora.request({
        				url:/*${/request/@context_path}/autocrud/pur.pur_requisition_line_assign_d/query*/$('pur_requisition_line_assign_d_link').getUrl(),
        				para:[{
        					line_id:'${/parameter/@line_id}'
        				}],
        				success:do_line_dimension,
        				scope:this
        			});
        			Aurora.request({
        				url:/*${/request/@context_path}/autocrud/pur.pur_requisition_line_assign/query*/$('pur_requisition_line_assign_link_1').getUrl(),
        				para:[{
        					line_id:'${/parameter/@line_id}'
        				}],
        				success:callback_fun,
        				scope:this
        			});
                }
                function callback_fun(res){
                	if(res){
					  var pluscols = res.result.record;
					  recordinti =pluscols;
                	}else{
                		return;
                	}
                }
        		function do_line_dimension(res){
			     if(res){
			        var its = res.result.record;
			        var records =$('pur_requisition_line_assign_result_ds').getSelected();
			        for (var i=0;i<records.length;i++ ){
			             var id1 = records[i].get('pur_requisition_dists_id');
			             j=0;
			             while (j< its.length)
			             {
			                
			                var id2 = its[j].pur_requisition_dists_id;
			                if (id1==id2)
			                {
			                records[i].set(its[j].dimension_code_d,its[j].dimension_value_id);
			                records[i].set(its[j].dimension_code_e,its[j].description1);
			                }
			                j++;
			             }
			        }
			     }
			  } 
			  function setInitData(ds,record,index){
			  			var records=$('pur_requisition_line_assign_result_ds').getAt(0);
                      	record.set('line_number',index*10);
                      	record.set('primary_quantity',records.get('primary_quantity'));
                      	record.set('requisition_functional_amount',records.get('requisition_functional_amount'));
                      	record.set('requisition_amount',records.get('requisition_amount'));
						record.set('company_code','${/model/headinfo/record/@company_code}') ;
						record.set('responsibility_center_code','${/model/headinfo/record/@responsibility_center_code}') ;
						record.set('unit_code','${/model/headinfo/record/@unit_code}') ;
						record.set('employee_code','${/model/headinfo/record/@employeename}') ;
						record.set('company_id','${/model/headinfo/record/@company_id}') ;
						record.set('responsibility_center_id','${/model/headinfo/record/@responsibility_center_id}') ;
						record.set('unit_id','${/model/headinfo/record/@unit_id}') ;
						record.set('employee_id','${/model/headinfo/record/@employee_id}') ;    
						record.set('position_id','${/model/headinfo/record/@position_id}') ;
						record.set('position_id_display','${/model/headinfo/record/@position_id_display}') ;       
						record.set('line_id','${/parameter/@line_id}') ;
						record.set('price','${/model/headinfo/record/@price}') ;
						record.set('description','${/model/headinfo/record/@description}') ;
                        record.set('exchange_rate','${/model/headinfo/record/@exchange_rate}') ;
                        record.set('period_num','${/model/headinfo/record/@period_name}');
                        record.set('payee_type','${/model/headinfo/record/@payee_category}');
                        record.set('payee_id','${/model/headinfo/record/@payee_id}');
                        record.set('payee_code','${/model/headinfo/record/@payee_code}');
                        record.set('expense_type_id','${/model/headinfo/record/@expense_type_id}');
                        record.set('exp_req_item_id','${/model/headinfo/record/@exp_req_item_id}');
                        record.set('currency_code','${/model/headinfo/record/@currency_code}');
                        record.set('exchange_rate_type','${/model/headinfo/record/@exchange_rate_type}');
                        record.set('exchange_rate_quotation','${/model/headinfo/record/@exchange_rate_quotation}');
						/*for (var j =0;j< recordinti.length;j++){
			             record.set(recordinti[j].dimension_code_d,recordinti[j].dimension_value_id||'');
			             record.set(recordinti[j].dimension_code_e,recordinti[j].description1||'');
			             }*/
			            lineinfoinit(record);  
                        record.set('exp_requisition_dists_id','');
			  }
			  function lineinfoinit(record){
			  	var records=$('pur_requisition_line_assign_query_ds').getAt(0);
			  	if (record.get('employee_id')){
			  		record.set('p_rep_date',records.get('report_date'));
			  		Aurora.request({
        				url:/*${/request/@context_path}/autocrud/pur.exp_expense_policy_infoinit/update*/$('exp_expense_policy_infoinit_link_1').getUrl(),
        				para:[{
        					_request_data:record.data
        				}],
        				success: function(res){
								var lineinfo=res.result.record;
								var red=lineinfo[0];
									if(lineinfo['p_default_flag']=='Y'){
										 red.set('price',lineinfo['p_expense_standard']);     
									}
									/* red.set('p_upper_limit',lineinfo['p_upper_limit']);
									 red.set('p_lower_limit',lineinfo['p_lower_limit']);
									 red.set('p_event_name',lineinfo['p_event_name']);
									 red.set('p_commit_flag',lineinfo['p_commit_flag']);
									 red.set('p_changeable_flag',lineinfo['p_changeable_flag']);
									var price = re.get('price') ;
									var  quantity =red.get('primary_quantity');
									red.set('requisition_amount',ForDight(price*quantity,'${/model/headinfo/record/@precision}'));
									red.set('requisition_functional_amount',price*quantity*red.get('exchange_rate')); */   
								
							},
        				scope:this
        			});
			  	}
			  }
			function ForDight(Dight,How){ 
			var Dight_value = Math.round (Dight*Math.pow(10,How))/Math.pow(10,How); 
			return Dight_value; 
			} 
			function afterEdit(ds,record,name,value,oldvalue){
				if (name=="period_num"){
				   var exchange_period_name = record.get('period_num');
				   if (exchange_rate_type=='PERIOD'){
				    Aurora.request({
        				url:/*${/request/@context_path}/autocrud/pur.get_exchange_rate/batch_update*/$('get_exchange_rate_link_17').getUrl(),
        				para:[{
        					from_currency: from_currency,
        					to_currency: to_currency ,
        					exchange_rate_type: exchange_rate_type ,
        					exchange_period_name:exchange_period_name
        				}],
        				success:inst,
        				scope:this
        			});
				    }
				}
				else if (name=='company_code'){
				
				    record.set('unit_code','');
				    record.set('employee_code','');
				    record.set('responsibility_center_code','');
				    record.set('responsibility_center_id','');
				    record.set('unit_id','');
				    record.set('employee_id','');
				    record.set('position_id','');
				    record.set('position_id_display','');
				}
				else if (name=='employee_code'){
					record.set('position_id','');
				    record.set('position_id_display','');
				    lineinfoinit(record);
			
				} else if(name == 'price' || name == 'primary_quantity'){
					var records=$('pur_purchase_requisition_create_query_ds').getAt(0);
				 	if(name == 'price'){
				 			if (record.get('p_upper_limit')  && record.get('p_commit_flag') && record.get('p_commit_flag')=='N'){
								if(value > record.get('p_upper_limit')){
									   Aurora.showMessage("${l:PROMPT}","${l:PUR_REQUISITION_LINE_ASSIGN.PRICE_CAN_OVER_MOST}");
									   record.set(price,oldvalue);
									   return;
									} 	 
								  }
								  if (record.get('p_lower_limit')){
									if(value <record.get('p_lower_limit')  && record.get('p_commit_flag') && record.get('p_commit_flag')=='N'){
									   Aurora.showMessage("${l:PROMPT}","${l:PUR_REQUISITION_LINE_ASSIGN.PRICE_CAN_LESS_MOST}");
									   record.set(price,oldvalue);
									   return;
									} 	 
								  }
							var price = value;
							var rate = records.get('exchange_rate');
							var quantity = record.get('primary_quantity');
							var req_amount = price * quantity;
							if(records.get('exchange_rate_quotation') == ''){
								record.set('requisition_functional_amount',ForDight(price*quantity,'${/model/precision1/record/@precision}'));
							}else if(records.get('exchange_rate_quotation') == 'DIRECT QUOTATION'){
								record.set('requisition_functional_amount',ForDight(price*quantity*rate,'${/model/precision1/record/@precision}'));
							}else{
								record.set('requisition_functional_amount',ForDight(price*quantity/rate,'${/model/precision1/record/@precision}'));
							}
							record.set('requisition_amount',req_amount);
							}
				 }
				 else if(name=='primary_quantity'){
				 			var price = value;
							var rate = record.get('exchange_rate');
							var quantity = record.get('primary_quantity');
							var req_amount = price * quantity;
							if(records.get('exchange_rate_quotation') == ''){
								record.set('requisition_functional_amount',ForDight(price*quantity,'${/model/precision1/record/@precision}'));
							}else if(records.get('exchange_rate_quotation') == 'DIRECT QUOTATION'){
								record.set('requisition_functional_amount',ForDight(price*quantity*rate,'${/model/precision1/record/@precision}'));
							}else{
								record.set('requisition_functional_amount',ForDight(price*quantity/rate,'${/model/precision1/record/@precision}'));
							}
							record.set('requisition_amount',req_amount);
				 }
			  }  
			  function inst(res){
			  	  var pluscols = res.result.record;
			  	  var currentRecord=$('pur_requisition_line_assign_result_ds').getCurrentRecord();
			   	  currentRecord.set('exchange_rate',pluscols[0].exchange_rate);
                  currentRecord.set('exchange_rate_quotation',pluscols[0].exchange_rate_quotation);
                  var rate = currentRecord.get('exchange_rate');
                  var flagt = currentRecord.get('exchange_rate_quotation');
						var amount =window.currentRecord.get('requisition_amount'); 
                    	if(flagt=='' ||  flagt=='direct quotation'){
                    	currentRecord.set('requisition_functional_amount',amount*rate);
                    	}else{
                    	currentRecord.set('requisition_functional_amount',amount/rate);
                    	}
			  }
			  /*function doSubmit(){
			  	
			  	var records=$('pur_requisition_line_assign_result_ds').getSelected();
			  	if(records.length<1){
		      	Aurora.showMessage('${l:PROMPT}','${l:PROMPT.PLEASE_SELECT}');
		      	return false;
		   		}
		   		var datas = [];
				for(var i=0; i<records.length;i++)
				{
				var data = records[i].data;
				datas.push(data);
				}
				var queryParams=new Object();
				queryParams['line']=datas;	
			  	Aurora.request({
        				url:'${/request/@context_path}/modules/pur/pur_line_assign_control.svc',
        				para:queryParams,
        				success:doSuccess,
        				scope:this
        			});
			  }
			  function doSuccess(){
			  	Aurora.showMessage('${l:PROMPT}','${l:PUR_REQUISITION_LINE_ASSIGN.SAVE_SUCCESS}');
			  }*/
		]]></script>
        <a:dataSets>
            <!-- <a:dataSet id="exp_report_assign_line_dimension" autoCreate="true">
                <a:fields>
                    <a:placeHolder id="dynamicLineFields_assign"/>
                </a:fields>
            </a:dataSet> -->
            <a:dataSet id="line_dimension_callback_ds">
                <a:datas dataSource="/model/callback"/>
            </a:dataSet>
            <!-- <a:dataSet id="position_ds" model="exp.exp_org_position"/> -->
            <a:dataSet id="pur_requisition_line_assign_query_ds" autoCreate="true">
                <a:fields>
                    <a:field name="report_date"/>
                    <a:field name="expense_item_code"/>
                    <a:field name="item_code"/>
                    <a:field name="line_amount"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="pur_requisition_line_assign_result_ds" autoQuery="true" model="pur.pur_requisition_line_assign_query" queryDataSet="pur_requisition_line_assign_query_ds" queryUrl="${/request/@context_path}/autocrud/pur.pur_requisition_line_assign_query/query?line_id=${/parameter/@line_id}" selectable="true">
                <a:fields>
                    <a:field name="description"/>
                    <a:field name="period_num" lovGridHeight="350" lovHeight="500" lovService="bgt.bgt_periods_detail_lov" lovWidth="500">
                        <a:mapping>
                            <a:map from="period_name" to="period_num"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="price"/>
                    <a:field name="primary_quantity"/>
                    <a:field name="requisition_amount"/>
                    <a:field name="requisition_functional_amount"/>
                    <a:field name="company_code" lovGridHeight="350" lovHeight="500" lovService="fnd.fnd_companies_lov" lovWidth="500" title="PUR_ORDER_LINES.COMPANY_ID">
                        <a:mapping>
                            <a:map from="code_name" to="company_code"/>
                            <a:map from="company_id" to="company_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="company_id"/>
                    <a:field name="responsibility_center_code" lovGridHeight="350" lovHeight="500" lovLabelWidth="100" lovService="fnd.fnd_responsibility_centers" lovWidth="520" title="PUR_ORDER_LINES.RESPONSIBILITY_CENTER_ID">
                        <a:mapping>
                            <a:map from="responsibility_center_name" to="responsibility_center_code"/>
                            <a:map from="responsibility_center_id" to="responsibility_center_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="responsibility_center_id"/>
                    <a:field name="unit_code" lovGridHeight="350" lovHeight="500" lovService="exp.exp_org_unit" lovWidth="500" title="PUR_ORDER_LINES.UNIT_ID">
                        <a:mapping>
                            <a:map from="unit_code_name" to="unit_code"/>
                            <a:map from="unit_id" to="unit_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="unit_id"/>
                    <a:field name="employee_code" lovGridHeight="350" lovHeight="500" lovService="exp.exp_employees_exp_req?doc_type=01&amp;auth_type=MAINTENANCE" lovWidth="500" title="PUR_REQUISITION_LINES.EMPLOYEE_ID">
                        <a:mapping>
                            <a:map from="namecode" to="employee_code"/>
                            <a:map from="employee_id" to="employee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="position_id_display" displayField="position_code" options="position_id_ds" prompt="EXP_REQUISITION_LINES.POSITION_ID" returnField="position_id" valueField="position_id"/>
                    <a:field name="exchange_rate"/>
                    <a:field name="exchange_rate_quotation"/>
                    <a:placeHolder id="dynamicLineFields"/>
                    <!-- <a:placeHolder id="dynamicLineFields_assign"/> -->
                </a:fields>
                <a:events>
                    <a:event name="add" handler="setInitData"/>
                    <a:event name="update" handler="afterEdit"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form bindTarget="pur_requisition_line_assign_query_ds" column="3" title="EXP_REQUESTION_LINE_SERVICE.TITEL">
                <a:textField name="expense_item_code" bindTarget="pur_requisition_line_assign_query_ds" prompt="PUR_REQUISITION_LINES.EXPENSE_ITEM_ID" readOnly="true"/>
                <a:textField name="item_code" bindTarget="pur_requisition_line_assign_query_ds" prompt="PUR_ORDER_LINES.ITEM_ID" readOnly="true"/>
                <a:textField name="line_amount" bindTarget="pur_requisition_line_assign_query_ds" prompt="PUR_REQUISITION_LINE_ASSIGN.LINE_AMOUNT" readOnly="true"/>
            </a:form>
            <a:hBox>
                <a:button click="backtolist" text="EXP_REQUESTION_LINE_SERVICE.BACK"/>
            </a:hBox>
            <a:grid id="pur_requisition_line_assign_grid_ds" bindTarget="pur_requisition_line_assign_result_ds" height="450" navBar="true" width="800">
                <a:toolBar>
                    <a:button type="add"/>
                    <a:button type="save"/>
                    <a:button type="delete"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="description" align="left" editor="description_grid_tf" prompt="PUR_REQUISITION_LINES.DESCRIPTION" width="100"/>
                    <a:column name="period_num" align="center" editor="company_combox" prompt="PUR_ORDER_LINES.PERIOD_NAME" width="60"/>
                    <a:column name="price" align="center" prompt="PUR_ORDER_LINES.PRICE" width="60"/>
                    <a:column name="primary_quantity" align="center" editor="numberfield" prompt="PUR_REQUISITION_DISTS.PRIMARY_QUANTITY" width="60"/>
                    <a:column name="requisition_amount" Prompt="PUR_REQUISITION_DISTS.REQUISITION_AMOUNT" align="center" width="80"/>
                    <a:column name="requisition_functional_amount" Prompt="PUR_REQUISITION_LINES.REQUISITION_FUNCTIONAL_AMOUNT" align="center" width="80"/>
                    <a:column name="company_code" Prompt="PUR_ORDER_LINES.COMPANY_ID" align="center" editor="company_combox" width="100"/>
                    <a:column name="responsibility_center_code" Prompt="PUR_ORDER_LINES.RESPONSIBILITY_CENTER_ID" align="center" editor="company_combox" width="80"/>
                    <a:column name="unit_code" Prompt="PUR_ORDER_LINES.UNIT_ID" align="center" editor="company_combox" width="80"/>
                    <a:column name="employee_code" Prompt="PUR_REQUISITION_LINES.EMPLOYEE_ID" align="center" editor="company_combox" width="80"/>
                    <a:column name="position_id_display" Prompt="PUR_REQUISITION_LINES.POSITION_ID" align="center" editor="type_combox" width="80"/>
                    <a:placeHolder id="dynamicLineColumn_dimension"/>
                </a:columns>
                <a:editors>
                    <a:textField id="description_grid_tf"/>
                    <a:numberField id="numberfield"/>
                    <a:comboBox id="type_combox"/>
                    <a:lov id="company_combox"/>
                </a:editors>
            </a:grid>
            <script><![CDATA[
				loadComplete();
			]]></script>
        </a:screenBody>
    </a:view>
    <a:view-config>
        <!-- <c:batch-config source="/model/line_dimension" targetId="dynamicLineColumn_dimension">
            <a:column name="${@dimension_code_d}" editor="company_combox" prompt="${@description}"/>
        </c:batch-config>
        <c:create-config targetId="dynamicLineFields_assign">
            <p:loop source="/model/line_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code_d}" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="440" lovService="fnd.fnd_dimension_values?dimension_id=${@dimension_id}" lovWidth="500" prompt="${@description}" required="true" title=" ">
                        <a:mapping>
                            <a:map from="dimension_value_id" to="${@dimension_code_e}"/>
                            <a:map from="description" to="${@dimension_code_d}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@dimension_code_e}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config> -->
        <c:batch-config source="/model/line_dimension" targetId="dynamicLineColumn_dimension">
            <a:column name="${@dimension_code_d}" align="center" editor="company_combox" prompt="${@description}"/>
            <!-- <a:lov name="${@dimension_code_d}" prompt="${@description}" width="80"/> -->
        </c:batch-config>
        <c:create-config targetId="dynamicLineFields">
            <p:loop source="/model/line_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code_d}" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="440" lovService="pur.PUR3851.fnd_dimension_values_v?dimension_id=${@dimension_id}" lovWidth="500" prompt="${@description}" required="true" title="${@description}">
                        <a:mapping>
                            <a:map from="dimension_value_id" to="${@dimension_code_e}"/>
                            <a:map from="description" to="${@dimension_code_d}"/>
                        </a:mapping>
                    </a:field>
                </c:process-config>
            </p:loop>
        </c:create-config>
    </a:view-config>
</a:screen>
