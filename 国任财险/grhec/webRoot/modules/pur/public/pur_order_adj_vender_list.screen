<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: zjw  
    $Date: 2011-10-11 下午02:16:41  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="pur.PUR5310.pur_item_type" rootPath="item_type"/>
        <a:model-query fetchAll="true" model="pur.PUR5310.pur_precision_value" rootPath="precision"/>
        <a:model-query fetchall="true" model="pur.pur_precision_amount" rootpath="prec"/>
    </a:init-procedure>
    <a:view>
        <a:link id="get_money_amount_link" model="pur.PUR5010.get_money_amount" modelaction="query"/>
        <div/>
        <script><![CDATA[
            function resetfunction() {
                $('pur_query_form_ds').reset();
            }
            
            function queryfunction() {
                $('pur_order_adj_vender_list_query_ds').query();
            }
            
            function beauty_price(value, record, name) {
                record.set('price', ForDight(record.get('price'), '${/model/precision/record/@precision}'));
                return ForDight(record.get('price'), '${/model/precision/record/@precision}');
            }
            
            function ForDight(Dight, How) {
                var Dight_value = Math.round(Dight * Math.pow(10, How)) / Math.pow(10, How);
                return Dight_value;
            }
            
            
            function updatefunction(dataSet, record, name, value, oldValue) {
                if (name == 'amount') {
            
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrub/pur.get_money_amount/query*/$('get_money_amount_link').getUrl(),
                        para: {
                            amount: record.get('amount'),
                            vender_item_period_id: record.get('vender_item_period_id')
                        },
                        success: function(res) {
                            var pluscols = res.result.record;
                            if (pluscols.money) {
                                record.set('money', ForDight(pluscols.money, '${/model/precision/record/@precision}'));
                                record.set('true_price', ForDight(pluscols.true_price, '${/model/precision/record/@precision}'));
                            } else {
                                record.set('money', 0);
                            }
                        },
                        scope: this
                    });
                }
            
            }
            
            function newline() {
                var records = $('pur_order_adj_vender_list_query_ds').getSelected();
                if (records.length > 0) {
                    Aurora.showInfoMessage("${l:PROMPT}", "${l:SELECT_RECORD}");
                } else {
                    for (var i = 0;i < records.length;i++) {
                        var record = records[i];
                        var amount = records[i].get('amount');
                        if (Ext.isEmpty(amount)) {
                            Aurora.showInfoMessage("${l:PROMPT}", "${l:INPUT_QUANTITY}");
                        } else {
                            //window.opener.copynewone(record.date)未完
                        }
            
                    }
                }
            }
            
            function copynewone(o) {
            
                var record = new Ext.data.Record(Ext.util.JSON.decode(o));
                var recordnew = new Ext.data.Record({
                    'head_id': '${/parameter/@head_id}'
                });
                recordnew.set('line_number', line_no);
                line_no += 10;
                recordnew.set('description', record.get('description') + record.get('item_specs') + record.get('item_model'));
                recordnew.set('item_name', record.get('description'));
                recordnew.set('item_id', record.get('item_id'));
                recordnew.set('expense_item_name', record.get('expense_description'));
            
                recordnew.set('expense_item_id', record.get('expense_item_id'));
                recordnew.set('primary_uom', record.get('primary_uom'));
                recordnew.set('unit_price', record.get('true_price'));
                recordnew.set('primary_quantity', record.get('amount'));
                recordnew.set('total_amount', ForDight(record.get('true_price') * record.get('amount'), '${/model/prec/record/@precision}'));
                recordnew.set('not_include_amount', ForDight(record.get('true_price') / (1 - record.get('rate')) * record.get('amount'), '${/model/prec/record/@precision}'));
                recordnew.set('rat_amount', ForDight(record.get('true_price') / (1 - record.get('rate')) * record.get('amount') * record.get('rate'), '${/model/prec/record/@precision}'));
            
                recordnew.set('date_from', ext.getcmp('default_requisition_date_id').getvalue());
                recordnew.set('date_to', ext.getcmp('default_requisition_date_id').getvalue());
            
                recordnew.set('vender_name', record.get('venders_desc'));
                recordnew.set('vender_id', record.get('vender_id'));
                recordnew.set('payment_method', record.get('payment_method'));
                recordnew.set('contract_id', record.get('contract_number'));
                recordnew.set('contract_header_id', record.get('contract_header_id'));
                recordnew.set('contract_id', record.get('contract_number'));
                recordnew.set('buyer_name', record.get('buyer_desc'));
                recordnew.set('buyer_id', record.get('buyer_id'));
                recordnew.set('vender_item_list_id', record.get('vender_item_list_id'));
            
                //recordnew.set('head_id', ext.getcmp('head_id').getvalue());
                //recordnew.set('exchange_rate', ext.getcmp('exchange_rate').getvalue());
                recordnew.set('company_code', empinit.company_code || '');
                recordnew.set('responsibility_center_code', empinit.responsibility_center_code || '');
                recordnew.set('unit_code', empinit.unit_code || '');
                recordnew.set('employee_code', empinit.employee_code || '');
                recordnew.set('company_id', empinit.company_id || '');
                recordnew.set('responsibility_center_id', empinit.responsibility_center_id || '');
                recordnew.set('unit_id', empinit.unit_id || '');
                recordnew.set('employee_id', empinit.employee_id || '');
                recordnew.set('rate_kind', record.get('rate_kind'));
                recordnew.set('rate', record.get('rate'));
                recordnew.set('rate_conlud_flag', 'y');
            
                //recordnew.set('exchange_rate', ext.getcmp('exchange_rate').getvalue());
                //recordnew.set('period_num', ext.getcmp('period_name').getvalue());
                // recordnew.set('position_id', ext.getcmp('position_id1').getvalue());
                //recordnew.set('position_id_display', ext.getcmp('position_id1').lastselectiontext);
            
                for (var j = 0;j < lo.length;j++) {
                    recordnew.set(lo[j].expense_object_type_code, lo[j].default_object_desc || '');
            
                    recordnew.set('_' + lo[j].expense_object_type_code, lo[j].default_object_id || '');
            
                }
                //var grid = Ext.getCmp('grid');
                //var store = grid.getStore();
                //var cmm = grid.getColumnModel();
                ///
                for (var kk = 1;kk <= 10;kk++) {
                    cmdata = 'D' + kk;
                    cmvalue = 'E' + kk;
                    if (cmm.findColumnIndex(cmdata) != -1) {
                        recordnew.set(cmdata, record.get(cmdata) || '');
                        recordnew.set(cmvalue, record.get(cmvalue) || '');
            
                    }
            
                }
                $('pur_order_adj_vender_list_query_ds').add(recordnew);
            
            }
            
            function ForDight(Dight, How) {
                var Dightv = Math.round(Dight * Math.pow(10, How)) / Math.pow(10, How);
                return Dightv;
            }]]></script>
        <a:dataSets>
            <a:dataSet id="item_type_ds">
                <a:datas datasource="/model/item_type"/>
            </a:dataSet>
            <a:dataSet id="pur_query_form_ds" autoCreate="ture" autoQuery="true">
                <a:fields>
                    <a:field name="default_requisition_date_id" defaultValue="${/parameter/default_requisition_date_id}"/>
                    <a:field name="currency_code" defaultValue="${/parameter/currency_code}"/>
                    <a:field name="p_payment_object_desc"/>
                    <a:field name="item_type_name" displayField="description" options="item_type_ds" returnField="item_type_id" valueField="item_type_id"/>
                    <a:field name="dscription"/>
                    <a:field name="item_code"/>
                    <a:field name="vender_id" defaultValue="${/parameter/@vender_id}"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="pur_order_adj_vender_list_query_ds" autoQuery="true" model="pur.PUR5310.pur_order_adj_vender_list_query" queryDataSet="pur_query_form_ds" selectable="true">
                <a:fields>
                    <a:field name="item_code"/>
                    <a:field name="description"/>
                    <a:field name="item_specs"/>
                    <a:field name="item_model"/>
                    <a:field name="price"/>
                    <a:field name="amount"/>
                    <a:field name="money"/>
                    <a:field name="item_id"/>
                    <a:field name="expense_item_id"/>
                    <a:field name="expense_description"/>
                    <a:field name="primary_uom"/>
                    <a:field name="lead_time"/>
                    <a:field name="vender_id"/>
                    <a:field name="payment_method"/>
                    <a:field name="buyer_id"/>
                    <a:field name="buyer_desc"/>
                    <a:field name="vender_item_period_id"/>
                    <a:field name="true_price"/>
                    <a:field name="contract_number"/>
                    <a:field name="vender_item_list_id"/>
                    <a:field name="rate_kind"/>
                    <a:field name="rate_kind_desc"/>
                    <a:field name="rate"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="updatefunction"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form bindTarget="pur_query_form_ds" row="1" title="PUR_ADJ_VENDER_LIST.ITEM" width="740">
                <a:comboBox name="item_type_name" prompt="PUR_ADJ_VENDER_LIST.ITEM_TYPE"/>
                <a:textField name="item_code" prompt="ITEM_CODE"/>
                <a:textField name="dscription" prompt="INV_SYSTEM_ITEMS.DESCRIPTION"/>
            </a:form>
            <a:hBox>
                <a:button click="queryfunction" text="PROMPT.QUERY"/>
                <a:button click="resetfunction" text="PROMPT.RESET"/>
                <a:button click="newline" text="CREATE_REQUESTION"/>
            </a:hBox>
            <a:grid id="pur_order_adj_vender_list_query_ds_grid" bindTarget="pur_order_adj_vender_list_query_ds" height="350" navBar="true" width="740">
                <a:columns>
                    <a:column name="item_code" prompt="ITEM_CODE"/>
                    <a:column name="description" prompt="INV_SYSTEM_ITEMS.DESCRIPTION"/>
                    <a:column name="item_specs" prompt="INV_SYSTEM_ITEMS.ITEM_SPECS"/>
                    <a:column name="item_model" prompt="INV_SYSTEM_ITEMS.ITEM_MODEL"/>
                    <a:column name="price" Renderer="beauty_price" prompt="PUR_ORDER_LINES.PRICE"/>
                    <a:column name="amount" editor="amount_nf" prompt="ACP_INVOICE_LINES.QUANTITY"/>
                    <a:column name="money" prompt="ACP_ACP_REQUISITION_HDS.AMOUNT"/>
                </a:columns>
                <a:editors>
                    <a:numberField id="amount_nf"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
