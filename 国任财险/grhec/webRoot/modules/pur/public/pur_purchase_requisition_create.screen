<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: gaoyang  
    $Date: 2011-10-8 下午5:07:48  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:c="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query model="pur.pur_req_ref_obj_types_query_r" rootPath="expense_object"/>
        <a:model-query model="pur.pur_proxy_dimension_r" rootPath="head_dimension"/>
        <a:model-query model="pur.pur_req_ref_obj_types_query_r_line" rootPath="line_expense_object"/>
        <a:model-query model="pur.pur_proxy_dimension_line_r" rootPath="line_dimension"/>
        <a:model-query model="pur.pur_purchase_requisition_create_sid" rootPath="sid"/>
        <a:model-query model="pur.pur_purchase_requisition_create_record" rootPath="record"/>
        <a:model-query model="pur.pur_purchase_requisition_create_cur_emp" rootPath="cur_emp"/>
        <a:model-query model="pur.pur_purchase_requisition_create_precision1" rootPath="precision1"/>
        <a:model-query model="pur.pur_purchase_requisition_create_type" rootPath="type"/>
        <a:model-query model="pur.pur_purchase_requisition_create_currency_code" rootPath="currency_code"/>
        <a:model-query model="pur.exp_requisition_employee_positionlist_init" rootPath="positionlist_init"/>
        <a:model-query autoCount="false" defaultWhereClause="currency_code=${/parameter/@currency_code}" fetchAll="true" model="gld.gld_currency_vl" rootPath="precision"/>
    </a:init-procedure>
    <a:view>
        <a:link id="sys_fun_get_period_name_link" model="csh.sys_fun_get_period_name" modelaction="query"/>
        <a:link id="get_exchange_rate_link" model="expm.get_exchange_rate" modelaction="query"/>
        <a:link id="exp_employee_infoinit_link" model="db.exp_requisition_pkg.get_employee_info" modelaction="batch_update"/>
        <a:link id="uploadFile_link" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="pur_purchase_requisition_choice_link" url="${/request/@context_path}/modules/pur/public/pur_purchase_requisition_choice.screen"/>
        <a:link id="pur_purchase_requisition_update_link" url="${/request/@context_path}/modules/pur/public/pur_purchase_requisition_update.screen"/>
        <a:link id="pur_requisition_create_save_control_link" url="${/request/@context_path}/modules/pur/public/pur_requisition_create_save_control.svc"/>
        <a:link id="pur_adj_vender_list_link" url="${/request/@context_path}/modules/pur/public/pur_adj_vender_list.screen"/>
        <a:link id="sys_fun_get_period_name_link_6" model="csh.sys_fun_get_bgt_period_name" modelaction="query"/>
        <a:link id="get_money_amount_link_2" model="pur.PUR5010.get_money_amount" modelaction="query"/>
        <style><![CDATA[
            .accordion-box td{
                vertical-align:top;
            }
        ]]></style>
        <script><![CDATA[

            var lineFields = ['line_number', 'description', 'item_name', 'expense_item_name', 'unit_price', 'primary_quantity', 'requisition_amount', 'date_from', 'date_to', 'period_num', 'primary_uom_desc', 'requisition_functional_amount', 'buyer_name', 'vender_name', 'contract_id', 'payment_schedule_line_code', 'company_code', 'responsibility_center_code', 'unit_code', 'employee_code', 'position_id_display'];
            var line_no = 10;
            var headDim = [];
            var lineDim = [];
            var headObj = [];
            var lineObj = [];
            var emp_info = {};
            
            function adj_vender_list() {
                if ($('pur_purchase_requisition_create_query_ds').validate()) {
                    var record = $('pur_purchase_requisition_create_query_ds').getAt(0);
                    var records = $('pur_purchase_requisition_create_result_ds').getCurrentRecord();
                    var date_id = record.get('default_requisition_date');
                    var currency_code = record.get('currency_code');
                    var url = /*pur_adj_vender_list.screen*/
                    $('pur_adj_vender_list_link').getUrl() + '?currency_code=' + currency_code + '&default_requisition_date_id=' + Aurora.formatDate(date_id) + '&emp_info=' + emp_info;
                    new Aurora.Window({
                        url: url,
                        title: "${l:VENDER_LIST}",
                        id: 'pur_adj_vender_list_ds',
                        width: 850,
                        height: 600
                    });
                } else {
                    return;
                }
            }
            
            function setHeadObj() {
                var records = $('exp_report_head_object').getAll();
                for (var i = 0;i < headObj.length;i++) {
                    headObj[i]['default_object_id'] = records[0].get(headObj[i].forname);
                    headObj[i]['p_desc'] = records[0].get(headObj[i].expense_object_type_code);
                    headObj[i]['head_id'] = '${/model/sid/record/@head_id}';
                }
            }
            
            function doSave(newoneDispatch) {
                if (!$('pur_purchase_requisition_create_query_ds').validate()) {
                    return;
                }
                if (!$('pur_purchase_requisition_create_result_ds').validate()) {
                    return;
                }
                if (!$('exp_report_head_object').validate()) {
                    return;
                }
                if (!$('exp_report_head_dimension').validate()) {
                    return;
                }
                if ($('pur_purchase_requisition_create_result_ds').getAll().length == 0) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PLEASE_INSERT_LINE_DATA}', null, 250, 100);
                    return;
                }
            
                var headRecord = $('pur_purchase_requisition_create_query_ds').getAt(0);
                var lineRecords = $('pur_purchase_requisition_create_result_ds').getAll();
                var param = headRecord.data;
                var headDimData = $('exp_report_head_dimension').getAt(0).data;
                var headObjData = $('exp_report_head_object').getAt(0).data;
                for (var key in headDimData) {
                    param[key] = headDimData[key];
                }
                for (var key in headObjData) {
                    param[key] = headObjData[key];
                }
                param['details'] = [];
                for (var i = 0;i < lineRecords.length;i++) {
                    var record = lineRecords[i];
                    for (var j = 0;j < headDim.length;j++) {
                        record.set(headDim[j].dimension_code_e, headRecord.get(headDim[j].dimension_code_e));
                    }
                    record.set('source_document_type', 'PUR_PURCHASE_REQ_LINES');
                    var los = [];
                    for (field in record.data) {
                        for (var k = 0;k < lineObj.length;k++) {
                            var loKey = '_' + lineObj[k]['expense_object_type_code'];
                            var loKey1 = lineObj[k]['expense_object_type_id'];
                            var loKey2 = lineObj[k]['expense_object_type_code'];
                            if (field == loKey) {
                                var llo = {};
                                llo['expense_object_type_id'] = loKey1;
                                llo['default_object_id'] = record.data[field];
                                llo['head_id'] = '${/model/sid/record/@head_id}';
                                llo['p_desc'] = record.data[loKey2];
                                los.push(llo);
                                break;
                            }
                        }
                    }
                    record.data['details'] = los;
                    param['details'].push(record.data);
                }
                setHeadObj();
                param['obj_details'] = headObj;
                Aurora.request({
                    url: /*pur_requisition_create_save_control.svc*/
                    $('pur_requisition_create_save_control_link').getUrl(),
                    para: param,
                    success: function() {
                        if (typeof(newoneDispatch) == 'function') {
                            newoneDispatch();
                        } else {
                            window.location.href = /*pur_purchase_requisition_update.screen*/
                            $('pur_purchase_requisition_update_link').getUrl() + '?head_id=' + $('pur_purchase_requisition_create_query_ds').getAt(0).get('head_id') + '&requisition_type_id=' + '${/parameter/@requisition_type_id}' + '&employee_id=' + '${/parameter/@employee_id}' + '&company_id=' + '${/session/@company_id}';
                        }
                    },
                    scope: this
                });
            }
            
            function intiemp(res) {
                emp_info = res.result.record;
            }
            
            function newoneDispatch() {
                window.location.href = /*pur_purchase_requisition_choice.screen*/
                $('pur_purchase_requisition_choice_link').getUrl();
            }
            
            function attch() {
                var url = /*${/request/@context_path}/uploadFile.screen*/
                $('uploadFile_link').getUrl() + '?table_name=PUR_REQUISITION_HEADERS&header_id=${/model/sid/record/@head_id}';
                new Aurora.Window({
                    url: url,
                    title: '${l:ATM.UPLOAD_ATTACHMENT}',
                    id: 'check_upload_file_screen',
                    width: 600,
                    height: 400
                });
            }
            
            function doCreate() {
                var okCan = Aurora.showConfirm('${l:PROMPT}', '${l:PROMPTS.SAVE_CONTINUE}', function() {
                    doSave(newoneDispatch);
                    okCan.close();
                }, null, 250, 100);
            }
            
            function doPrint() {
                return;
            }
            
            function newAdd(ds, record, index) {
                var selectedLines = ds.getSelected();
                record.set('line_number', index * 10);
                if (!selectedLines || selectedLines.length == 0) {
                    var record_one = $('pur_purchase_requisition_create_query_ds').getAt(0);
                    record_one.getField('requisition_date').setReadOnly(true);
                    record_one.getField('attachment_num').setReadOnly(true);
                    record_one.getField('position_id_display').setReadOnly(true);
                    record_one.getField('default_requisition_date').setReadOnly(true);
                    record_one.getField('exchange_rate_type_name').setReadOnly(true);
                    record_one.getField('description').setReadOnly(true);
                    record.set('head_id', record_one.get('head_id'));
                    //record.set('exchange_rate', record_one.get('exchange_rate'));
                    record.set('company_code', emp_info.company_code || '');
                    record.set('responsibility_center_code', emp_info.responsibility_center_code || '');
                    record.set('unit_code', emp_info.unit_code || '');
                    record.set('employee_code', emp_info.employee_code || '');
                    record.set('company_id', emp_info.company_id || '');
                    record.set('responsibility_center_id', emp_info.responsibility_center_id || '');
                    record.set('unit_id', emp_info.unit_id || '');
                    record.set('employee_id', emp_info.employee_id || '');
                    record.set('exchange_rate', record_one.get('exchange_rate'));
                    record.set('period_num', record_one.get('period_name'));
                    record.set('position_id_display', record_one.get('position_id_display'));
                    record.set('position_id', record_one.get('position_id'));
                    record.set('date_from', record_one.get('default_requisition_date'));
                    record.set('date_to', record_one.get('default_requisition_date'));
                    
                    if (!record.get('from_adj')) {
                        record.set('primary_quantity', 1);
                        record.set('requisition_amount', '');
                        record.set('requisition_functional_amount', '');
                    }
                } else {
                    var lineRecord = selectedLines[0];
            
                    record.set('head_id', lineRecord.get('head_id'));
                    record.set('exchange_rate', lineRecord.get('exchange_rate'));
                    record.set('description', lineRecord.get('description'));
                    record.set('item_name', lineRecord.get('item_name'));
                    record.set('item_id', lineRecord.get('item_id'));
                    record.set('expense_item_name', lineRecord.get('expense_item_name'));
                    record.set('expense_item_id', lineRecord.get('expense_item_id'));
                    record.set('unit_price', lineRecord.get('unit_price'));
                    record.set('primary_quantity', lineRecord.get('primary_quantity'));
                    record.set('requisition_amount', lineRecord.get('requisition_amount'));
                    record.set('date_from', lineRecord.get('date_from'));
                    record.set('date_to', lineRecord.get('date_to'));
                    record.set('period_num', lineRecord.get('period_num'));
                    record.set('primary_uom_desc', lineRecord.get('primary_uom_desc'));
                    record.set('requisition_functional_amount', lineRecord.get('requisition_functional_amount'));
                    record.set('buyer_name', lineRecord.get('buyer_name'));
                    record.set('buyer_id', lineRecord.get('buyer_id'));
                    record.set('vender_name', lineRecord.get('vender_name'));
                    record.set('contract_id', lineRecord.get('contract_id'));
                    record.set('contract_header_id', lineRecord.get('contract_header_id'));
                    record.set('payment_schedule_line_code', lineRecord.get('payment_schedule_line_code'));
                    record.set('payment_schedule_line_id', lineRecord.get('payment_schedule_line_id'));
                    record.set('company_code', lineRecord.get('company_code'));
                    record.set('company_id', lineRecord.get('company_id'));
                    record.set('responsibility_center_code', lineRecord.get('responsibility_center_code'));
                    record.set('responsibility_center_id', lineRecord.get('responsibility_center_id'));
                    record.set('unit_code', lineRecord.get('unit_code'));
                    record.set('unit_id', lineRecord.get('unit_id'));
                    record.set('employee_code', lineRecord.get('employee_code'));
                    record.set('employee_id', lineRecord.get('employee_id'));
                    record.set('position_id_display', lineRecord.get('position_id_display'));
                    record.set('position_id', lineRecord.get('position_id'));
                    for (i = 1;i <= 10;i++) {
                        var dim = 'd' + i;
                        var dime = 'e' + i;
                        record.set(dim, lineRecord.get(dim));
                        record.set(dime, lineRecord.get(dime));
                    }
                }
            }
            
            function loadComplete() {
                var dataSet = $('pur_purchase_requisition_create_query_ds');
                dataSet.create();
                var p_date = new Date();
                p_date = p_date.format('yyyy-mm-dd');
                var records = dataSet.getAt(0);
                records.set('head_id', '${/model/sid/record/@head_id}');
                records.set('requisition_type_id', '${/parameter/@requisition_type_id}');
                records.set('exp_requisition_type_name', '${/model/type/record/@description}');
                records.set('employee_name', '${/model/record/record/@name}');
                records.set('employee_id', '${/parameter/@employee_id}');
                records.set('employee_code', '${/model/cur_emp/record/@employee_code}');
                records.set('currency_code', '${/parameter/@currency_name}');
                records.set('default_requisition_date', p_date);
                records.set('requisition_date', p_date);
                if ('${/parameter/@currency_name}' != '${/model/currency_code/record/@functional_currency_code}') {
                    records.getField('exchange_rate_type_name').setReadOnly(false);
                    records.getField('exchange_rate_type_name').setRequired(true);
                }
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.exp_employee_infoinit/batch_update*/
                    $('exp_employee_infoinit_link').getUrl(),
                    para: [{
                        employee_id: '${/parameter/@employee_id}',
                        _status: 'update'
                    }],
                    success: function(res) {
                        emp_info = res.result.record;
                    },
                    scope: this
                });
                initDynamic();
            }
            
            function initDynamic() {
                var headObjRecords = $('head_object_ds').getAll();
                for (var i = 0;i < headObjRecords.length;i++) {
                    headObj.push(headObjRecords[i].data);
                }
                var headDimRecords = $('head_dimension_ds').getAll();
                for (var i = 0;i < headDimRecords.length;i++) {
                    headDim.push(headDimRecords[i].data);
                }
                var lineObjRecords = $('line_object_ds').getAll();
                for (var i = 0;i < lineObjRecords.length;i++) {
                    lineObj.push(lineObjRecords[i].data);
                }
                var lineDimRecords = $('line_dimension_ds').getAll();
                for (var i = 0;i < lineDimRecords.length;i++) {
                    lineDim.push(lineDimRecords[i].data);
                }
            }
            
            function do_expense_item(record, name, value) {
                var machine_field = record.getField('expense_item_name');
                machine_field.setLovPara('company_id', record.get('company_id'));
                machine_field.setLovService('pur.pur_expense_item_lov');
                return 'lov_editor';
            }
            
            function do_lov_editor(record, name, value) {
            
                if (record.get('from_adj')) {
                    return '';
                } else {
                    return 'lov_editor';
                }
            }
            
            function do_number_editor(record, name, value) {
            
                if (record.get('from_adj')) {
                    return '';
                } else {
                    return 'number_editor';
                }
            }
            
            function doUpdate(ds, record, name, value) {
                if (name == 'company_code') {
                    record.set('unit_code', '');
                    record.set('employee_code', '');
                    record.set('responsibility_center_code', '');
                    record.set('responsibility_center_id', '');
                    record.set('unit_id', '');
                    record.set('employee_id', '');
                    record.set('position_id', '');
                    record.set('position_id_display', '');
                    record.set('contract_id', '');
                    record.set('contract_header_id', '');
                    record.set('payment_schedule_line_id', '');
                    record.set('payment_schedule_line_code', '');
                }
                /*  else   if(name=='period_num'){
                 var from_currency = '${/model/precision1/record/@currency_code}';
                 var to_currency = record.get('currency_code');
                 var exchange_rate_type =record.get('exchange_rate_type');
                 var exchange_period_name = record.get('period_num');
                 Aurora.request({
                 url:'${/request/@context_path}/autocrud/csh.get_exchange_rate/batch_update',
                 para:[{
                 from_currency:from_currency,
                 to_currency:to_currency,
                 exchange_rate_type:exchange_rate_type,
                 exchange_period_name:exchange_period_name
                 }],
                 success:inst,
                 scope:this
                 });
                 }*/
                else if (name == 'contract_id') {
                    record.set('payment_schedule_line_id', '');
                    record.set('payment_schedule_line_code', '');
                } else if (name == 'vender_name') {
                    record.set('contract_id', '');
                    record.set('contract_header_id', '');
                    record.set('payment_schedule_line_id', '');
                    record.set('payment_schedule_line_code', '');
                } else if (name == 'primary_quantity') {
                    
                    if (record.get('from_adj')) {
                        
	                    Aurora.request({
	                        url: /*${/request/@context_path}/autocrud/pur.get_money_amount/query*/
	                        $('get_money_amount_link_2').getUrl(),
	                        para: {
	                            amount: record.get('primary_quantity'),
	                            vender_item_period_id: record.get('vender_item_period_id')
	                        },
	                        success: function(res) {
	                            var pluscols = res.result.record;
	                            if (pluscols.money) {
	                                record.set('unit_price', ForDight(pluscols.money, '${/model/precision/record/@precision}'));
	                                // record.set('true_price', ForDight(pluscols.true_price, '${/model/precision/record/@precision}'));
	                            } else {
	                                record.set('unit_price', 0);
	                            }
	                        },
	                        scope: this
	                    });
                    }
                    
                    var records = $('pur_purchase_requisition_create_query_ds').getAt(0);
                    var price = record.get('unit_price');
                    var rate = record.get('exchange_rate');
                    var quantity = value;
                    var req_amount = price * quantity;
                    if (records.get('exchange_rate_quotation') == '') {
                        var result = (price * rate).toFixed('${/model/precision/record/@precision}');
                        record.set('requisition_functional_amount', result);
                    } else if (records.get('exchange_rate_quotation') == 'DIRECT QUOTATION') {
                        var result = (price * rate * quantity).toFixed('${/model/precision/record/@precision}');
                        record.set('requisition_functional_amount', result);
                    } else {
                        var result = (price * quantity / rate).toFixed('${/model/precision/record/@precision}');
                        record.set('requisition_functional_amount', result);
                    }
                    record.set('requisition_amount', req_amount);
                } else if (name == 'unit_price' || name == 'primary_quantity') {
                    var records = $('pur_purchase_requisition_create_query_ds').getAt(0);
                    if (name == 'unit_price') {
                        var price = value;
                        var rate = record.get('exchange_rate');
                        var quantity = record.get('primary_quantity');
                        var req_amount = price * quantity;
                        if (records.get('exchange_rate_quotation') == '') {
                            var result = (price * rate).toFixed('${/model/precision/record/@precision}');
                            record.set('requisition_functional_amount', result);
                        } else if (records.get('exchange_rate_quotation') == 'DIRECT QUOTATION') {
                            var result = (price * rate * quantity).toFixed('${/model/precision/record/@precision}');
                            record.set('requisition_functional_amount', result);
                        } else {
                            var result = (price * quantity / rate).toFixed('${/model/precision/record/@precision}');
                            record.set('requisition_functional_amount', result);
                        }
                        record.set('requisition_amount', req_amount);
                    }
                }
            }
            /*  function inst(res){
             var records=$('pur_purchase_requisition_create_result_ds').getCurrentRecord();
             if (res){
             var pluscols = res.result.record;
             if (res.result.record[0].exchange_rate){
             records.set('exchange_rate',pluscols[0].exchange_rate);
             records.set('exchange_rate_quotation',pluscols[0].exchange_rate_quotation);
             var rate = records.get('exchange_rate');
             var  flagt =records.get('exchange_rate_quotation');
             var amount =records.get('requisition_amount');
             if(flagt=='' ||  flagt=='direct quotation'){
             records.set('requisition_functional_amount',amount*rate);
             }else{
             records.set('requisition_functional_amount',amount/rate);
             }
             }
             }
             }*/
            
            function do_contract_id(record, name, value) {
                var machine_field = record.getField('contract_id');
                machine_field.setLovPara('currency_code', record.get('currency_code'));
                machine_field.setLovPara('partner_category', 'VENDER' || '');
                machine_field.setLovPara('partner_id', record.get('vender_id') || '');
                machine_field.setLovPara('company_id', record.get('company_id') || '');
                machine_field.setLovService('pur.csh_contract_lov');
                return 'lov_editor';
            }
            
            function do_payment_schedule(record, name, value) {
                var machine_field = record.getField('payment_schedule_line_code');
                machine_field.setLovPara('contract_header_id', record.get('contract_header_id'));
                machine_field.setLovPara('currency_code', record.get('currency_code'));
                machine_field.setLovPara('partner_category', 'vender' || '');
                machine_field.setLovPara('partner_id', record.get('vender_id') || '');
                machine_field.setLovService('pur.csh_payment_schedules_lov');
                return 'lov_editor';
            }
            
            function dateValidator(record, name, value) {
                var dateFrom = record.get('date_from');
                var dateTo = record.get('date_to');
                if (!dateFrom || !dateTo || dateFrom == '' || dateTo == '') {
                    return true;
                } else if (dateFrom <= dateTo) {
                    return true;
                } else {
                    return '${l:START_GREATER_THAN_END}';
                }
            }
            
            function headUpdateFunction(ds, record, name, value, oldvalue) {
                if (name == 'requisition_date') {
                    showPeriod(record);
                } else if (name == 'currency_code') {
                    var meta = record.getMeta();
                    if (value == '${/model/currency_code/record/@functional_currency_code}') {
                        meta.getField('exchange_rate_type').setReadOnly(true);
                        meta.getField('exchange_rate_quotation_display').setReadOnly(true);
                        meta.getField('exchange_rate').setReadOnly(true);
                        meta.getField('exchange_rate_type').setRequired(false);
                        record.set('exchange_rate', 1);
                    } else {
                        meta.getField('exchange_rate_type').setReadOnly(false);
                        meta.getField('exchange_rate_type').setRequired(true);
                    }
                } else if (name == 'rate_method_code') {
                    var meta = record.getMeta();
                    if (value == 'PERIOD' || value == 'DAILY' || value == 'FIXED') {
                        meta.getField('exchange_rate_quotation_display').setReadOnly(true);
                        meta.getField('exchange_rate_quotation_display').setRequired(false);
                        meta.getField('exchange_rate').setReadOnly(true);
                        record.set('exchange_rate', '');
                        getExchangeRate({
                            fromCur: '${/model/currency_code/record/@functional_currency_code}',
                            toCur: record.get('currency_code'),
                            exchangeRateType: record.get('exchange_rate_type'),
                            exchangeDate: record.get('requisition_date'),
                            periodName: record.get('period_name')
                        });
                    } else {
                        meta.getField('exchange_rate_quotation_display').setReadOnly(false);
                        meta.getField('exchange_rate').setReadOnly(false);
                        meta.getField('exchange_rate_quotation_display').setRequired(true);
                        meta.getField('exchange_rate').setRequired(true);
                        record.set('exchange_rate_quotation_display', '');
                        record.set('exchange_rate', '');
                    }
                } else if (name == 'period_name') {
                    var meta = record.getMeta();
                    var rateQuotation = record.get('exchange_rate_quotation');
                    if (rateQuotation == 'PERIOD' || rateQuotation == 'DAILY' || rateQuotation == 'FIXED') {
                        meta.getField('exchange_rate_quotation_display').setReadOnly(true);
                        meta.getField('exchange_rate_quotation_display').setRequired(false);
                        meta.getField('exchange_rate').setReadOnly(true);
                        record.set('exchange_rate', '');
                        getExchangeRate({
                            fromCur: '${/model/currency_code/record/@functional_currency_code}',
                            toCur: record.get('currency_code'),
                            exchangeRateType: record.get('exchange_rate_type'),
                            exchangeDate: record.get('requisition_date'),
                            periodName: record.get('period_name')
                        });
                    }
                }
            }
            
            function getExchangeRate(param) {
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.get_exchange_rate/query*/
                    $('get_exchange_rate_link').getUrl(),
                    para: {
                        from_currency: param.fromCur,
                        to_currency: param.toCur,
                        exchange_date: param.exchangeDate,
                        exchange_period_name: param.periodName,
                        exchange_rate_type: param.exchangeRateType
                    },
                    success: setRateAndQuotation,
                    scope: this
                });
            }
            
            function setRateAndQuotation(res) {
                var record = $('pur_purchase_requisition_create_query_ds').getAt(0);
                record.set('exchange_rate', res.result.record.exchange_rate);
                record.set('exchange_rate_quotation_display', getDisplayByValue(res.result.record.exchange_rate_quotation, 'code_value', 'code_value_name', 'exchange_rate_quotation_ds'));
            }
            
            function getDisplayByValue(value, valueName, displayName, dsName) {
                var dataSet = $(dsName);
                var records = dataSet.getAll();
                for (var i = 0;i < records.length;i++) {
                    if (records[i].get(valueName) == value) {
                        return records[i].get(displayName);
                    }
                }
            }
            
            function showPeriod(record) {
                var r_date = record.get('requisition_date');
                r_date = Aurora.formatDate(r_date);
                if ('${/model/type/record/@budget_control_enabled}' == 'N') {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/csh.sys_fun_get_period_name/query*/
                        $('sys_fun_get_period_name_link').getUrl(),
                        para: {
                            p_date: r_date
                        },
                        success: periodname,
                        scope: this
                    });
                } else if ('${/model/type/record/@budget_control_enabled}' == 'Y') {
                    Aurora.request({
                        url: $('sys_fun_get_period_name_link_6').getUrl(),
                        para: {
                            p_date: r_date
                        },
                        success: periodname,
                        scope: this
                    });
                }
            }
            
            function periodname(res) {
                if (res) {
                    var pluscols = res.result.record.period_name;
                    if (pluscols) {
                        $('pur_purchase_requisition_create_query_ds').getAt(0).set('period_name', pluscols);
                    } else {
                        $('pur_purchase_requisition_create_query_ds').getAt(0).set('period_name', '');
                    }
                }
            }
            
            function lineNewFunction() {
                if (!$('pur_purchase_requisition_create_query_ds').validate()) {
                    return;
                }
                $('pur_purchase_requisition_create_result_ds').create();
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="position_id_ds">
                <a:datas dataSource="/model/positionlist_init"/>
            </a:dataSet>
            <a:dataSet id="exchange_rate_quotation_ds" lookupCode="EXCHANGE_RATE_QUOTATION"/>
            <a:dataSet id="head_object_ds">
                <a:datas dataSource="/model/expense_object"/>
            </a:dataSet>
            <a:dataSet id="head_dimension_ds">
                <a:datas dataSource="/model/head_dimension"/>
            </a:dataSet>
            <a:dataSet id="line_object_ds">
                <a:datas dataSource="/model/line_expense_object"/>
            </a:dataSet>
            <a:dataSet id="line_dimension_ds">
                <a:datas dataSource="/model/line_dimension"/>
            </a:dataSet>
            <a:dataSet id="exp_report_head_object" autoCreate="true">
                <a:fields>
                    <a:placeHolder id="dynamicHeadObjects"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="exp_report_head_dimension" autoCreate="true">
                <a:fields>
                    <a:placeHolder id="dynamicHeadFields"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="pur_purchase_requisition_create_query_ds">
                <a:fields>
                    <a:field name="head_id"/>
                    <a:field name="employee_id"/>
                    <a:field name="requisition_type_id"/>
                    <a:field name="exp_requisition_type_name" readOnly="true"/>
                    <a:field name="exp_report_number" readOnly="true"/>
                    <a:field name="requisition_date" required="true"/>
                    <a:field name="attachment_num"/>
                    <a:field name="employee_name" readOnly="true"/>
                    <a:field name="position_id_display" displayField="position_code" options="position_id_ds" required="true" returnField="position_id" valueField="position_id"/>
                    <a:field name="default_requisition_date"/>
                    <a:field name="period_name"/>
                    <a:field name="employee_code" readOnly="true"/>
                    <a:field name="currency_code" lovGridHeight="350" lovHeight="500" lovService="gld.gld_currency_lov" lovWidth="500" readOnly="true">
                        <a:mapping>
                            <a:map from="currency_name" to="currency_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="exchange_rate_type_name" lovGridHeight="320" lovHeight="440" lovService="gld.gld_exchage_rate_types" lovWidth="550" prompt="EXP_REQUISITION_HEADERS.EXCHANGE_RATE_TYPE" readOnly="true" title="EXP_REQUISITION_HEADERS.EXCHANGE_RATE_TYPE">
                        <a:mapping>
                            <a:map from="type_name" to="exchange_rate_type_name"/>
                            <a:map from="type_code" to="exchange_rate_type"/>
                            <a:map from="rate_method_code" to="rate_method_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="exchange_rate_type"/>
                    <a:field name="rate_method_code"/>
                    <a:field name="exchange_rate_quotation_display" displayField="code_value_name" options="exchange_rate_quotation_ds" prompt="EXP_REQUISITION_HEADERS.EXCHANGE_RATE_QUOTATION" readOnly="true" returnField="exchange_rate_quotation" valueField="code_value"/>
                    <a:field name="exchange_rate" readOnly="true"/>
                    <a:field name="description"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="headUpdateFunction"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pur_purchase_requisition_create_result_ds" loadData="true" selectable="true">
                <a:fields>
                    <a:field name="line_number" required="true"/>
                    <a:field name="description" required="true"/>
                    <a:field name="item_name" lovGridHeight="350" lovHeight="500" lovService="pur.pur_inv_system_item_lov" lovWidth="500" title="PUR_ORDER_LINES.ITEM_ID">
                        <a:mapping>
                            <a:map from="item_description" to="item_name"/>
                            <a:map from="item_id" to="item_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="item_id"/>
                    <a:field name="expense_item_name" lovGridHeight="350" lovHeight="500" lovLabelWidth="120" lovWidth="530" required="true" title="PUR_ORDER_LINES.EXPENSE_ITEM_ID">
                        <a:mapping>
                            <a:map from="description" to="expense_item_name"/>
                            <a:map from="expense_item_id" to="expense_item_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="vender_item_period_id"/>
                    <a:field name="expense_item_id"/>
                    <a:field name="unit_price" required="true"/>
                    <a:field name="primary_quantity" required="true"/>
                    <!-- modfiy@mys 2012-08-07 -->
                    <a:field name="quotation_price"/>
                    <a:field name="quotation_price_qty"/>
                    <a:field name="from_adj"/>
                    <a:field name="requisition_amount"/>
                    <a:field name="date_from" validator="dateValidator"/>
                    <a:field name="date_to" validator="dateValidator"/>
                    <a:field name="period_num" lovGridHeight="350" lovHeight="500" lovService="bgt.bgt_periods_detail_lov" lovWidth="500" required="true" title="PUR_REQUISITION_LINES.PERIOD_NAME">
                        <a:mapping>
                            <a:map from="period_name" to="period_num"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="primary_uom_desc"/>
                    <a:field name="requisition_functional_amount"/>
                    <a:field name="buyer_name" lovGridHeight="350" lovHeight="500" lovService="pur.pur_sys_buyer_lov" lovWidth="500" title="PUR_BUYERS.BUYER_ID">
                        <a:mapping>
                            <a:map from="description" to="buyer_name"/>
                            <a:map from="buyer_id" to="buyer_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="buyer_id"/>
                    <a:field name="vender_name" lovGridHeight="350" lovHeight="500" lovService="pur.pur_sys_venders_lov" lovWidth="500" title="PUR_ORDER_HEADERS.VENDER_ID">
                        <a:mapping>
                            <a:map from="description" to="vender_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_id" lovGridHeight="350" lovHeight="500" lovWidth="500" title="CON_CONTRACT_HEADERS.CONTRACT_NUMBER">
                        <a:mapping>
                            <a:map from="document_desc" to="contract_id"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_header_id"/>
                    <a:field name="payment_schedule_line_code" lovGridHeight="350" lovHeight="500" lovWidth="500" title="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="payment_schedule_line_code"/>
                            <a:map from="payment_schedule_line_id" to="payment_schedule_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_schedule_line_id"/>
                    <a:field name="company_code" lovGridHeight="350" lovHeight="500" lovService="fnd.fnd_companies_lov" lovWidth="500" required="true" title="PUR_ORDER_LINES.COMPANY_ID">
                        <a:mapping>
                            <a:map from="code_name" to="company_code"/>
                            <a:map from="company_id" to="company_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="company_id"/>
                    <a:field name="responsibility_center_code" lovGridHeight="350" lovHeight="500" lovLabelWidth="120" lovService="fnd.fnd_responsibility_centers" lovWidth="550" required="true" title="PUR_ORDER_LINES.RESPONSIBILITY_CENTER_ID">
                        <a:mapping>
                            <a:map from="res_cen_code_name" to="responsibility_center_code"/>
                            <a:map from="responsibility_center_id" to="responsibility_center_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="unit_code" lovGridHeight="320" lovHeight="440" lovService="exp.exp_org_unit" lovWidth="500" prompt="EXP_REQUISITION_LINES.UNIT_ID" required="true" title="EXP_REQUISITION_LINES.UNIT_ID">
                        <a:mapping>
                            <a:map from="unit_code_name" to="unit_code"/>
                            <a:map from="unit_id" to="unit_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="employee_code" lovGridHeight="320" lovHeight="440" lovService="exp.exp_employees_exp_req?doc_type=01&amp;auth_type=MAINTENANCE" lovWidth="500" prompt="EXP_REQUISITION_LINES.EMPLOYEE_ID" required="true" title="PUR_REQUISITION_HEADERS.EMPLOYEE_ID">
                        <a:mapping>
                            <a:map from="namecode" to="employee_code"/>
                            <a:map from="employee_id" to="employee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="position_id_display" displayField="position_code" options="position_id_ds" prompt="EXP_REQUISITION_LINES.POSITION_ID" required="true" returnField="position_id" valueField="position_id"/>
                    <a:field name="position_id"/>
                    <a:placeHolder id="dynamicLineField"/>
                    <a:placeHolder id="dynamicLineFields"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="newAdd"/>
                    <a:event name="update" handler="doUpdate"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form bindTarget="pur_purchase_requisition_create_query_ds" column="1" labelWidth="100" title="PUR_PURCHASE_REQUISITION.PURCHASE_REQUISITION_CREATE" width="900">
                <a:box column="4">
                    <a:textField name="exp_requisition_type_name" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_BUYERS.REQUISITION_TYPE"/>
                    <a:textField name="exp_report_number" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_REQUISITION_HEADERS.PUR_REQUISITION_NUMBER"/>
                    <a:datePicker name="requisition_date" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_REQUISITION_HEADERS.REQUISITION_DATE"/>
                    <a:numberField name="attachment_num" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_ORDER_HEADERS.ATTACHMENT_NUM"/>
                    <a:textField name="employee_name" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_REQUISITION_LINES.EMPLOYEE_ID"/>
                    <a:comboBox name="position_id_display" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_REQUISITION_LINES.POSITION_ID"/>
                    <a:datePicker name="default_requisition_date" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_PURCHASE_ORDER_CREATE.DEFAULT_DATE"/>
                    <a:textField name="employee_code" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_PURCHASE_ORDER.CREATE_BY"/>
                    <a:lov name="currency_code" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_SYSTEM_VENDERS.CURRENCY_CODE"/>
                    <a:lov name="exchange_rate_type_name" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_PURCHASE_ORDER.EXCHANGE_RATE_TYPE"/>
                    <a:comboBox name="exchange_rate_quotation_display" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_PURCHASE_ORDER.EXCHANGE_RATE_QUOTATION"/>
                    <a:numberField name="exchange_rate" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_PURCHASE_ORDER.EXCHANGE_RATE"/>
                </a:box>
                <a:box column="1">
                    <a:hBox labelWidth="60">
                        <a:textArea name="description" bindTarget="pur_purchase_requisition_create_query_ds" prompt="PUR_ORDER_HEADERS.DESCRIPTION" width="600"/>
                    </a:hBox>
                </a:box>
            </a:form>
            <a:hBox className="accordion-box">
                <a:accordionPanel id="accordion_dim" height="150" width="487">
                    <a:accordions>
                        <a:accordion prompt="PUR_REQ_REF_DIMENSIONS.DIMENSION_CODE" selected="false">
                            <a:box column="2">
                                <a:placeHolder id="dynamicHeadColumn"/>
                            </a:box>
                        </a:accordion>
                    </a:accordions>
                </a:accordionPanel>
                <a:accordionPanel id="accordion_obj" height="150" width="487">
                    <a:accordions>
                        <a:accordion prompt="PUR_REQUISITION_TYPES.OBJECT_TYPES" selected="false">
                            <a:box column="2">
                                <a:placeHolder id="dynamicHeadObject"/>
                            </a:box>
                        </a:accordion>
                    </a:accordions>
                </a:accordionPanel>
            </a:hBox>
            <a:hBox>
                <a:button click="doSave" text="HAP_SAVE"/>
                <a:button click="doCreate" text="HAP_NEW"/>
                <a:button click="attch" text="PROMPT.UPLOAD_ATTACHMENT"/>
                <a:button click="doPrint" text="PROMPT.PRINT"/>
                <a:button click="adj_vender_list" text="VENDER_LIST"/>
            </a:hBox>
            <a:grid id="pur_purchase_requisition_create_grid_ds" bindTarget="pur_purchase_requisition_create_result_ds" height="230" navBar="true" width="980">
                <a:toolBar>
                    <a:button click="lineNewFunction" icon="${/request/@context_path}/images/add.gif" text="PROMPT.NEW"/>
                    <a:button type="delete"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="line_number" Prompt="PUR_ORDER_LINES.LINE_NUMBER" align="center" editor="text_field_editor" width="40"/>
                    <a:column name="description" Prompt="PUR_ORDER_HEADERS.DESCRIPTION" align="center" editor="text_field_editor" width="80"/>
                    <a:column name="item_name" Prompt="PUR_ORDER_LINES.ITEM_ID" align="center" editorFunction="do_lov_editor" width="80"/>
                    <a:column name="expense_item_name" Prompt="PUR_ORDER_LINES.EXPENSE_ITEM_ID" align="center" editorFunction="do_expense_item" width="80"/>
                    <a:column name="unit_price" Prompt="PUR_ORDER_LINES.PRICE" align="center" editorFunction="do_number_editor" width="80"/>
                    <a:column name="primary_quantity" Prompt="PUR_REQUISITION_DISTS.PRIMARY_QUANTITY" align="center" editor="number_editor" width="80"/>
                    <a:column name="requisition_amount" Prompt="PUR_REQUISITION_DISTS.REQUISITION_AMOUNT" align="center" width="80"/>
                    <a:column name="date_from" Prompt="PUR_ORDER_LINES.DATE_FROM" align="center" editor="date_picker_editor" renderer="Aurora.formatDate" width="80"/>
                    <a:column name="date_to" Prompt="PUR_PURCHASE_ORDER.DATE_TO" align="center" editor="date_picker_editor" renderer="Aurora.formatDate" width="80"/>
                    <a:column name="period_num" Prompt="PUR_REQUISITION_LINES.PERIOD_NAME" align="center" editor="lov_editor" width="100"/>
                    <a:column name="primary_uom_desc" Prompt="PUR_REQUISITION_LINES.PRIMARY_UOM" align="center" editor="text_field_editor" width="100"/>
                    <a:column name="requisition_functional_amount" align="right" editorFunction="do_number_editor" prompt="PUR_PURCHASE_REQUISITION.REQUISITION_FUNCTIONAL_AMOUNT" width="80"/>
                    <a:column name="buyer_name" Prompt="PUR_BUYERS.BUYER_ID" align="right" editor="lov_editor" width="80"/>
                    <a:column name="vender_name" Prompt="PUR_ORDER_HEADERS.VENDER_ID" align="right" editorFunction="do_lov_editor" width="80"/>
                    <a:column name="contract_id" Prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" align="right" editorFunction="do_contract_id" width="80"/>
                    <a:column name="payment_schedule_line_code" Prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" align="center" editorFunction="do_payment_schedule" width="90"/>
                    <a:column name="company_code" Prompt="PUR_ORDER_LINES.COMPANY_ID" align="right" editor="lov_editor" width="80"/>
                    <a:column name="responsibility_center_code" Prompt="PUR_ORDER_LINES.RESPONSIBILITY_CENTER_ID" align="center" editor="lov_editor" width="80"/>
                    <a:column name="unit_code" Prompt="PUR_ORDER_LINES.UNIT_ID" align="center" editor="lov_editor" width="80"/>
                    <a:column name="employee_code" Prompt="PUR_REQUISITION_HEADERS.EMPLOYEE_ID" align="center" editor="lov_editor" width="80"/>
                    <a:column name="position_id_display" Prompt="PUR_REQUISITION_LINES.POSITION_ID" align="center" editor="combobox_editor" width="100"/>
                    <a:placeHolder id="dynamicLineColumn_Obj"/>
                    <a:placeHolder id="dynamicLineColumn_dimension"/>
                </a:columns>
                <a:editors>
                    <a:comboBox id="combobox_editor"/>
                    <a:datePicker id="date_picker_editor"/>
                    <a:lov id="lov_editor"/>
                    <a:textField id="text_field_editor"/>
                    <a:numberField id="number_editor"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
            new function(){
                    var line_obj_records = $('line_object_ds').getAll();
                    var line_dim_records = $('line_dimension_ds').getAll();
                    for(var  i = 0 ; i < line_obj_records.length; i ++){
                        var r = line_obj_records[i];
                        lineFields.push(r.get('expense_object_type_code'));
                    }
                    for(var  i = 0 ; i < line_dim_records.length; i ++){
                        var r = line_dim_records[i];
                        lineFields.push(r.get('dimension_code_d'));
                    }
					var obj_length=$('head_object_ds').getAll().length;
                    if(obj_length!=0){
                        $('accordion_obj').selectAccordionIndex(0);
                    }
                    var dim_length=$('head_dimension_ds').getAll().length;
                    if(dim_length!=0){
                        $('accordion_dim').selectAccordionIndex(0);
                    }
                }();
                loadComplete();
            ]]></script>
    </a:view>
    <a:view-config>
        <c:create-config targetId="dynamicHeadObject">
            <p:loop source="/model/expense_object">
                <p:switch test="@eom">
                    <p:case value="lov">
                        <c:process-config>
                            <a:lov name="${@expense_object_type_code}" bindTarget="exp_report_head_object"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="textfield">
                        <c:process-config>
                            <a:textField name="${@expense_object_type_code}" bindTarget="exp_report_head_object"/>
                        </c:process-config>
                    </p:case>
                </p:switch>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicHeadObjects">
            <p:loop source="/model/expense_object">
                <c:process-config>
                    <a:field name="${@expense_object_type_code}" defaultValue="${@default_object_desc}" lovGridHeight="320" lovHeight="440" lovUrl="${/request/@context_path}/modules/pur/public/exp_req_ref_obj_sql_query_lov.screen?expense_object_type_id=${@expense_object_type_id}" lovWidth="500" prompt="${@description}" required="${@required_flag}" title="${@description}">
                        <a:mapping>
                            <a:map from="id" to="${@forname}"/>
                            <a:map from="description" to="${@expense_object_type_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@forname}" defaultValue="${@default_object_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:batch-config source="/model/head_dimension" targetId="dynamicHeadColumn">
            <a:lov name="${@dimension_code_d}" bindTarget="exp_report_head_dimension"/>
        </c:batch-config>
        <c:create-config targetId="dynamicHeadFields">
            <p:loop source="/model/head_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code_d}" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="440" lovService="pur.PUR3851.fnd_dimension_values_v?dimension_id=${@dimension_id}" lovWidth="500" prompt="${@description}" required="true" title="${@description}">
                        <a:mapping>
                            <a:map from="dimension_value_id" to="${@dimension_code_e}"/>
                            <a:map from="description" to="${@dimension_code_d}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@dimension_code_e}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicLineColumn_Obj">
            <p:loop source="/model/line_expense_object">
                <p:switch test="@eom">
                    <p:case value="lov">
                        <c:process-config>
                            <a:column name="${@expense_object_type_code}" align="center" editor="lov_editor" width="80"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="textfield">
                        <c:process-config>
                            <a:column name="${@expense_object_type_code}" editor="text_field_editor"/>
                        </c:process-config>
                    </p:case>
                </p:switch>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicLineField">
            <p:loop source="/model/line_expense_object">
                <c:process-config>
                    <a:field name="${@expense_object_type_code}" defaultValue="${@default_object_desc}" lovGridHeight="320" lovHeight="440" lovUrl="${/request/@context_path}/modules/pur/public/exp_req_ref_obj_sql_query_lov.screen?expense_object_type_id=${@expense_object_type_id}" lovWidth="500" prompt="${@description}" required="${@required_flag}" title="${@description}">
                        <a:mapping>
                            <a:map from="id" to="${@forname}"/>
                            <a:map from="description" to="${@expense_object_type_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@forname}" defaultValue="${@default_object_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:batch-config source="/model/line_dimension" targetId="dynamicLineColumn_dimension">
            <a:column name="${@dimension_code_d}" align="center" editor="lov_editor" prompt="${@description}"/>
            <!-- <a:lov name="${@dimension_code_d}" prompt="${@description}" width="80"/> -->
        </c:batch-config>
        <c:create-config targetId="dynamicLineFields">
            <p:loop source="/model/line_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code_d}" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="440" lovService="pur.PUR3851.fnd_dimension_values_v?dimension_id=${@dimension_id}" lovWidth="500" prompt="${@description}" required="true" title="${@description}">
                        <a:mapping>
                            <a:map from="dimension_value_id" to="${@dimension_code_e}"/>
                            <a:map from="description" to="${@dimension_code_d}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@dimension_code_e}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
    </a:view-config>
</a:screen>
