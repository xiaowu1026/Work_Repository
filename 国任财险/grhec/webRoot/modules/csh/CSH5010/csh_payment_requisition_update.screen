<?xml version="1.0" encoding="UTF-8"?>
<!-- -->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="t1.hidden_flag = &apos;Y&apos; and (t1.user_id is null or t1.user_id = ${/session/@user_id}) and (t1.role_id is null or t1.role_id = ${/session/@role_id})" fetchAll="true" model="csh.CSH5010.csh_pay_req_hide_columns" rootpath="grid_cust"/>
        <a:model-query fetchAll="true" model="csh.CSH5010.csh_pay_req_update_init_record" rootpath="record"/>
        <!--<a:model-query defaultWhereClause="csh_transaction_type_code = &apos;PREPAYMENT&apos; and enabled_flag = &apos;Y&apos;" fetchAll="true" model="csh.csh_transaction_classes_vl" rootpath="trans_classes"/>-->
        <a:model-query fetchAll="true" model="csh.CSH5010.csh_pay_req_update_init_user" rootpath="user"/>
        <a:model-query fetchAll="true" model="csh.csh_pay_req_update_init_emp_list" rootpath="emp_list"/>
        <a:model-query defaultWhereClause="enabled_flag = &apos;Y&apos;" fetchAll="true" model="gld.gld_currency_vl" rootpath="cur_list"/>
        <a:model-query defaultWhereClause="enabled_flag = &apos;Y&apos;" fetchAll="true" model="csh.csh_payment_methods_vl" rootpath="payment_methods_list"/>
        <a:model-query fetchAll="true" model="csh.csh_pay_req_update_init_posi_list" rootpath="position_list"/>
        <a:model-query fetchAll="true" model="csh.csh_pay_req_update_init_header" rootpath="payment_requisition_header"/>
        <a:model-query fetchAll="true" model="csh.csh_payment_req_types_vl" rootpath="pay_req_type"/>
        <a:model-query fetchAll="true" model="csh.csh_pay_req_update_init_file_type" rootpath="file_types"/>
        <a:model-query model="csh.CSH5010.payment_requisition_approved_with_req" rootPath="payment_with_req"/>
        <a:model-query model="public.wlzq_image" rootPath="img_shot_url"/>
        <a:model-query defaultWhereClause="company_id=${/model/payment_requisition_header/record/@company_id}" model="csh.CSH5010.csh_fnd_companies_vl" rootPath="company_level"/>
    </a:init-procedure>
    <a:view>
        <a:link id="uploadFile_link_2" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="csh_pay_req_line_query_link" model="csh.csh_pay_req_line_query" modelaction="batch_update"/>
        <a:link id="csh_pay_req_head_update_link" model="csh.CSH5010.csh_pay_req_header_update" modelaction="update"/>
        <a:link id="csh_sum_amount_link" model="csh.CSH5010.csh_sum_amount" modelaction="query"/>
        <a:link id="csh_pay_req_detail_history_link_3" url="${/request/@context_path}/modules/csh/public/csh_pay_req_detail_history.screen"/>
        <a:link id="csh_payment_requisition_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_payment_requisition.screen"/>
        <!-- <a:link id="csh_payment_requisition_link" url="${/request/@context_path}/modules/csh/CSH3100/csh_payment_requisition_query.screen"/> -->
        <a:link id="csh_payment_requisition_query_link" url="${/request/@context_path}/modules/expm/exp_csh_payment_requisition.screen"/>
        <a:link id="csh_pay_req_submit_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_pay_req_submit.svc"/>
        <a:link id="csh_pay_req_update_save_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_pay_req_update_save.svc"/>
        <a:link id="exp_bank_assign_link" url="${/request/@context_path}/modules/exp/EXP1050/exp_bank_assign_pmt_schedule_readonly.screen"/>
        <a:link id="csh_pay_req_delete_link" model="csh.CSH5010.csh_payment_requisition" modelaction="delete"/>
        <a:link id="csh_payment_requisition_oasign_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_payment_requisition_oasign_query.screen"/>
        <a:link id="csh_payment_req_audit_account_tmp_control_link" url="${/request/@context_path}/modules/wbc/WBC1010/csh_payment_req_audit_account_tmp_control.svc"/>
        <a:link id="csh_airfare_info_link" url="${/request/@context_path}/modules/csh/CSH5015/csh_airfare_info.screen"/>
        <script><![CDATA[
            var fields = ['payment_requisition_header_id', 'operation_unit_id', 'contract_header_id', 'p_partner_id', 'p_req_id', 'p_cont_flag', 'employee_id_display', 'employee_id', 'position_id_display', 'position_id', 'requisition_date', 'requisition_number', 'partner_category_display', 'partner_category', 'partner_code', 'currency_code', 'amount', 'description', 'payment_method_id_display', 'payment_method_id', 'status_name', 'csh_type_id_display', 'csh_type_id'];
            var payment_with_req = '${/model/payment_with_req/record/@payment_with_req}';
            
            function thi(record) {
                var grid = $('pay_req_grid');
                var columns = grid.columns;
                var colcount = columns.length;
                var redname = record.get('colname');
                for (var i = 0;i < colcount;i++) {
                    var colname = columns[i].name;
                    if (redname == colname) {
                        grid.hideColumn(colname);
                    }
                }
            }
            
            
            var company_level_code='${/model/company_level/record/@company_level_code}';
            function payReqLoadComplete() {
                if(company_level_code==10){
             	    $('pay_req_grid').hideColumn('payment_requisition_line_type_display');
             	    $('pay_req_grid').hideColumn('ref_document_id_display');
				}
                var grid_cust = $('grid_cust_ds1').getAll();
                for (var i = 0;i < grid_cust.length;i++) {
                    thi(grid_cust[i]);
                }
                var flag = '${/model/record/record/@submit_flag}';
                var source = '${/model/payment_requisition_header/record/@source_type}';
                var approveWithReqFlag = '${/model/payment_requisition_header/record/@approve_with_req_flag}';
            
                var headerDataSet = $('pay_req_update_header_ds');
                var headerRecord = headerDataSet.getAt(0);
                // if(pay_with_req == 'Y'){
                // $('submitButton_update').disable();
                // }
                // 检测一下requisition_header_id是否空先~~~~
                if (source == 'EXP_REQUISITION') {
                    if (approveWithReqFlag == 'Y') {
                        $('submitButton_update').disable();
                        $('uploadButton').disable();
                        $('saveButton').disable();
                        $('deleteButton').disable();
                        $('addButton_update').disable();
                        $('deleteButton_update').disable();
                    }
                    for (var fieldNum = 0;fieldNum < fields.length;fieldNum++) {
                        headerRecord.getMeta().getField(fields[fieldNum]).setReadOnly(true);
                    }
                }
            
                var payReqHeaderRecord = $('pay_req_header_ds').getAt(0);
                headerRecord.isNew = false;
                headerRecord.set('_status', 'update');
                headerRecord.set('payment_requisition_create_by', payReqHeaderRecord.get('employee_id_display'));
                headerRecord.set('currency_code_display', payReqHeaderRecord.get('currency_name'));
                headerRecord.set('payment_requisition_header_id', '${/parameter/@payment_requisition_header_id}');
                headerRecord.set('operation_unit_id', payReqHeaderRecord.get('operation_unit_id'));
                headerRecord.set('p_partner_id', payReqHeaderRecord.get('partner_id'));
                headerRecord.set('p_cont_flag', payReqHeaderRecord.get('cont_flag'));
                headerRecord.set('employee_id', payReqHeaderRecord.get('employee_id'));
                headerRecord.set('position_id', payReqHeaderRecord.get('position_id'));
                headerRecord.set('requisition_date', payReqHeaderRecord.get('requisition_date'));
                headerRecord.set('requisition_number', payReqHeaderRecord.get('requisition_number'));
                headerRecord.set('partner_category', payReqHeaderRecord.get('partner_category'));
                headerRecord.set('partner_code', payReqHeaderRecord.get('p_partner_name'));
                headerRecord.set('currency_code', payReqHeaderRecord.get('currency_code'));
                headerRecord.set('amount', payReqHeaderRecord.get('amount'));
                headerRecord.set('description', payReqHeaderRecord.get('description'));
                headerRecord.set('payment_method_id', payReqHeaderRecord.get('payment_method_id'));
                
                headerRecord.set('status_name', payReqHeaderRecord.get('status_name'));
            
                headerRecord.set('account_number', payReqHeaderRecord.get('account_number'));
                headerRecord.set('account_name', payReqHeaderRecord.get('account_name'));
                headerRecord.set('bank_code', payReqHeaderRecord.get('bank_code'));
                headerRecord.set('bank_name', payReqHeaderRecord.get('bank_name'));
                headerRecord.set('bank_location_code', payReqHeaderRecord.get('bank_location_code'));
                headerRecord.set('bank_location_name', payReqHeaderRecord.get('bank_location_name'));
                headerRecord.set('province_code', payReqHeaderRecord.get('province_code'));
                headerRecord.set('province_name', payReqHeaderRecord.get('province_name'));
                headerRecord.set('city_code', payReqHeaderRecord.get('city_code'));
                headerRecord.set('city_name', payReqHeaderRecord.get('city_name'));
                //附件数
                headerRecord.set('payment_requisition_attach_id', payReqHeaderRecord.get('attachment_num'));
               
                //add by Qu yuanyuan
                headerRecord.set('source_type', payReqHeaderRecord.get('source_type'));
                //end by Qu yuanyuan
            
                headerRecord.set('position_id_display', getValueByKey('position_id', headerRecord.get('position_id'), $('position_list_ds'), 'pos_desc'));
                headerRecord.set('employee_id_display', getValueByKey('employee_id', headerRecord.get('employee_id'), $('emp_list_ds'), 'name_code'));
                headerRecord.set('partner_category_display', getValueByKey('code_value', headerRecord.get('partner_category'), $('payment_object_list_ds'), 'code_value_name'));
                // headerRecord.set('payment_method_id_display', getValueByKey('payment_method_id', headerRecord.get('payment_method_id'), $('payment_methods_list_ds'), 'description'));
                headerRecord.set('csh_type_id', payReqHeaderRecord.get('payment_req_type_id'));
                //headerRecord.set('payment_method_id_display', payReqHeaderRecord.get('payment_method_id_display'));

                headerRecord.set('csh_type_id_display', payReqHeaderRecord.get('csh_type_id_display'));
                headerRecord.set('payment_method_id', payReqHeaderRecord.get('payment_method_id'));
                 headerRecord.set('payment_method_id_display', payReqHeaderRecord.get('payment_method_id_display'));
                //headerRecord.set('csh_type_id_display', getValueByKey('type_id', headerRecord.get('csh_type_id'), $('pay_req_type_ds'), 'description'));
                //关联关系不加载修正
                //headerRecord.set('related_transactions', payReqHeaderRecord.get('related_transactions'));
               // headerRecord.set('related_transactions_desc', payReqHeaderRecord.get('related_transactions_desc'));
                var type = headerRecord.get('partner_category');
                if (type == 'EMPLOYEE') {
                    headerRecord.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_emp_lov');
                } else if (type == 'CUSTOMER') {
                    headerRecord.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_cus_lov');
                } else {
                    headerRecord.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_ven_lov1');
                }
                $('pay_req_update_line_ds').on('remove', function(store) {
                    records = $('pay_req_update_line_ds').getAll();
                    lineAmount = 0;
                    for (var i = 0;i < records.length;i++) {
                        lineAmount = lineAmount + records[i].get('amount');
                    }
                    headerRecord.set('amount', lineAmount);
                });
            }
            
            function headerUpdateFunction_update(dataSet, record, name, value, oldValue) {
                if (name == 'partner_category') {
                    record.set('partner_code', '');
                    var linesDataSet = $('pay_req_update_line_ds');
                    var lines = linesDataSet.getAll();
                    for (var i = 0;i < lines.length;i++) {
                        lines[i].set('partner_category_display', record.get('partner_category_display'));
                        lines[i].set('partner_category', value);
                        lines[i].set('p_partner_name', '');
                        lines[i].set('account_number', '');
                        lines[i].set('account_name', '');
                    }
                    if (value == 'EMPLOYEE') {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_emp_lov');
                    } else if (value == 'CUSTOMER') {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_cus_lov');
                    } else {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_ven_lov1');
                    }
            
                } else if (name == 'p_partner_id') {
                    // var linesDataSet = $('pay_req_update_line_ds');
                    // var lines = linesDataSet.getAll();
                    // for (var i = 0;i < lines.length;i++) {
                    // lines[i].set('p_partner_name', record.get('partner_code'));
                    // lines[i].set('partner_id', value);
                    // }
                } else if (name == 'csh_type_id') { //增加当修改借款申请单类型后，设置行上得借款类型
                    var linesDataSet = $('pay_req_update_line_ds');
                    var lines = linesDataSet.getAll();
                    for (var i = 0;i < lines.length;i++) {
                        lines[i].set('cls_des', '');
                    }
                    $('trans_classes_ds').setQueryParameter('type_id', record.get('csh_type_id'));
                    $('trans_classes_ds').query();
                }
            }
            
            function changePartner(combo, value, display, record) {
                var dataSet = $('pay_req_update_header_ds');
                var field = record.getMeta().getField('partner_code');
                var lineField = $('pay_req_update_line_ds').getCurrentRecord().getField('p_partner_name');
                var type = record.get('partner_category');
                if (type == 'EMPLOYEE') {
                    field.setLovService('csh.csh_pay_req_emp_lov');
                    lineField.setLovService('csh.csh_pay_req_emp_lov');
                } else if (type == 'CUSTOMER') {
                    field.setLovService('csh.csh_pay_req_cus_lov');
                    lineField.setLovService('csh.csh_pay_req_cus_lov');
                } else {
                    field.setLovService('csh.csh_pay_req_ven_lov1');
                    lineField.setLovService('csh.csh_pay_req_ven_lov1');
                }
            }
            
            function initFunction_update(dataSet, record, index) {
                var employee_id = record.get('employee_id');
            
            }
            
            function createLineRecord() {
                var dataSet = $('pay_req_update_header_ds');
                var flag = dataSet.validate();
                if (flag) {
                    $('pay_req_update_line_ds').create();
                }
            }
            
            function saveFunction_update() {
                Aurora.Masker.mask(Ext.getBody(), '${l:CSH_PAYMENT_REQUISITION.SAVE}');
                $('saveButton').disable();
                var headerDataSet = $('pay_req_update_header_ds');
                var lineDataSet = $('pay_req_update_line_ds');
                var payment_requisition_header_id = headerDataSet.getAt(0).get('payment_requisition_header_id');
                if (headerDataSet.validate() && lineDataSet.validate()) {
                    //added by mjj 2014-07-14
                    //防止用户不点击新增就按保存
                    //begin
                    if (!headerDataSet.getAt(0).get('amount')) {
                        Aurora.showMessage('${l:PROMPT}', '${l:CHS_PAYMENT_REQUISITION_CREATE.PROMPT_NEW_DATA}');
                        Aurora.Masker.unmask(Ext.getBody());
                        $('saveButton').enable();
                        return;
                    }
                    //end
                    var param = [];
                    param = headerDataSet.getJsonData(false)[0] || [];
                    param['line'] = lineDataSet.getJsonData(false);
                    Aurora.request({
                        url: /*csh_pay_req_update_save.svc*/
                        $('csh_pay_req_update_save_link').getUrl(),
                        para: param,
                        success: function() {
                            $('pay_req_update_line_ds').query();
                            Aurora.request({
                                url: $('csh_sum_amount_link').getUrl(),
                                para: {
                                    'payment_requisition_header_id': payment_requisition_header_id
                                },
                                success: function(data) {
                                    headerDataSet.getAt(0).set('amount', data.result.record.sum_amount);
                                    Aurora.request({
                                        url: $('csh_pay_req_head_update_link').getUrl(),
                                        para: headerDataSet.getJsonData(false)[0] || [],
                                        success: function() {},
                                        scope: this
                                    });
                                }
                            });
                        },
                        scope: this
                    });
                }
                //解除按钮锁定 added by mjj 2014-07-14
                $('saveButton').enable();
                Aurora.Masker.unmask(Ext.getBody());
            }
            
            function checkPaywithreq() {
                var lines = $('pay_req_update_line_ds').getAll();
                for (var i = 0;i < lines.length;i++) {
                    if (lines[i].get('ref_document_id_display') != null) return true;
                }
                return false;
            }
            
            function submitFunction_update() {
                //add by Qu yuanyuan 支付方式是支票时提示
            
                var lines_records = $('pay_req_update_line_ds').getAll();
            
               /*  var partner_category = lines_records[0].get('partner_category');
                for (var j = 1;j < lines_records.length;j++) {
                    if (lines_records[j].get('partner_category') != partner_category) {
                        Aurora.showInfoMessage('${l:PROMPT}', '单据收款对象不能同时有员工、供应商！', null, 250, 100);
                        return;
                    }
                }
             */
                //行上有付款方式是支票的,需要提示
                var should_confirm = false;
                for (var i = 0;i < lines_records.length;i++) {
                    if (lines_records[i].get('payment_method_id_display').indexOf('支票') >= 0) {
                        should_confirm = true;
                        break;
                    }
                }
                if (should_confirm) {
                    Aurora.showOkCancelWindow('${l:PROMPT}', '${l:PROMPT.PLEASE_EDIT_REASONS}', function() {
                        submitFunction();
                    }, null, 300, 100);
                } else {
                    submitFunction();
                }
            
            }
            
            function submitFunction() {
                // if (payment_with_req == 'Y' && checkPaywithreq()) {
                // Aurora.showInfoMessage('${l:PROMPT}', '借款申请根据费用申请审批!', '', 250, 100);
                // Aurora.Masker.unmask(Ext.getBody());
                // return;
                // }
                //modify by Qu yuanyuan 根据单据头上source_type='EXP_REQUISITION'来判断是否根据费用申请审批
                var source_type = $('pay_req_update_header_ds').getAt(0).get('source_type');
            
                if (payment_with_req == 'Y' && source_type == 'EXP_REQUISITION') {
                    Aurora.showInfoMessage('${l:PROMPT}', '借款申请根据费用申请审批!', '', 250, 100);
                    return;
                }
                //end modify by Qu yuanyuan
                if (!checkAmount()) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK1}', '', 250, 100);
                    return;
                }
            
                var headerDataSet = $('pay_req_update_header_ds');
                var lineDataSet = $('pay_req_update_line_ds');
                if (headerDataSet.validate() && lineDataSet.validate()) {
                    var param = [];
                    param = headerDataSet.getJsonData(false)[0] || [];
                    param['line'] = lineDataSet.getJsonData(false);
                    var temp = Ext.util.JSON.encode(param);
                    //创建凭证
                    //----------begin--------------------------------
                    var header_id = headerDataSet.getAt(0).get('payment_requisition_header_id');
                    param['detail'] = [{
                        payment_requisition_header_id: header_id
                    }];
                    Aurora.request({
                        url: /*csh_pay_req_submit.svc*/
                        $('csh_pay_req_submit_link').getUrl(),
                        para: param,
                        success: dispatch_update,
                        scope: this
                    });
                    //----------------------end------------------------------
                }
            }
             //计算日期相差天数
             function  DateDiff(sDate1,  sDate2){ 
                    var  aDate,  oDate1,  oDate2,  iDays ; 
       				aDate  =  sDate1.split("-")  ;
       				oDate1  =  new  Date(aDate[0],aDate[1]-1,aDate[2]);      
       				aDate  =  sDate2.split("-");  
       				oDate2  =  new  Date(aDate[0],aDate[1]-1,aDate[2]);  
       				iDays  =  parseInt(Math.abs(oDate1-oDate2)/1000/60/60/24) ;
                	return  iDays;
   				}    
             function dateValidator(record, name, value) {
                if (name == 'plan_repayment_date') {
                    var plan_repayment_date = Aurora.formatDate(record.get('plan_repayment_date'));
                    var date = Aurora.formatDate(new Date());
                    if (plan_repayment_date < date) {
                        return '计划还款日不能小于当前日期';
                    }else{
                          var diffDays=DateDiff(plan_repayment_date,date);
                          //单据类型
               			  var headerRecord = $('pay_req_header_ds').getAt(0);
               			  var csh_type_code =headerRecord.get('csh_type_code');
                          if(csh_type_code=="YGJK"){
	                          if(diffDays>15){
		                         // record.set('plan_repayment_date',null);
		                          return '还款日期不能超过15天';
	                      	  }else{
	                              return true;
	                          }
                          } //供应商借款
                            else if(csh_type_code=="YFJK"){
	                       	  if(diffDays>30){
	                       		 // record.set('plan_repayment_date',null);
	                       		  return '还款日期不能超过30天';
	                       	  }else{
	                       	      return  true;
	                       	  }
	                      }
                          else{
                              return true;
                          }
                        
                   }
               }
            }
            function backFunction_update() {
                $('csh_payment_requisition_update_window').close();
                $('pay_req_result_ds').query();
            }
            
            function dispatch_update() {
                window.location.href = $('csh_payment_requisition_link').getUrl();
            }
            
            function checkAmount() {
            
                var records = $('pay_req_update_line_ds').getAll();
                var heanderAmount = $('pay_req_update_header_ds').getAt(0).get('amount');
                var lineAmount = 0;
            
                for (var i = 0;i < records.length;i++) {
                    lineAmount = lineAmount + records[i].get('amount');
                }
                if (heanderAmount == lineAmount) {
                    return true;
                } else {
                    return false;
                }
            }
            
            function addFunction_update(dataSet, record, index) {
                
                if(company_level_code==10){
             	    var line_type_display=$('doc_category_list_ds').getAt(1).get('code_value_name');
                    record.set('payment_requisition_line_type_display',line_type_display);
             	    record.set('payment_requisition_line_type','OTHERS');
				}
				
                var dataSetHeader = $('pay_req_update_header_ds');
                var recordHeader = dataSetHeader.getAt(0);
                var partner_category = recordHeader.get('partner_category');
                var csh_type_code=$('pay_req_header_ds').getAt(0).get('csh_type_code');
                record.set('payment_requisition_header_id', '${/parameter/@payment_requisition_header_id}');
                
                  if (csh_type_code == 'YGJK') {
		                record.set('partner_category', 'EMPLOYEE');
		                record.set('partner_category_display', '员工');
		               
		              //  record.getField('partner_category').setReadOnly(true);
	                }else{
	                    record.set('partner_category', 'VENDER');
	                    record.set('partner_category_display', '供应商');
                  }
	             
               // record.set('payment_method_id', recordHeader.get('payment_method_id'));
               // record.set('payment_method_id_display', recordHeader.get('payment_method_id_display'));
                
              
                 if(csh_type_code == 'YGJK'){
                         record.set('partner_id', recordHeader.get('p_partner_id'));
                         record.set('p_partner_name', recordHeader.get('partner_code'));
                    	 record.set('account_number_ext','${/model/user/record/@account_number_ext}');
                    	 record.set('account_name', '${/model/user/record/@account_name}');
                    	 record.set('account_number','${/model/user/record/@account_number}');
                    }
                  
                
                // record.set('bank_code', recordHeader.get('bank_code'));
                // record.set('bank_name', recordHeader.get('bank_name'));
                
                // record.set('bank_location_code', recordHeader.get('bank_location_code'));
                // record.set('bank_location_name', recordHeader.get('bank_location_name'));
                
                // record.set('province_code', recordHeader.get('province_code'));
                // record.set('province_name', recordHeader.get('province_name'));
                
                // record.set('city_code', recordHeader.get('city_code'));
                // record.set('city_name', recordHeader.get('city_name'));
            
                //add by Qu yuanyuan 20151202
                var gather_flag_records = $('gather_flag_ds').getAll();
                for (var i = 0;i < gather_flag_records.length;i++) {
                    if (gather_flag_records[i].get('code_value') == '1') {
                        record.set('gather_flag', gather_flag_records[i].get('code_value'));
                        record.set('gather_flag_desc', gather_flag_records[i].get('code_value_name'));
                        break;
                    }
                }
                //end by Qu yuanyuan
                var lineRecords = dataSet.getSelected();
                if (lineRecords.length != 0) {
                    record.set('cls_des', lineRecords[0].get('cls_des'));
                    record.set('csh_transaction_class_code', lineRecords[0].get('csh_transaction_class_code'));
                    record.set('payment_requisition_line_type_display', lineRecords[0].get('payment_requisition_line_type_display'));
                    record.set('payment_requisition_line_type', lineRecords[0].get('payment_requisition_line_type'));
                    record.set('ref_document_id_display', lineRecords[0].get('ref_document_id_display'));
                    record.set('need_payment_amount', lineRecords[0].get('need_payment_amount'));
                    record.set('requisited_amount', lineRecords[0].get('requisited_amount'));
                    record.set('requisited_unpayment_amount', lineRecords[0].get('requisited_unpayment_amount'));
                    record.set('ref_document_id', lineRecords[0].get('ref_document_id'));
                    record.set('cont_flag', lineRecords[0].get('cont_flag'));
                    record.set('partner_category_display', lineRecords[0].get('partner_category_display'));
                    record.set('payment_schedule_line_id', lineRecords[0].get('payment_schedule_line_id'));
                    record.set('p_partner_name', lineRecords[0].get('p_partner_name'));
                    record.set('partner_id', lineRecords[0].get('partner_id'));
                    record.set('payment_method_id', lineRecords[0].get('payment_method_id'));
                    record.set('payment_method_id_display', lineRecords[0].get('payment_method_id_display'));
                    record.set('account_number', lineRecords[0].get('account_number'));
                    record.set('account_number_ext', lineRecords[0].get('account_number_ext'));
                    record.set('account_name', lineRecords[0].get('account_name'));
                    record.set('contract_number', lineRecords[0].get('contract_number'));
                    record.set('contract_header_id', lineRecords[0].get('contract_header_id'));
                    record.set('payment_schedule_line_number', lineRecords[0].get('payment_schedule_line_number'));
                    record.set('description', lineRecords[0].get('description'));
                    record.set('amount', lineRecords[0].get('amount'));
            
                    record.set('gather_flag', lineRecords[0].get('gather_flag'));
                    record.set('gather_flag_desc', lineRecords[0].get('gather_flag_desc'));
                }
            }
            
            function updateFunction_update(dataSet, record, name, value, oldValue) {
                if (name == 'payment_requisition_line_type') {
                    record.set('ref_document_id', '');
                    record.set('ref_document_id_display', '');
                    record.set('need_payment_amount', '');
                    record.set('requisited_amount', '');
                    record.set('requisited_unpayment_amount', '');
                    record.set('amount', '');
                    record.set('contract_header_id', '');
                    if (value != 'EXP_REQUISITION') {
                        record.getMeta().getField('ref_document_id_display').setRequired(false);
                    } else {
                        record.getMeta().getField('ref_document_id_display').setRequired(true);
                    }
                }else if (name == 'contract_header_id') {
                    record.set('payment_schedule_line_number', '');
                    record.set('payment_schedule_line_id', '');
                } else if (name == 'partner_category') {
                    record.set('p_partner_name', '');
                    record.set('partner_id', '');
                    record.set('account_number', '');
                    record.set('account_number_ext', '');
                } else if (name == 'p_partner_name') {
                    record.getMeta().getField('account_number_ext').setLovPara('id', record.get('partner_id'));
                }else if(name=="req_required_flag"){//必须申请
                    if(value=="Y"){
                     	record.set('payment_requisition_line_type','EXP_REQUISITION');
                        var line_type_display=$('doc_category_list_ds').getAt(0).get('code_value_name');
                        record.set('payment_requisition_line_type_display',line_type_display);
                   		record.getField('payment_requisition_line_type_display').setReadOnly(true);
                    }else{
                        record.set('payment_requisition_line_type','OTHERS');
                         var line_type_display=$('doc_category_list_ds').getAt(1).get('code_value_name');
                        record.set('payment_requisition_line_type_display',line_type_display);
                        record.getField('payment_requisition_line_type_display').setReadOnly(false);
                    }
                }else if(name=="cls_des"){
                   
                    if(record.get('cls_des')){
                    //修改说明
                      var req_name='${/model/user/record/@name}';
                      var req_amount=record.get('amount')!=null?record.get('amount'):'';
                      record.set('description',req_name+record.get('cls_des')+'借款'+req_amount);
                    }
                }else if(name=="amount"){
                      var req_name='${/model/user/record/@name}';
                      var req_amount=record.get('amount')!=null?record.get('amount'):'';
                      record.set('description',req_name+record.get('cls_des')+'借款'+req_amount);
                } else if (name == "csh_transaction_class_code") {
                    //add by lyh 2017.8.17
                    // record.set('repay_code', null);
                    // record.set('repay_desc', null);
                    // if (record.get('repay_flag') == 'N') {
                        // record.getField('repay_desc').setReadOnly(true);
                        // record.getField('repay_desc').setRequired(false);
                    // } else if (record.get('repay_flag') == 'Y') {
                        // record.getField('repay_desc').setReadOnly(false);
                        // record.getField('repay_desc').setRequired(true);
                    // }
                } 
                //add by zyh 20180515
                if ('csh_transaction_class_code' == name) {
                    //清空申请单原有的值
                    record.set('ref_document_id_display', '');
                    record.set('ref_document_id','');
                    // var metaField = record.getMeta().getField('ref_document_id_display');
                    // metaField.setLovPara('csh_transaction_class_code', record.get('csh_transaction_class_code'));
                }
                //end add
            }
            
            function isCellEditableFunction_update(record, name) {
                if (name == 'need_payment_amount' || name == 'requisited_amount' || name == 'requisited_unpayment_amount') {
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        return '';
                    } else {
                        record.set('ref_document_id', '');
                        record.set('ref_document_id_display', '');
                        record.set('need_payment_amount', '');
                        record.set('requisited_amount', '');
                        record.set('requisited_unpayment_amount', '');
                        return '';
                    }
                }
            }
            
            function amountValidator(record, name, value) {
                // modified by mjj at 2014-07-14 purpose:添加过滤空值的逻辑
                if (!Aurora.isEmpty(value)) {
                    var dataSet = $('pay_req_update_line_ds');
                  //  if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        if (value <= 0 || value > record.get('need_payment_amount')) {
                            record.set('amount', '');
                            amountChanged('');
                            return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK2}';
                        }
                        var rs = dataSet.getAll();
                        var usedAmount = 0;
                        var lineAmount = 0;
                        for (var i = 0;i < rs.length;i++) {
                            var r = rs[i];
                            if (r.get('ref_document_id_display') == record.get('ref_document_id_display') && r != record) {
                                lineAmount = r.get('amount') || 0;
                                if (!isNaN(lineAmount) && !Aurora.isEmpty(lineAmount)) {
                                    usedAmount += lineAmount;
                                }
                            }
                        }
                        if (value + usedAmount > record.get('need_payment_amount')) {
                            record.set('amount', '');
                            amountChanged('');
                            return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK2}';
                        }
                    // } else {
                        // if (record.get('amount') <= 0) {
                            // record.set('amount', '');
                            // amountChanged('');
                            // return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK17}';
                        // }
                    // }
                    amountChanged();
                    return true;
                }
                amountChanged();
                return true;
            }
            
            function amountChanged(value) {
                var records = $('pay_req_update_line_ds').getAll();
                var lineAmount = 0;
                for (var i = 0;i < records.length;i++) {
                    lineAmount += records[i].get('amount');
                }
                $('pay_req_update_header_ds').getAt(0).set('amount', lineAmount);
            }
            
            function isCellEditable_update() {
            
                var source = '${/model/payment_requisition_header/record/@source_type}';
                if (source == 'EXP_REQUISITION') {
                    $('addButton_update').disable();
                    $('deleteButton_update').disable();
                    return false;
                }
                return true;
            }
            
            function isCellEditLov() {
                if (isCellEditable_update()) {
                    return 'con_num_lov';
                }
                return '';
            }
            
            function isCellEditLovPart() {
                if (isCellEditable_update()) {
                    return 'p_partner_name_lov';
                }
                return '';
            }
            
            function comboboxEditorFunction() {
            
                if (isCellEditable_update()) {
                    return 'combobox_editor_update';
                }
                return '';
            }
            
            function textfieldEditorFunction() {
                if (isCellEditable_update()) {
                    return 'txt_editor_19_length';
                }
                return '';
            }
            
            function numberfieldEditorFunction() {
                if (isCellEditable_update()) {
                    return 'numberfield_editor_update';
                }
                return '';
            }
            
            function refDocIdDisEdiFunction(record, name) {
                if (name == 'ref_document_id_display') {
                    if (name == 'ref_document_id_display') {
                        if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                            return 'ref_doc_id_lov';
                        } else {
                     //      record.set('ref_document_id', '');
                     //      record.set('ref_document_id_display', '');
                            return 'ref_doc_id_lov';
                        }
                    }
                }
                
            }
            
            function paySchLineNumFunction(record, name) {
                if (isCellEditable_update()) {
                    if (record.get('contract_header_id')) {
                        var dataSet = $('pay_req_update_line_ds');
                        var metaField = record.getMeta().getField('payment_schedule_line_number');
                        metaField.setLovService('csh.CSH5010.csh_pay_req_schedules_lov');
                        metaField.setLovPara('contract_header_id', record.get('contract_header_id'));
                        metaField.setLovPara('currency_code', $('pay_req_update_header_ds').getAt(0).get('currency_code'));
                        metaField.setLovPara('partner_category', record.get('partner_category'));
                        metaField.setLovPara('partner_id', record.get('partner_id'));
                        return 'pay_sch_line_num_lov';
                    } else {
                        return '';
                    }
                }
                return '';
            }
            
            function conNumFunction(record, name) {
                if (isCellEditable_update()) {
                    var req_id = record.get('ref_documnt_id');
                    var dataSet = $('pay_req_update_line_ds');
                    var metaField = record.getMeta().getField('contract_number');
                    metaField.setLovService('csh.CSH5010.csh_pay_req_contract_lov');
                    // if (record.get('payment_requisition_line_type') != 'EXP_REQUISITION') {
                    // metaField.setLovPara('partner_category', record.get('partner_category'));
                    // metaField.setLovPara('partner_id', record.get('partner_id'));
                    // metaField.setLovPara('type_fg', 'OTHER');
                    // } else {
                    // metaField.setLovPara('ref_document_id', req_id);
                    // metaField.setLovPara('partner_category', record.get('partner_category'));
                    // metaField.setLovPara('partner_id', record.get('partner_id'));
                    // metaField.setLovPara('type_fg', 'REQUIS');
                    // }
                    metaField.setLovPara('partner_category', record.get('partner_category'));
                    metaField.setLovPara('partner_id', record.get('partner_id'));
                    var r = $('pay_req_update_header_ds').getAt(0);
                    r.set('p_req_id', req_id);
                    return 'con_num_lov';
                }
                return '';
            }
            
            function refDocCommitFunction_update(lov, record, record2) {
                record.set('amount', '');
            }
            
            function partnerNameCommitFunction_update(lov, record, record2) {
            
                // } else if (type == 'CUSTOMER') {
                // field.setLovService('csh.csh_pay_req_cus_lov');
                // lineField.setLovService('csh.csh_pay_req_cus_lov');
                // } else {
                // field.setLovService('csh.csh_pay_req_ven_lov1');
                // lineField.setLovService('csh.csh_pay_req_ven_lov1');
                // }
            }
            
            function cellClickFunction_update(grid, row, name, record) {
                if (name == 'ref_document_id_display') {
                    var r = $('pay_req_update_header_ds').getAt(0);
                    var employeeId = r.get('employee_id');
                    var currencyCode = r.get('currency_code');
                    if (employeeId == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK7}', '', 250, 100);
                        $('employee_id_cmp').focus();
                    }
                    if (currencyCode == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK8}', '', 250, 100);
                        $('currency_code_cmp').focus();
                    }
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                       // var dataSet = $('pay_req_update_line_ds');
                       // var csh_transaction_class_code = dataSet.getAt(0).get('csh_transaction_class_code');
                        var metaField = record.getMeta().getField('ref_document_id_display');
                        metaField.setReadOnly(false);
                        //metaField.setLovService('csh.CSH5010.csh_pay_req_exp_lov');
                        metaField.setLovService('csh.CSH5010.csh_pay_req_exp_class_lov');
                        metaField.setLovPara('employee_id', employeeId);
                        metaField.setLovPara('currency_code', currencyCode);
                        metaField.setLovPara('csh_transaction_class_code', record.get('csh_transaction_class_code'));
                    }else{//其他类型
                        var metaField = record.getMeta().getField('ref_document_id_display');
                        metaField.setReadOnly(true);
                        //metaField.setLovService('csh.CSH5010.csh_pay_req_exp_lov');
                        //关联单据LOV
                        metaField.setLovService('csh.CSH5010.csh_pay_req_exp_class_lov');
                        metaField.setLovPara('employee_id', employeeId);
                        metaField.setLovPara('currency_code', currencyCode);
                        metaField.setLovPara('csh_transaction_class_code', record.get('csh_transaction_class_code'));
                    }
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        record.getMeta().getField('ref_document_id_display').setRequired(true);
                    } else {
                        record.getMeta().getField('ref_document_id_display').setRequired(false);
                    }
                } else if (name == 'payment_schedule_line_number') {
                    if (record.get('contract_header_id') == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK6}', '', 250, 100);
                        return '';
                    }
                } else if (name == 'p_partner_name') {
                    var lineField = record.getMeta().getField('p_partner_name');
                    var type = record.get('partner_category');
                    var csh_type = record.get('csh_transaction_class_code');
                    var r = $('pay_req_update_header_ds').getAt(0);
                    var employeeId = r.get('employee_id');
                    if (csh_type == '70') {
                        lineField.setLovService('csh.csh_pay_req_emp_lov_ext?employee_id=' + employeeId);
                    } else {
                        lineField.setLovService('csh.csh_pay_req_emp_lov2');
                    }
                    if (type == 'CUSTOMER') {
                        lineField.setLovService('csh.csh_pay_req_cus_lov');
                    } else if (type == 'VENDER') {
                        lineField.setLovService('csh.csh_pay_req_ven_lov1');
                        lineField.setLovPara('csh_flag','N');
                    }
                } else if (name == 'contract_number') {
                    $('pay_req_update_header_ds').getAt(0).set('p_req_id', '');
                } else if (name == 'account_number_ext') {
                    var field = record.getMeta().getField('account_number_ext');
                    var type = record.get('partner_category');
                    if (type == 'EMPLOYEE') {
                        field.setLovService('csh.exp_employee_accounts');
                    } else if (type == 'CUSTOMER') {
                        field.setLovService('csh.csh_customer_accounts');
                    } else {
                        field.setLovService('csh.csh_vender_accounts');
                    }
                    record.getMeta().getField('account_number_ext').setLovPara('id', record.get('partner_id'));
                } else if (name == 'account_number') {
                    var field = record.getMeta().getField('account_number');
                    var type = record.get('partner_category');
                    if (type == 'EMPLOYEE') {
                        field.setLovService('csh.csh_employee_accounts_ext');
                    } else if (type == 'CUSTOMER') {
                        field.setLovService('csh.csh_customer_accounts');
                    } else {
                        field.setLovService('csh.csh_vender_accounts');
                    }
                    record.getMeta().getField('account_number').setLovPara('id', record.get('partner_id'));
                }
            }
            
            function updateFunction_load(ds) {
                // add by lyh 2017.8.15
                var rds = ds.getAll();
                for (var i = 0;i < rds.length;i++) {
                    if (rds[i].get('repay_flag') == 'N') {
                        rds[i].getField('repay_desc').setReadOnly(true);
                        rds[i].getField('repay_desc').setRequired(false);
                    }
                };
                $('saveButton').enable();
                amountChanged(); //added by mjj 页面加载完成后，计算金额
            }
            
            function checkConLine() {
                var contractHeaderId = $('pay_req_update_header_ds').get('contract_header_id');
                var recrods = $('pay_req_update_line_ds').getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        if (contractHeaderId == '') {
                            if (record.get('contract_header_id') != '') {
                                return false;
                            }
                        }
                        if (contractHeaderId != '') {
                            if (records[i].get('contract_header_id') != contractHeaderId) {
                                return false;
                            }
                        }
                    }
                }
            }
            
            function history() {
                var head = '${/parameter/@payment_requisition_header_id}';
                var urlPath = /*csh_pay_req_detail_history.screen*/
                $('csh_pay_req_detail_history_link_3').getUrl() + '?csh_pay_header_id=' + head;
                new Aurora.Window({
                    id: 'pay_req_detail_history_screen',
                    url: urlPath,
                    title: '${l:PROMPT.HISTORY}',
                    fullScreen: true
                });
            }
            
            function getRecordByProp(propName, key, dataSet) {
                var records = dataSet.getAll();
            
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
                    if (record.get(propName) == key) {
                        return record;
                    }
                }
            }
            
            function getValueByKey(keyName, keyValue, dataSet, valueName) {
                var records = dataSet.getAll();
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
                    if (record.get(keyName) == keyValue) {
                        return record.get(valueName);
                    }
                }
            }
            //add by huangshengbo @2011/07/06
            
            function deleteFuncion() {
                var rs = $('pay_req_update_line_ds').getSelected();
                for (var i = 0;i < rs.length;i++) {
                    if (rs[i].isNew) $('pay_req_update_line_ds').remove(rs[i]);
                }
            
                var records = $('pay_req_update_line_ds').getJsonData(true);
                for (var i = 0;i < records.length;i++) {
                    records[i]._status = 'delete';
                }
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/csh.csh_pay_req_line_query/batch_update*/
                    $('csh_pay_req_line_query_link').getUrl(),
                    para: records,
                    success: function(res) {
            
                        //以下代码注释的原因：当删除借款单行时，数据库过程中，自动更新借款单金额，无需以下的更新单据金额逻辑。
                        // var headerDataSet = $('pay_req_update_header_ds');
                        // var lineDataSet = $('pay_req_update_line_ds');
                        // var amount_before = headerDataSet.getAt(0).get('amount');
                        // var records = res.result.record;
                        // if (records.length) {
                        // for (var i = 0;i < records.length;i++) {
                        // amount_before -= records[i].amount;
                        // }
                        // } else {
                        // amount_before -= records.amount;
                        // }
                        // headerDataSet.getAt(0).set('amount', amount_before);
                        // if (headerDataSet.validate() && lineDataSet.validate()) {
                        // var param = [];
                        // headerDataSet.getAt(0).set('amount', amount_before); //added by mjj
                        // param = headerDataSet.getJsonData(false)[0] || [];
                        // param['line'] = lineDataSet.getJsonData(false);
                        // Aurora.request({
                        // url: /*csh_pay_req_update_save.svc*/
                        // $('csh_pay_req_update_save_link').getUrl(),
                        // para: param,
                        // success: function() {
                        // lineDataSet.query();
                        // },
                        // scope: this
                        // });
                        // }
                    },
                    scope: this
                });
            }
            
            //add by huangshengbo @2011/08/08
            
            function uploadFile() {
                var url = /*${/request/@context_path}/uploadFile.screen*/
                $('uploadFile_link_2').getUrl() + '?table_name=CSH_PAYMENT_REQUISITION_HDS&header_id=${/parameter/@payment_requisition_header_id}'
                new Aurora.Window({
                    url: url,
                    title: '${l:ATM.UPLOAD_ATTACHMENT}',
                    id: 'check_upload_file_screen',
                    width: 680,
                    height: 400
                });
            }
            
            function bankAssign(value, record, name) {
                var lineIndex = $('pay_req_update_line_ds').indexOf(record);
                return '<a href="javascript:bankAssignInfo(' + lineIndex + ')">${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}</a>';
            }
            
            function bankAssignInfo(lineIndex) {
                new Aurora.Window({
                    id: 'exp_bank_assign_window',
                    url: $('exp_bank_assign_link').getUrl() + '?line_index=' + lineIndex + '&ds_name=pay_req_update_line_ds',
                    title: '${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}',
                    fullScreen: true
                });
            }
            
            function getRecordsFromBankCode(record) {
                var lineIndex = record.get('line_index');
                var pmtplan_schedules_record = $('pay_req_update_line_ds').getAt(lineIndex);
                pmtplan_schedules_record.set('account_number', record.get('account_number'));
                pmtplan_schedules_record.set('account_number_ext', record.get('account_number_ext'));
                pmtplan_schedules_record.set('account_name', record.get('account_name'));
                pmtplan_schedules_record.set('bank_code', record.get('bank_code'));
                pmtplan_schedules_record.set('bank_name', record.get('bank_name'));
                pmtplan_schedules_record.set('bank_location_code', record.get('bank_location_code'));
                pmtplan_schedules_record.set('bank_location_name', record.get('bank_location_name'));
                pmtplan_schedules_record.set('province_code', record.get('province_code'));
                pmtplan_schedules_record.set('province_name', record.get('province_name'));
                pmtplan_schedules_record.set('city_code', record.get('city_code'));
                pmtplan_schedules_record.set('city_name', record.get('city_name'));
            }
            //added by mjj at 2014-07-11 purpose:添加整单删除按钮。
            
            function deleteCshReq() {
                var okCan = Aurora.showConfirm('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION.SURE_DELETE_REQ}', function() {
                    var payment_requisition_header_id = $('pay_req_update_header_ds').getAt(0).get('payment_requisition_header_id');
                    param = {};
                    param['payment_requisition_header_id'] = payment_requisition_header_id;
                    Aurora.request({
                        url: $('csh_pay_req_delete_link').getUrl(),
                        para: param,
                        success: function() {
                            $('csh_payment_requisition_update_window').close();
                        },
                        scope: this
                    });
                }, function() {
                    okCan.close();
                }, 250, 100);
            }
            //上传影像
            
            function uploadImag() {
                var requisition_number = $('pay_req_update_header_ds').getAll()[0].get('requisition_number');
                url = '${/model/img_shot_url/record/@img_url}';
                url += '&barcode=' + requisition_number;
                window.open(url);
            }
            //end add.
            
            function csh_oasign() {
                var payment_requisition_header_id = $('pay_req_update_header_ds').getAt(0).get('payment_requisition_header_id');
                var requisition_number = $('pay_req_update_header_ds').getAll()[0].get('requisition_number');
                var url = $('csh_payment_requisition_oasign_link').getUrl() + '?payment_requisition_header_id=' + payment_requisition_header_id + '&requisition_number=' + requisition_number;
                new Aurora.Window({
                    id: 'csh_payment_requisition_oasign_window',
                    url: url,
                    title: '${l:关联OA审批}',
                    width: 600,
                    height: 400
                });
            }
            
            //机票信息
            
            function csh_airfare_assign(value, record, name) {
                if (record.get('payment_requisition_line_id')) {
                    var payment_requisition_line_id = record.get('payment_requisition_line_id');
                    var payment_requisition_header_id = record.get('payment_requisition_header_id');
                    return '<a href="javascript:csh_airfare_assign_win(' + payment_requisition_line_id + ',' + payment_requisition_header_id + ')">机票信息</a>';
                } else {
                    return '';
                }
            }
            
            function csh_airfare_assign_win(payment_requisition_line_id, payment_requisition_header_id) {
                var url = $('csh_airfare_info_link').getUrl();
                url += '?payment_requisition_line_id=' + payment_requisition_line_id + '&payment_requisition_header_id=' + payment_requisition_header_id;
                Aurora.post(url);
            }
            //add by zyh 180424
            
           
        ]]></script>
        <a:dataSets>
            <a:dataSet id="gather_flag_ds" lookupCode="GATHER_FLAG"/>
            <a:dataSet id="receipt_repay_ds">
                <a:datas>
                    <a:record code="Y" value="收据已上缴"/>
                    <a:record code="N" value="收据未上缴"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="pay_req_header_ds">
                <a:datas dataSource="/model/payment_requisition_header"/>
            </a:dataSet>
            <a:dataSet id="grid_cust_ds1">
                <a:datas dataSource="/model/grid_cust"/>
            </a:dataSet>
            <!--<a:dataSet id="trans_classes_ds">
                <a:datas dataSource="/model/trans_classes"/>
            </a:dataSet>-->
            <a:dataSet id="trans_classes_ds" model="csh.CSH5010.csh_payment_requisition_req_types"/>
            <a:dataSet id="user_ds">
                <a:datas dataSource="/model/user"/>
            </a:dataSet>
            <a:dataSet id="emp_list_ds">
                <a:datas dataSource="/model/emp_list"/>
            </a:dataSet>
            <a:dataSet id="cur_list_ds">
                <a:datas dataSource="/model/cur_list"/>
            </a:dataSet>
            <a:dataSet id="payment_methods_list_ds">
                <a:datas dataSource="/model/payment_methods_list"/>
            </a:dataSet>
            <a:dataSet id="pay_req_hd_id_ds">
                <a:datas dataSource="/model/pay_req_hd_id"/>
            </a:dataSet>
            <a:dataSet id="comp_ds">
                <a:datas dataSource="/model/comp"/>
            </a:dataSet>
            <a:dataSet id="cur_ds">
                <a:datas dataSource="/model/cur"/>
            </a:dataSet>
            <a:dataSet id="pay_req_type_ds">
                <a:datas dataSource="/model/pay_req_type"/>
            </a:dataSet>
            <a:dataSet id="position_list_ds">
                <a:datas dataSource="/model/position_list"/>
            </a:dataSet>
            <a:dataSet id="payment_object_list_ds" lookupCode="PAYMENT_OBJECT"/>
            <a:dataSet id="doc_category_list_ds" lookupCode="PAYMENT_REQ_DOC_CATEGORY"/>
            <a:dataSet id="pay_req_update_header_ds" autoCreate="true">
                <a:fields>
                    <a:field name="payment_requisition_attach_id" prompt="EXP_REPORT_HEADERS.ATTACH_ID" required="true"/>
                    <a:field name="currency_code_display" displayField="currency_name" options="cur_list_ds" prompt="GLD_EXCHANGE_RATES.FROM_CURRENCY" readOnly="true" returnField="currency_code" valueField="currency_code"/>
                    <a:field name="payment_requisition_create_by" prompt="EXP_REPORT_HEADERS.CREATE_BY" readOnly="true"/>
                    <a:field name="payment_requisition_header_id"/>
                    <a:field name="operation_unit_id"/>
                    <a:field name="contract_header_id"/>
                    <a:field name="p_partner_id"/>
                    <a:field name="p_req_id"/>
                    <a:field name="p_cont_flag"/>
                    <a:field name="employee_id_display" displayField="name_code" options="emp_list_ds" prompt="EXP_REQUISITION_HEADERS.EMPLOYEE_ID" readOnly="true" returnField="employee_id" valueField="employee_id">
                        <a:mapping>
                            <a:map from="operate_unit_id" to="operation_unit_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="employee_id"/>
                    <a:field name="position_id_display" displayField="pos_desc" options="position_list_ds" prompt="CSH_PAYMENT_REQUISITION_HDS.POSITION_ID" required="true" returnField="position_id" valueField="position_id"/>
                    <a:field name="position_id"/>
                    <a:field name="requisition_date" prompt="CSH_PAYMENT_REQUISITION_HDS.REQUISITION_DATE" readOnly="true"/>
                    <a:field name="requisition_number" prompt="CSH_DOC_PAYMENT_COMPANY.DOCUMENT_ID" readOnly="true"/>
                    <a:field name="partner_category_display" displayField="code_value_name" options="payment_object_list_ds" prompt="EXP_REPORT_HEADERS.PAYEE_TARGET" readOnly="true" returnField="partner_category" valueField="code_value"/>
                    <a:field name="partner_category"/>
                    <a:field name="partner_code" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="450" lovWidth="600" prompt="ACP_INVOICE_HEADERS.PAYEE_ID">
                        <a:mapping>
                            <a:map from="partner_code" to="partner_code"/>
                            <a:map from="id" to="p_partner_id"/>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_number_ext" to="account_number_ext"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="currency_code" displayField="currency_code" options="cur_list_ds" prompt="GLD_EXCHANGE_RATES.FROM_CURRENCY" readOnly="true" returnField="currency_code" valueField="currency_code"/>
                    <a:field name="amount" prompt="CSH_PAYMENT_REQUISITION_HDS.AMOUNT" readOnly="true"/>
                    <a:field name="description" prompt="CSH_PAYMENT_REQUISITION_HDS.DESCRIPTION" required="true"/>
                    <a:field name="status_name" prompt="PUR_PURCHASE_ORDER.DOCUMENT_STATUS" readOnly="true"/>
                    <a:field name="type_id"/>
                    <a:field name="csh_type_id_display" displayField="description" options="pay_req_type_ds" prompt="CSH_PAY_REQ_TYPES.TYPE_CODE" readOnly="true">
                        <a:mapping>
                            <a:map from="type_id" to="csh_type_id"/>
                            <!--20130329 保存不了 修改-->
                            <a:map from="payment_method_desc" to="payment_method_id_display"/>
                            <a:map from="payment_method_id" to="payment_method_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="csh_type_id"/>
                    <a:field name="payment_method_id_display" displayField="description" options="payment_methods_list_ds" prompt="CSH_TRANSACTION_HEADERS.PAYMENT_METHOD_ID" readOnly="true" returnField="payment_method_id" valueField="payment_method_id"/>
                    <a:field name="payment_method_id"/>
                    <a:field name="source_type"/>
                    <!--   <a:field name="related_transactions" required="true" requiredMessage="关联交易代码不能为空"/>
                    <a:field name="related_transactions_desc" lovGridHeight="290" lovHeight="420" lovService="exp.EXP1010.fnd_dimension_values_vl_for_lov?dimension_code=RELATED_TRANS" lovWidth="530" required="true" requiredMessage="关联交易描述不能为空" title="关联交易">
                        <a:mapping>
                            <a:map from="dimension_value_code" to="related_transactions"/>
                            <a:map from="description" to="related_transactions_desc"/>
                        </a:mapping>
                    </a:field> -->
                </a:fields>
                <a:events>
                    <a:event name="add" handler="initFunction_update"/>
                    <a:event name="update" handler="headerUpdateFunction_update"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pay_req_update_line_ds" autoCount="true" autoQuery="true" model="csh.csh_pay_req_line_query" queryUrl="${/request/@context_path}/autocrud/csh.csh_pay_req_line_query/query?payment_requisition_header_id=${/parameter/@payment_requisition_header_id}" selectable="true">
                <a:fields>
                    <a:field name="csh_transaction_class_code"/>
                    <a:field name="repay_flag"/>
                    <!--必须关联申请标志-->
                    <a:field name="req_required_flag"/>
                    <a:field name="cls_des" displayField="description" options="trans_classes_ds" prompt="CSH_PAYMENT_REQUISITION_PAYMENT.SACTION_CLASS_DESC" required="true" returnField="req_required_flag" valueField="req_required_flag">
                        <a:mapping>
                            <a:map from="repay_flag" to="repay_flag"/>
                            <a:map from="req_required_flag" to="req_required_flag"/>
                            <a:map from="csh_transaction_class_code" to="csh_transaction_class_code"/>
                            <a:map from="description" to="cls_des"/>
                        </a:mapping>
                    </a:field>
                    <!-- <a:field name="cls_des" displayField="description" options="trans_classes_ds" prompt="CSH_PAYMENT_REQUISITION_PAYMENT.SACTION_CLASS_DESC" required="true" returnField="csh_transaction_class_code" valueField="csh_transaction_class_code"/> -->
                    <a:field name="payment_requisition_line_type" defaultValue="OTHERS"/>
                    <a:field name="payment_requisition_line_type_display" displayField="code_value_name" options="doc_category_list_ds" prompt="CSH_PAYMENT_REQUISITION_LNS.PAYMENT_REQUISITION_LINE_TYPE" required="true" returnField="payment_requisition_line_type" valueField="code_value"/>
                    <a:field name="ref_document_id_display" lovGridHeight="320" lovHeight="450" lovWidth="650" prompt="CSH_PAYMENT_REQUISITION_LNS.REF_DOCUMENT_ID" title=" ">
                        <a:mapping>
                            <a:map from="exp_requisition_number" to="ref_document_id_display"/>
                            <a:map from="p_need_payment_amount" to="need_payment_amount"/>
                            <a:map from="p_requisited_amount" to="requisited_amount"/>
                            <a:map from="p_requisited_unpayment_amount" to="requisited_unpayment_amount"/>
                            <a:map from="exp_requisition_header_id" to="ref_document_id"/>
                            <a:map from="cont_flag" to="cont_flag"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="partner_category" required="true"/>
                    <a:field name="partner_category_display" displayField="code_value_name" options="payment_object_list_ds" prompt="EXP_REPORT_HEADERS.PAYEE_TARGET" readOnly="true" returnField="partner_category" valueField="code_value"/>
                    <a:field name="partner_id"/>
                    <a:field name="p_partner_name" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="450" lovWidth="650" prompt="ACP_INVOICE_HEADERS.PAYEE_ID" required="true" title="ACP_INVOICE_HEADERS.PAYEE_ID">
                        <a:mapping>
                            <a:map from="partner_code" to="p_partner_name"/>
                            <a:map from="id" to="partner_id"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="account_number_ext" to="account_number_ext"/>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <!-- <a:field name="payment_method_id_display" displayField="description" options="payment_methods_list_ds" prompt="CSH_TRANSACTION_HEADERS.PAYMENT_METHOD_ID" required="true" returnField="payment_method_id" valueField="payment_method_id"/>
                    <a:field name="payment_method_id"/> -->
                    <a:field name="payment_method_id_display" displayField="description" options="payment_methods_list_ds" prompt="ACP.DESCRIPTION_METHOD" required="true">
                        <a:mapping>
                            <a:map from="description" to="payment_method_id_display"/>
                            <a:map from="payment_method_id" to="payment_method_id"/>
                            <a:map from="payment_method_code" to="payment_method_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_method_code"/>
                    <!--  lovService="csh.exp_employee_accounts" -->
                    <a:field name="account_number_ext" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="450" lovWidth="750" prompt="" readOnly="true" required="true" title="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NUM">
                        <a:mapping>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_number_ext" to="account_number_ext"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_number" autoComplete="true" autoCompleteField="contract_number" lovGridHeight="320" lovHeight="450" lovWidth="500" prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" title="CON_CONTRACT_HEADERS.CONT_DOCUMENT_NUMBER">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_number"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_schedule_line_number" autoComplete="true" autoCompleteField="payment_schedule_line_number" lovGridHeight="320" lovHeight="450" lovWidth="750" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title=" ">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="payment_schedule_line_number"/>
                            <a:map from="payment_schedule_line_id" to="payment_schedule_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="description" prompt="CSH_PAYMENT_REQUISITION_HDS.DESCRIPTION"/>
                    <a:field name="need_payment_amount" prompt="CSH_PAYMENT_REQUISITION_LNS.NEED_PAYMENT_AMOUNT"/>
                    <a:field name="requisited_amount" prompt="CSH_PAYMENT_REQUISITION_LNS.REQUISITED_AMOUNT"/>
                    <a:field name="requisited_unpayment_amount" prompt="CSH_PAYMENT_REQUISITION_LNS.REQUISITED_UNPAYMENT_AMOUNT"/>
                    <a:field name="amount" prompt="CSH_PAYMENT_REQUISITION_LNS.CURRENT_AMOUNT" required="true" validator="amountValidator"/>
                    <a:field name="payment_schedule_line_id"/>
                    <a:field name="payment_requisition_header_id"/>
                    <a:field name="payment_requisition_line_id"/>
                    <a:field name="contract_header_id"/>
                    <a:field name="ref_document_id"/>
                    <a:field name="cont_flag"/>
                    <a:field name="gather_flag_desc" displayField="code_value_name" options="gather_flag_ds" required="true" returnField="gather_flag" valueField="code_value"/>
                    <a:field name="gather_flag" defaultValue="1"/>
                    <a:field name="plan_repayment_date" required="true" validator="dateValidator"/>
                    <a:field name="repay_flag"/>
                    <a:field name="repay_desc" displayField="value" options="receipt_repay_ds" returnField="repay_code" valueField="code"/>
                    <a:field name="repay_code"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="addFunction_update"/>
                    <a:event name="update" handler="updateFunction_update"/>
                    <a:event name="load" handler="updateFunction_load"/>
                    <a:event name="remove" handler="amountChanged"/>
                    <!-- added by majianjian at 2014-07-11 删除行后，更新头金额 -->
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton id="saveButton" click="saveFunction_update" text="HAP_SAVE" width="80"/>
                <a:toolbarButton id="submitButton_update" click="submitFunction_update" text="PROMPT.SUBMIT" width="80"/>
                <a:toolbarButton click="backFunction_update" text="HAP_BACK" width="80"/>
                <a:toolbarButton id="uploadButton" click="uploadFile" text="影像上传" width="80"/>
                <!-- <a:toolbarButton id="uploadImagBtn" click="uploadImag" text="影像拍摄" width="80"/> -->
                <a:toolbarButton click="history" text="PROMPT.HISTORY" width="80"/>
                <!-- <a:toolbarButton id="oaBtn" click="csh_oasign" text="关联OA审批" width="80"/> -->
                <a:toolbarButton id="deleteButton" click="deleteCshReq" text="PROMPT.DELETE_DOCUMENT" width="80"/>
            </a:screenTopToolbar>
            <a:form id="pay_req_update_header_form" column="1" title="借款付款单维护">
                <a:box column="4" style="width:100%">
                    <a:textField name="requisition_number" bindTarget="pay_req_update_header_ds"/>
                    <a:comboBox name="csh_type_id_display" bindTarget="pay_req_update_header_ds"/>
                    <a:datePicker name="requisition_date" bindTarget="pay_req_update_header_ds"/>
                    <a:numberField name="amount" allowDecimals="true" allowFormat="true" bindTarget="pay_req_update_header_ds"/>
                    <a:comboBox name="employee_id_display" id="employee_id_cmp" bindTarget="pay_req_update_header_ds">
                        <a:events>
                            <a:event name="select" handler="changePartner"/>
                        </a:events>
                    </a:comboBox>
                    <a:comboBox name="position_id_display" bindtarget="pay_req_update_header_ds"/>
                    <a:numberField name="payment_requisition_attach_id" allowDecimals="false" bindtarget="pay_req_update_header_ds"/>
                    <a:comboBox name="currency_code_display" id="currency_code_cmp" bindTarget="pay_req_update_header_ds"/>
                    <a:textField name="payment_requisition_create_by" bindTarget="pay_req_update_header_ds"/>
                    <a:comboBox name="payment_method_id_display" bindTarget="pay_req_update_header_ds"/>
                    <!-- <a:comboBox name="partner_category_display" bindTarget="pay_req_update_header_ds">
                        <a:events>
                            <a:event name="select" handler="changePartner"/>
                        </a:events>
                    </a:comboBox>
                    <a:lov name="partner_code" bindTarget="pay_req_update_header_ds"/> -->
                    <!-- <a:lov name="related_transactions_desc" bindTarget="pay_req_update_header_ds" prompt="关联交易"/> -->
                </a:box>
                <a:box style="width:100%">
                    <a:textArea name="description" id="pay_req_update_header_ta" bindtarget="pay_req_update_header_ds" colspan="4"/>
                </a:box>
            </a:form>
            <a:grid id="pay_req_grid" bindTarget="pay_req_update_line_ds" marginHeight="296" navBar="true">
                <a:toolBar>
                    <a:button id="addButton_update" click="createLineRecord" icon="${/request/@context_path}/images/add.gif" text="HAP_NEW"/>
                    <!-- <a:button id="deleteButton_update" click="deleteFuncion" icon="${/request/@context_path}/images/remove.gif" text="HAP_DELETE"/> -->
                    <a:button id="deleteButton_update" type="delete"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="cls_des" align="center" editorFunction="comboboxEditorFunction" width="150"/>
                    <a:column name="payment_requisition_line_type_display" align="center" editorFunction="comboboxEditorFunction" width="150"/>
                    <a:column name="ref_document_id_display" align="center" editorFunction="refDocIdDisEdiFunction" width="150"/>
                    <a:column name="partner_category_display" align="center" editorFunction="comboboxEditorFunction" width="80"/>
                    <a:column name="p_partner_name" align="center" editorFunction="isCellEditLovPart" width="150"/>
                    <a:column name="amount" align="right" editorFunction="numberfieldEditorFunction" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="account_number_ext" align="center" editorFunction="isCellEditLov" prompt="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NUM"/>
                    <a:column name="account_name" align="center" prompt="EXP_EMPLOYEE_ACCOUNTS.BANK_ACCOUNT_NAME" width="80"/>
                    <!-- <a:column name="payment_method_id_display" align="center" editorFunction="comboboxEditorFunction" prompt="ACP.DESCRIPTION_METHOD"/> -->
                    <a:column name="plan_repayment_date" editor="dp_ed" prompt="计划还款日" renderer="Aurora.formatDate"/>
                    <!-- <a:column name="repay_desc" editor="combobox_editor_update" prompt="收据补缴"/> -->
                    <!-- <a:column name="gather_flag_desc" align="center" prompt="TRAVEL_PLAN_TYPE.CENTRALIZED_CLEARING_FLAG" width="120"/> -->
                    <!-- <a:column name="need_payment_amount" align="right" editorFunction="isCellEditableFunction_update"/> -->
                    <!-- <a:column name="requisited_amount" align="right" editorFunction="isCellEditableFunction_update"/> -->
                    <!-- <a:column name="requisited_unpayment_amount" align="right" editorFunction="isCellEditableFunction_update"/> -->
                    <a:column name="description" align="left" editorFunction="textfieldEditorFunction" width="250"/>
                    <a:column name="contract_number" align="center" editorFunction="conNumFunction" width="150"/>
                    <a:column name="payment_schedule_line_number" align="center" editorFunction="paySchLineNumFunction" width="150"/>
                    <!-- <a:column name="csh_airfare_assign" align="center" prompt="机票信息" renderer="csh_airfare_assign"/> -->
                    <!-- <a:column name="bank_id" align="center" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" renderer="bankAssign"/> -->
                </a:columns>
                <a:editors>
                    <a:textField id="txt_editor_19_length" maxLength="38"/>
                    <a:comboBox id="combobox_editor_update"/>
                    <a:textField id="textfield_editor_update"/>
                    <a:lov id="ref_doc_id_lov">
                        <a:events>
                            <a:event name="commit" handler="refDocCommitFunction_update"/>
                        </a:events>
                    </a:lov>
                    <a:lov id="con_num_lov"/>
                    <a:lov id="p_partner_name_lov">
                        <a:events>
                            <a:event name="commit" handler="partnerNameCommitFunction_update"/>
                        </a:events>
                    </a:lov>
                    <a:lov id="pay_sch_line_num_lov"/>
                    <a:numberField id="numberfield_editor_update"/>
                    <a:datePicker id="dp_ed"/>
                </a:editors>
                <a:events>
                    <a:event name="cellclick" handler="cellClickFunction_update"/>
                </a:events>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
            payReqLoadComplete();
            
            function payReqUpdateInitSize() {
                //描述宽度
                var labelWidth = 75;
                //标签宽度,5 = 3padding + 2border-spacing
                var tagWidth = 150 + 5;
                //页面宽度、高度
                var vw = $A.getViewportWidth();
                var vh = $A.getViewportHeight();
                //留白宽度
                var marginWidth = 35;
                //自适应宽度
                var autoWidth = vw - marginWidth;
                //Form内部宽度，-2border
                var formInnerWidth = autoWidth - 2;
                //所占列数
                var colSpan = 4;
                //设置组件的自适应宽度
                Ext.get('pay_req_update_header_form').setWidth(autoWidth + 4);
                $('pay_req_grid').setWidth(autoWidth);
                //设置TextArea的自适应宽度,别问我最后那个6是哪里来的，试出来的
                Ext.get('pay_req_update_header_ta').setWidth(formInnerWidth - (formInnerWidth / colSpan - labelWidth - tagWidth) - labelWidth - 6);
            }
            //Ext.fly(window).on('resize', payReqUpdateInitSize);
            payReqUpdateInitSize();
        ]]></script>
    </a:view>
</a:screen>
