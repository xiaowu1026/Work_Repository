<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: zhangbaotong3893 $
    $Date: 2013/09/10 03:29:27 $
    $Revision: 1.7 $
    $Purpose: IOS版登录
-->
<a:service xmlns:s="aurora.plugin.script" xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <!-- <a:model-execute model="mobile.clients.commons.login.sys_user_login_with_userid"/>
        <a:session-clear/>
        <a:session-write source="/session"/>
        <a:session-write source="/parameter/@user_language" target="lang"/>
        <a:put-cookie name="SID" maxAge="2592000" value="${/parameter/@sid}"/>
        <a:put-cookie name="JSID" value="${/parameter/@encryted_session_id}"/>
        <a:put-cookie name="IS_NTLM" value="N"/> -->
        <!-- token绑定-->
        <!-- <a:model-execute model="mobile.clients.commons.login.mbs_user_login_token_binding"/> -->
        <s:server-script><![CDATA[
            try {
                var parameter = $ctx.parameter;
                parameter.user_language = 'ZHS';
            
                $bm('mobile.clients.commons.login.sys_user_login_with_userid').execute();
            
                var message = parameter.message;
                var sid = parameter.sid;
                var session_id = $session.session_id;
                var user_language = parameter.user_language;
                var encryted_session_id = parameter.encryted_session_id;
                var success = $ctx.success;
                // println(parameter.toXML())
                // println($session.toXML())
                // $session.clear();
                $session.write('session_id', '/session/@session_id');
                $session.write('lang', '/parameter/@user_language');
                $session.write('user_id', '/session/@user_id');
                $session.write('company_id', '/session/@company_id');
                $session.write('role_id', '/session/@role_id');
                $session.copy();
                $cookie.put('SID', sid);
                $cookie.put('JSID', encryted_session_id);
                $cookie.put('IS_NTLM', 'N');
                // println('after login');
                // println(parameter.toXML())
                // println($session.toXML())
            
                $bm('mobile.clients.commons.login.mbs_user_login_token_binding').execute();
            
                var result = new CompositeMap();
                var head = result.createChild('head');
                head.message = message;
                head.code = success ? 'ok' : 'failure';
                var body = result.createChild('body');
                body.token = sid;
            
                //println(result);
                //println("--------------------")
                //println($session.toXML());
                //println("--------------------")
                var json = Packages.uncertain.composite.JSONAdaptor.toJSONObject(result.getData(), null);
                var resp = $ctx.getData().get('_instance.javax.servlet.http.HttpServletResponse');
                resp.setCharacterEncoding("utf-8");
                json.write(resp.getWriter());
                resp.getWriter().close();
            
            } catch (e) {
                //println(e.message);
                var serviceContext = Packages.aurora.service.ServiceContext.createServiceContext($ctx.getData());
                var ed = $instance('aurora.service.exception.IExceptionDescriptor')
                var map = new CompositeMap(ed.process(serviceContext, e.javaException))
                //println(map.message)
            
                var result = new CompositeMap();
                var head = result.createChild('head');
                head.message = map.message;
                head.code = 'failure';
            
                //println(result);
            
                var json = Packages.uncertain.composite.JSONAdaptor.toJSONObject(result.getData(), null);
                var resp = $ctx.getData().get('_instance.javax.servlet.http.HttpServletResponse');
                resp.setCharacterEncoding("utf-8");
                json.write(resp.getWriter());
                resp.getWriter().close();
                
                //直接写死返回信息
                // var result = {
                	// head: {
                    	// message: "用户名或密码错误，请重新输入！",
                    	// code:  'failure'
                	// }
            
            	// };
            }
        ]]></s:server-script>
    </a:init-procedure>
    <a:service-output output="/parameter"/>
</a:service>
