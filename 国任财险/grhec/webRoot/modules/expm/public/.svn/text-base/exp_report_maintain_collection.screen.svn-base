<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Mouse Chow  
    $Date: 2012-3-13 下午01:19:19  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:c="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" tag="exp_report" trace="true">
    <a:init-procedure>
        <a:model-query autoCount="false" fetchAll="true" model="expm.exp_report_head_show" rootPath="head_data"/>
        <a:model-query defaultWhereClause="expense_report_type_id=nvl(${/parameter/@expense_report_type_id},(select hh.exp_report_type_id from exp_report_headers hh where hh.exp_report_header_id=${/parameter/@exp_report_header_id}))" fetchAll="true" model="exp.exp_expense_report_types_vl" rootPath="budget_control"/>
        <a:model-query autoCount="false" defaultWhereClause="currency_code=${/model/head_data/record/@exp_report_currency_code}" fetchAll="true" model="gld.gld_currency_vl" rootPath="precision"/>
        <a:model-query autocount="false" fetchall="true" model="csh.csh_payment_methods_list" rootpath="payment_method_list"/>
        <a:model-query autocount="false" defaultwhereclause="exists (select 1 from exp_employee_assigns eea         where eea.position_id=op.position_id    and eea.enabled_flag = &apos;Y&apos;   and   eea.employee_id= nvl(${/parameter/@employee_id},${/model/head_data/record/@employee_id}))  and company_id = ${/session/@company_id}" fetchall="true" model="exp.exp_org_position" rootpath="position_list"/>
        <a:model-query autocount="false" fetchall="true" model="fnd.fnd_companies_set_of_books" rootpath="fnd_company_bm"/>
        <a:model-query autocount="false" fetchall="true" model="expm.exp_report_head_dimension" rootpath="head_dimension"/>
        <a:model-query autocount="false" fetchall="true" model="expm.exp_report_head_object" rootpath="head_object"/>
        <a:model-query autocount="false" fetchall="true" model="expm.exp_report_line_dimension" rootpath="line_dimension"/>
        <a:model-query autocount="false" fetchall="true" model="expm.exp_report_line_object" rootpath="line_object"/>
        <a:model-query fetchAll="true" model="expm.expm_get_policy_enabled" rootpath="policy_enabled"/>
        <a:model-query autoCount="false" fetchAll="true" model="expm.exp_requisition_exchange_type_init" rootPath="exchange_type"/>
        <a:model-query autoCount="true" model="expm.exp_report_get_check_log_count" rootPath="check_log_count"/>
        <a:model-query fetchAll="true" model="exp.EXP1330.exp_ygz_usage_types_lov" rootPath="usage_type"/>
        <a:model-query fetchAll="true" model="exp.EXP1340.exp_ygz_invoice_types_lov" rootPath="invoice_type"/>
    </a:init-procedure>
    <a:view>
        <a:link id="uploadFile_link_10" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="exp_report_pmtplan_schedules_link_4" url="${/request/@context_path}/modules/expm/public/exp_report_pmtplan_schedules.screen"/>
        <a:link id="exp_report_query_history_link_6" url="${/request/@context_path}/modules/exp/public/exp_report_query_history.screen"/>
        <a:link id="exp_budget_check_log_link_9" url="${/request/@context_path}/modules/expm/public/exp_budget_check_log.screen"/>
        <a:link id="exp_report_line_assign_link" url="${/request/@context_path}/modules/expm/public/exp_report_line_assign.screen"/>
        <a:link id="exp_report_fromreq_link" url="${/request/@context_path}/modules/expm/public/exp_report_fromreq.screen"/>
        <a:link id="exp_report_maintain_query_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_maintain_query.screen"/>
        <a:link id="exp_report_query_link" url="${/request/@context_path}/modules/expm/public/exp_report_query.screen"/>
        <a:link id="exp_report_submit_link" url="${/request/@context_path}/modules/expm/public/exp_report_submit_control.svc"/>
        <a:link id="exp_report_bgt_check_link" model="db.bgt_check_pkg.report_bgt_check" modelaction="execute"/>
        <a:link id="exp_report_bgt_check_with_cache_link" model="db.bgt_check_with_cache_pkg.report_bgt_check" modelaction="execute"/>
        <a:link id="exp_report_pmt_check_link" model="db.exp_report_pkg.report_pmt_check" modelaction="execute"/>
        <a:link id="get_exchange_rate_link_16" model="expm.get_exchange_rate" modelaction="query"/>
        <a:link id="get_exchange_rate_by_quotation_link" model="expm.get_exchange_rate_by_quotation" modelaction="query"/>
        <a:link id="exp_report_type_choice_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_type_choice.screen"/>
        <a:link id="exp_report_delete_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_delete.svc"/>
        <a:link id="exp_report_maintain_link_3" url="${/request/@context_path}/modules/expm/public/exp_report_maintain.screen"/>
        <a:link id="exp_expense_policy_infoinit_link" model="expm.exp_expense_policy_infoinit" modelaction="update"/>
        <a:link id="exp_report_pmt_schedule_report_link" model="expm.exp_report_pmt_schedule_report" modelaction="execute"/>
        <a:link id="sys_fun_get_period_name_link_5" model="csh.sys_fun_get_period_name" modelaction="query"/>
        <a:link id="sys_fun_get_period_name_link_6" model="csh.sys_fun_get_bgt_period_name" modelaction="query"/>
        <a:link id="sys_fun_get_payment_date_link" model="db.exp_report_pkg.get_payment_schedule_date" modelaction="execute"/>
        <a:link id="exp_prepayment_post_readonly_link" url="${/request/@context_path}/modules/expm/exp_prepayment_post_readonly.screen"/>
        <a:link id="exp_prepayment_post_link_2" url="${/request/@context_path}/modules/expm/public/exp_prepayment_post.screen"/>
        <a:link id="exp_document_req_policy_query_link" url="${/request/@context_path}/modules/expm/public/exp_document_policy_query.screen"/>
        <a:link id="exp_report_maintain_get_exp_report_number_link" model="exp.exp_report_maintain_get_exp_report_number" modelaction="query"/>
        <a:link id="exp_bank_assign_link" url="${/request/@context_path}/modules/exp/EXP1050/exp_bank_assign_pmt_schedule_readonly.screen"/>
        <a:link id="exp_ygz_check_einvoice_used_link" model="expm.exp_ygz_check_einvoice_used" modelaction="query"/>
        <style><![CDATA[
            .accordion-box td{
                vertical-align:top;
            }
        ]]></style>
        <script><![CDATA[
            var lineNum = 0;
            var submitFlag = 0;
            var saveFlag = true; //保存标志(用在动态列)，默认当加载页面后是true（及保存状态）。当对页面上的东西进行改动后，保存标志变为false。此时必须要保存后才能提交。
            var initFlag = 1;
            var pmt_schedule_due_date;
            var index = 1;
            var initLineIndex = 0;
            var exp_report_header_id_bak = '${/parameter/@exp_report_header_id}';
            var canSave;
            
            var removeFlag = false;
            
            function sumRenderer(records, name) {
                var sum = 0;
                for (var i = 0;i < records.length;i++) {
                    var r = records[i].get(name);
                    var n = parseFloat(r);
                    if (!isNaN(n)) {
                        sum += n;
                    }
                }
                sum = Math.round(sum * 100) / 100; /*var total = (typeof(sum) == 'undefined' ? '' : parseFloat(sum).toFixed(Precision));*/
                return '<font>${l:PUR_ORDER_LINES.SUM_AMOUNT}：<label style="color:red">' + sum + '</label></font>';
            }
            
            function pmtGridcellclick(grid, row, name, record) {
            
                var metadata = record.getMeta();
                if (name == 'payee_partner_name') {
                    var f1 = metadata.getField('payee_partner_name');
                    var payee_category = record.get('payee_type_value');
                    if (payee_category == null || payee_category == undefined || payee_category == '') {
                        f1.setLovService('');
                    } else if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('csh.csh_pay_req_emp_lov');
                        // f1.setLovService('expm.exp_req_employee_lov');
                    } else if (payee_category == 'VENDER') {
                        // f1.setLovService('fnd.pur_system_venders');
                        f1.setLovService('csh.csh_pay_req_ven_lov');
                    } else {
                        // f1.setLovService('fnd.ord_system_customers');
                        f1.setLovService('csh.csh_pay_req_cus_lov');
                    }
                }
                if (name == 'line_number') {
                    var meta = record.getMeta();
                    var field = meta.getField('line_number');
                    if (!record.get('contract_header_id') || record.get('contract_header_id') == '') {
                        field.setLovService('');
                    } else {
                        field.setLovService('csh.csh_payment_schedule_lov');
                        field.setLovPara('contract_header_id', record.get('contract_header_id') || '');
                        field.setLovPara('currency_code', record.get('currency'));
                        field.setLovPara('partner_id', record.get('payee_id') || '');
                        field.setLovPara('partner_category1', record.get('payee_type_value') || '');
                    }
                }
                if (name == 'contract_number') {
                    var contractfield = record.getMeta().getField('contract_number');
                    contractfield.setLovPara('currency_code', record.get('currency'));
                    contractfield.setLovPara('partner_category', record.get('payee_type_value') || '');
                    contractfield.setLovPara('partner_id', record.get('payee_id') || '');
                    contractfield.setLovPara('company_id', record.get('company_id') || '');
                }
                if (name == 'account_number') {
            
                    var r = record.getMeta();
                    var f1 = r.getField('account_number');
                    var payee_category = record.get('payee_type_value');
                    if (payee_category == null || payee_category == undefined || payee_category == '') {
                        f1.setLovService('');
                    } else if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('expm.exp_employee_accounts');
                        record.getMeta().getField('account_number').setLovPara('employee_id', record.get('payee_id'));
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('expm.pur_vender_accounts');
                        record.getMeta().getField('account_number').setLovPara('vender_id', record.get('payee_id'));
                    } else {
                        f1.setLovService('expm.ord_customer_accounts');
                        record.getMeta().getField('account_number').setLovPara('customer_id', record.get('payee_id'));
                        //record.getMeta().getField('account_number').setLovPara('id', record.get('partner_id'));
                    }
                }
            }
            
            function gridcellclick(grid, row, name, record) {
            
                var metadata = record.getMeta();
                // if(name=="payee_category_name"){
                // }
                if (name == 'expense_type_name') {
                    $('exp_expense_type_ds').setQueryParameter('company_id', record.get('company_id'));
                    $('exp_expense_type_ds').query();
                }
                if (name == 'exp_req_item_name') {
                    $('exp_expense_item_ds').setQueryParameter('company_id', record.get('company_id'));
                    $('exp_expense_item_ds').setQueryParameter('expense_type_id', record.get('expense_type_id'));
                    $('exp_expense_item_ds').setQueryParameter('exp_report_type_id', '${/model/head_data/record/@exp_report_type_id}');
                    $('exp_expense_item_ds').query();
                }
                if (name == 'unit_name') {
                    var r = record.getMeta();
                    var f1 = r.getField('unit_name');
                    f1.setLovPara('company_id', record.get('company_id'));
                }
                if (name == 'responsibility_center_name') {
                    var r = record.getMeta();
                    var f1 = r.getField('responsibility_center_name');
                    f1.setLovPara('company_id', record.get('company_id'));
                    f1.setLovPara('unit_id', record.get('unit_id'));
                }
                if (name == 'employee_name') {
                    var r = record.getMeta();
                    var f1 = r.getField('employee_name');
                    var ds = $('exp_report_head');
                    var rd = ds.getAt(0);
                    f1.setLovPara('company_id', record.get('company_id'));
                    f1.setLovPara('employee_id', rd.get('employee_id'));
                }
                if (name == 'position_name') {
                    $('position_ds').setQueryParameter('company_id', record.get('company_id'));
                    $('position_ds').setQueryParameter('employee_id', record.get('employee_id'));
                    $('position_ds').query();
                }
                if (name == 'payment_schedule_line_code') {
                    var meta = record.getMeta();
                    var field = meta.getField('payment_schedule_line_code');
                    if (!record.get('contract_header_id') || record.get('contract_header_id') == '') {
                        field.setLovService('');
                    } else {
                        field.setLovService('csh.csh_payment_schedule_lov');
                        field.setLovPara('contract_header_id', record.get('contract_header_id') || '');
                        field.setLovPara('currency_code', $('exp_report_head').getAt(0).get('exp_report_currency_code'));
                        field.setLovPara('partner_category', record.get('payee_category') || '');
                    }
                }
                if (name == 'contract_header_code') {
                    var meta = record.getMeta();
                    var field = meta.getField('contract_header_code');
                    field.setLovPara('currency_code', $('exp_report_head').getAt(0).get('exp_report_currency_code'));
                    field.setLovPara('partner_category', record.get('payee_category') || '');
                    field.setLovPara('partner_id', record.get('payee_id') || '');
                    field.setLovPara('company_id', record.get('company_id') || '');
                }
                if (name == 'period_name') {
                    var meta = record.getMeta();
                    var field = meta.getField('period_name');
                    if ('${/model/budget_control/record/@budget_control_enabled}' == 'N') {
                        field.setLovService('bgt.bgt_periods_detail_lov');
                    } else {
                        field.setLovService('expm.bgt_periods_detail_lov');
                    }
                }
                //add by Qu yuanyuan 2015-11-25 预算中心维度
                if (name == 'd5') {
                    record.getMeta().getField('d5').setLovService('exp.EXP1010.fnd_unit_assign_bgt_centers_lov');
                    record.getMeta().getField('d5').setLovPara('unit_id', record.get('unit_id'));
                }
                //end by Qu yuanyuan
                else {
                    record.getMeta().getField('d1').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d2').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d3').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d4').setLovPara('company_id', record.get('company_id'));
                    // record.getMeta().getField('d5').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d6').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d7').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d8').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d9').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d10').setLovPara('company_id', record.get('company_id'));
                    record.getMeta().getField('d11').setLovPara('company_id', record.get('company_id'));
            
                }
                // added by HM @2016-06-01 税率与进项结构明细的联动
                if (name == 'input_tax_struc_detail_desc') {
                    if (record.get('special_invoice') == 'Y') {
                        $('vat_input_tax_structure_detail_ds').setQueryParameter('tax_rate', Number(record.get('tax_rate')));
                        $('vat_input_tax_structure_detail_ds').query();
                    }
                }
            }
            
            function headcommitpayee(lov, r1, r2) {
            
                var payee_category = r1.get('exp_report_payee_category')
                if (payee_category == null || payee_category == undefined || payee_category == '') {
                    return;
                } else if (payee_category == 'EMPLOYEE') {
                    r1.set('exp_report_payee_id', r2.get('employee_id'));
                } else if (payee_category == 'VENDER') {
                    r1.set('exp_report_payee_id', r2.get('vender_id'));
                } else {
                    r1.set('exp_report_payee_id', r2.get('customer_id'));
                }
            }
            
            function lineremove(dataset, record, index) {
            
                var exp_report_header_id = record.get("exp_report_header_id");
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.exp_report_pmt_schedule_report/execute*/
                    $('exp_report_pmt_schedule_report_link').getUrl(),
                    para: {
                        'exp_report_header_id': exp_report_header_id
                    },
                    success: function(res) {},
                    scope: this
                });
            }
            
            function pmtlineupdate(dataSet, record, name, value, oldvalue) {
                save = false;
                if (name == 'payee_type') {
                    record.set('payee_partner_name', '');
                    record.set('payee_id', '');
                    record.set('account_number', '');
                    record.set('account_name', '');
                    record.set('bank_code', '');
                    record.set('bank_name', '');
                    record.set('bank_location_code', '');
                    record.set('bank_location_name', '');
                    record.set('province_code', '');
                    record.set('province_name', '');
                    record.set('city_code', '');
                    record.set('city_name', '');
                } else if (name == 'payee_partner_name') {
                    if (value == '') {
                        record.set('payee_id', '');
                    }
                }
                if (name == 'contract_header_id' || name == 'payee_type' || name == 'payee_partner_name') {
                    if (name == 'payee_type' || name == 'payee_partner_name') {
                        record.set('contract_number', '');
                        record.set('contract_header_id', '');
                    }
                    record.set('payment_sch_line_id', '');
                    record.set('line_number', '');
                }
            
                if (name == 'schedule_due_date') {
                    // var expDate = $('exp_report_head').getAt(0).get('exp_report_data');
                    // var scheduleDueDate = $('pmtplan_schedules_ds').getCurrentRecord().get('schedule_due_date');
                    // var scd = new Date(scheduleDueDate);
                    // var scdF = scd.format('yyyy-mm-dd');
                    // if(expDate > scdF){
                    // canSave = false;
                    // }
                    // if(expDate <= scdF){
                    // canSave = true;
                    // }
                }
            }
            
            function rendererPrimPosition(value, record, name) {
                if (record.get('position_primary') == null) {
                    return value;
                } else {
                    record.set('position_name', record.get('position_primary'));
                    record.set('position_id', record.get('position_id'));
                    return value;
                }
            
            
            }
            
            function lineupdate(dataSet, record, name, value, oldvalue) {
                save = false;
            
                if (name == 'company_name') {
                    record.set('unit_id', '');
                    record.set('unit_name', '');
                    record.set('responsibility_center_id', '');
                    record.set('responsibility_center_name', '');
                    record.set('position_id', '');
                    record.set('position_name', '');
                    record.set('employee_id', '');
                    record.set('employee_name', '');
                    record.set('exp_req_item_id', '');
                    record.set('exp_req_item_name', '');
                    record.set('expense_type_name', '');
                    record.set('expense_type_id', '');
                    if (record.get('flag') == 1) {
                        record.set('d1', '');
                        record.set('d2', '');
                        record.set('d3', '');
                        record.set('d4', '');
                        record.set('d5', '');
                        record.set('d6', '');
                        record.set('d7', '');
                        record.set('d8', '');
                        record.set('d9', '');
                        record.set('d10', '');
                        record.set('d11', '');
                    }
                    record.set('flag', 1);
                    return;
                } else if (name == 'expense_type_name') {
                    record.set('exp_req_item_name', '');
                    record.set('exp_req_item_id', '');
                } else if (name == 'employee_name' || name == 'employee_id') {
                    record.set('position_id', '');
                    record.set('position_name', '');
                    return;
                } else if (name == 'primary_quantity' || name == 'report_amount') {
                    var quotation = $('exp_report_head').getAt(0).get('exp_report_rate_quotation');
            
            
                    var a = record.get('report_amount');
                    var b = record.get('primary_quantity');
                    if (quotation == 'DIRECT QUOTATION') {
                        record.set('price', isNaN(a / b) ? '' : (a / b).toFixed('${/model/precision/record/@precision}'));
                    } else {
                        record.set('price', isNaN(a / b) ? '' : (a / b).toFixed('${/model/precision/record/@precision}'));
                    }
                    var report_amount = record.get('report_amount');
                    var tax_amount = record.get('tax_amount');
                    var special_invoice = record.get('special_invoice');
                    if (special_invoice == 'Y') {
                        record.set('sale_amount', isNaN((Number(report_amount) - Number(tax_amount)).toFixed('${/model/precision/record/@precision}')) ? '' : (Number(report_amount) - Number(tax_amount)).toFixed('${/model/precision/record/@precision}'));
                    } else {
                        record.set('sale_amount', report_amount);
                    }
                    //算税率
                    var sale_amount = record.get('sale_amount');
                    if (sale_amount == 0 || Aurora.isEmpty(sale_amount)) {
                        record.set('tax_rate', null);
                    } else {
                        record.set('tax_rate', isNaN(tax_amount / sale_amount) ? '' : (tax_amount / sale_amount).toFixed('${/model/precision/record/@precision}'));
                    }
            
                    headAmountChanged();
                    return;
            
                } else if (name == "tax_amount") {
                    var report_amount = record.get('report_amount');
                    var special_invoice = record.get('special_invoice');
                    if (special_invoice == 'Y') {
                        record.set('sale_amount', isNaN((Number(report_amount) - Number(value)).toFixed('${/model/precision/record/@precision}')) ? '' : (Number(report_amount) - Number(value)).toFixed('${/model/precision/record/@precision}'));
                    } else {
                        record.set('sale_amount', report_amount);
                    }
                    var sale_amount = record.get('sale_amount');
                    if (sale_amount == 0 || Aurora.isEmpty(sale_amount)) {
                        record.set('tax_rate', null);
                    } else {
                        record.set('tax_rate', isNaN(value / sale_amount) ? '' : (value / sale_amount).toFixed('${/model/precision/record/@precision}'));
                    }
                } else if (name == 'date_from' || name == 'date_to') {
                    record.validate((name == 'date_from') ? 'date_to' : 'date_from');
                }
                //add by Qu yuanyuan 根据部门带出成本中心和预算中心
                else if (name == 'unit_id') {
            
                    var unit_id = record.get('unit_id');
                    if (unit_id) {
                        record.getMeta().getField('d5').setLovService('exp.EXP1010.fnd_unit_assign_bgt_centers_lov');
                        record.getMeta().getField('d5').setLovPara('unit_id', unit_id);
                        Aurora.request({
                            url: "${/request/@context_path}/autocrud/exp.EXP1010.fnd_unit_assign_bgt_centers_lov/execute",
                            scope: this,
                            para: {
                                unit_id: unit_id
                            },
                            success: function(ret) {
                                if (ret.result.dimension_value_id) {
                                    record.set('d5', ret.result.description);
                                    record.set('e5', ret.result.dimension_value_id);
            
                                } else {
                                    record.set('d5', '');
                                    record.set('e5', '');;
                                }
                            }
                        });
                    }
                }
                //end by Qu yuanyuan
                if (name == 'contract_header_id' || name == 'payee_category_name' || name == 'payee_name') {
                    if (name == 'payee_category_name' || name == 'payee_name') {
                        record.set('contract_header_code', '');
                        record.set('contract_header_id', '');
                    }
                    record.set('payment_schedule_line_id', '');
                    record.set('payment_schedule_line_code', '');
                }
            
                if (name == 'city' || name == 'place_type_id' || name == 'place_id' || name == 'exp_req_item_id' || name == 'position_id') {
                    lineInfoInit(record);
                }
            
                if (name == "invoice_type") {
                    if (record.get('special_invoice') == 'Y') {
                        record.getField('invoice_number').setRequired(true);
                        record.getField('invoice_status_desc').setRequired(true);
                        record.getField('invoice_code').setRequired(true);
                        record.getField('invoice_date').setRequired(true);
                        record.getField('tax_amount').setReadOnly(false);
                        record.getField('tax_amount').setRequired(true);
                        record.getField('usage_type_desc').setReadOnly(false);
                        record.getField('usage_type_desc').setRequired(true);
                        record.getField('input_tax_struc_detail_desc').setReadOnly(false);
                        record.getField('input_tax_struc_detail_desc').setRequired(true);
                    } else {
                        // modified by HM @2016-07-28 电子普通发票
                        var special_invoice = record.get('special_invoice');
                        var einvoice_flag = record.get('einvoice_flag');
                        if (einvoice_flag = 'Y' && special_invoice != 'Y') {
                            record.getField('invoice_number').setRequired(true);
                            record.getField('invoice_code').setRequired(true);
                            record.getField('invoice_date').setRequired(true);
                        } else {
                            record.getField('invoice_number').setRequired(false);
                            record.getField('invoice_code').setRequired(false);
                            record.getField('invoice_date').setRequired(false);
                        }
                        record.set('tax_amount', 0);
                        record.set('usage_type', null);
                        record.set('usage_type_desc', null);
                        record.set('input_tax_structure_detail', null);
                        record.set('input_tax_struc_detail_desc', null);
                        record.getField('invoice_status_desc').setRequired(false);
                        record.getField('tax_amount').setReadOnly(true);
                        record.getField('tax_amount').setRequired(false);
                        record.getField('usage_type_desc').setReadOnly(true);
                        record.getField('usage_type_desc').setRequired(false);
                        record.getField('input_tax_struc_detail_desc').setReadOnly(true);
                        record.getField('input_tax_struc_detail_desc').setRequired(false);
                    }
                } else if (name == 'usage_type') {
                    // 红票金额为负
                    if (value == 'YT999') {
                        if (record.get('report_amount') > 0) {
                            record.set('report_amount', -record.get('report_amount'))
                        }
                        if (record.get('tax') > 0) {
                            record.set('tax', -record.get('tax'))
                        }
                        if (record.get('sale_amount') > 0) {
                            record.set('sale_amount', -record.get('sale_amount'))
                        }
                    } else {
                        if (record.get('report_amount') < 0) {
                            record.set('report_amount', -record.get('report_amount'))
                        }
                        if (record.get('tax') < 0) {
                            record.set('tax', -record.get('tax'))
                        }
                        if (record.get('sale_amount') < 0) {
                            record.set('sale_amount', -record.get('sale_amount'))
                        }
                    }
                }
                // added by HM @2016-06-01 税率变动时清空进项结构明细
                else if (name == 'tax_rate') {
                    record.set('input_tax_structure_detail', null);
                    record.set('input_tax_struc_detail_desc', null);
                }
            }
            
            function headAmountChanged() {
                var records = $('exp_report_lines').getAll();
                var lineAmount = 0;
                for (var i = 0;i < records.length;i++) {
                    // commented by HM @2016-06-06 不再赋予默认值
                    // if (isNaN(records[i].get('report_amount'))) {
                    // records[i].set('report_amount', '0')
                    // }
                    var req_amount = parseFloat(records[i].get('report_amount'));
                    lineAmount += req_amount;
                }
                $('exp_report_head').getAt(0).set('sum_amount', lineAmount);
            
            }
            
            function removeLine() {
                headAmountChanged();
                index = index - 1;
                // initLineIndex = 0;
                // alert('删除一行后initLineIndex:' + initLineIndex);
            }
            
            function lineInfoInit(record) {
                if (record.get('employee_id')) {
                    record.set('p_rep_date', $('exp_report_head').getAt(0).get('exp_report_data'), true);
                    record.set('expense_item_id', record.get('exp_req_item_id'), true);
                    Aurora.request({
                        url: $('exp_expense_policy_infoinit_link').getUrl(),
                        para: record.data,
                        success: function(res) {
                            var lineinfo = res.result;
                            record.set('p_upper_limit', lineinfo['p_upper_limit'], true);
                            record.set('p_lower_limit', lineinfo['p_lower_limit'], true);
                            if (lineinfo['p_count'] == 1) {
                                record.set('p_event_name', lineinfo['p_event_name'], true);
                                record.set('p_commit_flag', lineinfo['p_commit_flag'], true);
                                record.set('p_changeable_flag', lineinfo['p_changeable_flag'], true);
                                record.set('p_id', lineinfo['p_id'], true);
                                if (lineinfo['p_default_flag'] == 'Y' && record.isNew) {
                                    record.set('price', lineinfo['p_expense_standard'], true);
                                }
                            } else {
                                record.set('p_changeable_flag', lineinfo['p_changeable_flag'], true);
                            }
                            if (record.get('p_changeable_flag') && record.get('p_changeable_flag') == 'N') {
                                record.getMeta().getField('price').setReadOnly(true);
                            } else {
                                record.getMeta().getField('price').setReadOnly(false);
                            }
                        },
                        scope: this
                    });
                }
            }
            
            function createLineRecord() {
                //add by zhaofan 头上专票不勾选，新增行，点保存提示必输Start
                var header = $('exp_report_head').getAt(0);
                var vat_special_invoice_include = header.get('vat_special_invoice_include');
                //add by zhaofan 头上专票不勾选，新增行，点保存提示必输End
                var ds = $('exp_report_lines');
                var linerecord = ds.getSelected();
                var lineIndex = index + initLineIndex;
                // alert('新增一行时lineIndex: ' + lineIndex + '--index: ' + index + '--initLineIndex: ' + initLineIndex);
                if (linerecord.length == 0) {
                    ds.create();
            
                    var records = ds.getAll();
            
                    for (i = 0;i < records.length - 1;i++) {
                        records[i].set('flag', 1);
                    }
                    var lrecord = ds.getAt(lineIndex - 1);
                    setinitdata(ds, lrecord, lineIndex);
                } else {
                    for (i = 0;i < linerecord.length;i++) {
                        var data = linerecord[i].data;
                        var newdata = {};
                        var len = ds.getAll().length;
                        for (var name in data) {
                            newdata[name] = data[name];
                        }
                        var record = new Aurora.Record(newdata);
                        record.isNew = 'true';
                        record.dirty = 'false';
                        var reportAmount = record.data['report_amount'];
                        // record.data['report_amount'] = 0;	commented by HM @2016-06-06 不再赋予默认值
                        ds.add(record);
                        record.set('report_amount', reportAmount);
                        lineNum = (index + initLineIndex) * 10;
                        var lineRecord = ds.getAt(len);
                        lineRecord.set('line_number', lineNum);
                        lineRecord.set('exp_report_line_id', '');
                        index = index + 1;
            
                        //add by zhaofan 头上专票不勾选，新增行，点保存提示必输Start
                        if (vat_special_invoice_include == 'N') {
                            lineRecord.getField('invoice_type_desc').setRequired(false);
                            lineRecord.getField('invoice_number').setRequired(false);
                            lineRecord.getField('invoice_status_desc').setRequired(false);
                            lineRecord.getField('invoice_code').setRequired(false);
                            lineRecord.getField('invoice_date').setRequired(false);
                            lineRecord.getField('tax_amount').setRequired(false);
                            lineRecord.getField('usage_type_desc').setRequired(false);
                            lineRecord.getField('input_tax_struc_detail_desc').setRequired(false);
                        }
                        //add by zhaofan 头上专票不勾选，新增行，点保存提示必输End
            
                    }
                }
                headAmountChanged();
            }
            
            function setpmtinitdata(ds, record, index) {
                var header = $('exp_report_head').getAt(0);
                var payee_category = header.get('exp_report_payee_category');
                record.set('currency', header.get('exp_report_currency_code'));
                record.set('schedule_start_date', header.get('exp_report_data'));
                record.set('schedule_due_date', pmt_schedule_due_date);
                record.set('currency_name', header.get('exp_report_currency_name'));
                record.set('exp_report_header_id', header.get('exp_report_header_id'));
                record.set('usedes', header.get('usedes'));
                record.set('usedes_name', header.get('usedes_name'));
                record.set('payee_type', header.get('exp_report_payee_category_name'));
                record.set('payee_type_value', header.get('exp_report_payee_category'));
                record.set('payee_partner_name', header.get('exp_report_payee_name'));
                record.set('payee_id', header.get('exp_report_payee_id'));
                record.set('account_number', header.get('account_number'));
                record.set('account_name', header.get('account_name'));
                record.set('bank_code', header.get('bank_code'));
                record.set('bank_name', header.get('bank_name'));
                record.set('bank_location_code', header.get('bank_location_code'));
                record.set('bank_location_name', header.get('bank_location'));
                record.set('province_code', header.get('province_code'));
                record.set('province_name', header.get('province_name'));
                record.set('city_code', header.get('city_code'));
                record.set('city_name', header.get('city_name'));
            
                record.set('payment_method', header.get('exp_report_payment_method'));
                record.set('payment_type_id', header.get('payment_method_id'));
                //add by Qu yuanyuan 20151202
                var gather_flag_records = $('gather_flag_ds').getAll();
                for (var i = 0;i < gather_flag_records.length;i++) {
                    if (gather_flag_records[i].get('code_value') == '1') {
                        record.set('gather_flag', gather_flag_records[i].get('code_value'));
                        record.set('gather_flag_desc', gather_flag_records[i].get('code_value_name'));
                        break;
                    }
                }
                //end by Qu yuanyuan
            }
            
            function setinitdata(dataSet, record, lineIndex) {
                if (initFlag == 2) return;
                var header = $('exp_report_head').getAt(0);
                var selectedLines = $('exp_report_lines').getSelected();
            
                var payee_category = header.get('exp_report_payee_category');
                var vat_special_invoice_include = header.get('vat_special_invoice_include');
                if (vat_special_invoice_include == 'Y') {
                    record.getField('invoice_number').setRequired(true);
                    record.getField('invoice_status_desc').setRequired(true);
                    record.getField('invoice_code').setRequired(true);
                    record.getField('invoice_date').setRequired(true);
                    record.getField('tax_amount').setRequired(true);
                    record.getField('tax_amount').setReadOnly(false);
                    record.getField('usage_type_desc').setRequired(true);
                    record.getField('usage_type_desc').setReadOnly(false);
                    record.getField('input_tax_struc_detail_desc').setRequired(true);
                    record.getField('input_tax_struc_detail_desc').setReadOnly(false);
                    /*  record.set('tax_amount', 0);
                     record.getField('tax_amount').setReadOnly(false);  */
                } else if (vat_special_invoice_include == 'N') {
                    record.getField('invoice_number').setRequired(false);
                    record.getField('invoice_status_desc').setRequired(false);
                    record.getField('invoice_code').setRequired(false);
                    record.getField('invoice_date').setRequired(false);
                    record.getField('tax_amount').setRequired(false);
                    record.getField('usage_type_desc').setRequired(false);
                    record.getField('usage_type_desc').setReadOnly(true);
                    record.getField('input_tax_struc_detail_desc').setRequired(false);
                    record.getField('input_tax_struc_detail_desc').setReadOnly(true);
                    record.set('invoice_date', null);
                    record.set('invoice_code', null);
                    record.set('usage_type', null);
                    record.set('usage_type_desc', null);
                    record.set('invoice_status', null);
                    record.set('invoice_status_desc', null);
                    record.set('input_tax_structure_detail', null);
                    record.set('input_tax_struc_detail_desc', null);
                    record.set('tax_amount', null);
                    record.set('sale_amount', null);
                    record.set('tax_rate', null);
                }
                var records = $('exp_report_head').getAll();
            
                if ($('exp_report_lines').getAll().length != 0) {
                    // lineNum = lineNum + 10;
                    lineNum = lineIndex * 10;
                    record.set('line_number', lineNum);
                    index = index + 1;
                }
                // record.set('primary_quantity', '1');	commented by HM @2016-06-06 不再赋予默认值
                record.set('company_id', header.get('company_id'));
                record.set('company_name', header.get('company_name'));
                record.set('unit_id', header.get('unit_id'));
                record.set('unit_name', header.get('unit_name'));
                //add by Qu yuanyuan 2015-11-25 根据部门找默认的预算中心
                Aurora.request({
                    url: "${/request/@context_path}/autocrud/exp.EXP1010.fnd_unit_assign_bgt_centers_lov/execute",
                    scope: this,
                    para: {
                        unit_id: header.get('unit_id')
                    },
                    success: function(ret) {
                        if (ret.result.default_dim_value_code) {
                            record.set('d5', ret.result.description);
                            record.set('e5', ret.result.dimension_value_id);
                        } else {
                            return;
                        }
                    }
                });
                //end by Qu yuanyuan 2015-11-25
                record.set('employee_id', header.get('employee_id'));
                record.set('employee_name', header.get('employee_name'));
                record.set('position_id', header.get('position_id'));
                record.set('position_name', header.get('position_name'));
                record.set('responsibility_center_name', header.get('responsibility_center_name'));
                record.set('responsibility_center_id', header.get('responsibility_center_id'));
                record.set('payee_category_name', header.get('exp_report_payee_category_name'));
                record.set('payee_category', header.get('exp_report_payee_category'));
                record.set('payee_name', header.get('exp_report_payee_name'));
                record.set('payee_id', header.get('exp_report_payee_id'));
                record.set('payment_flag', header.get('payment_flag'));
                record.set('currency_code', header.get('exp_report_currency_code'));
                record.set('exchange_rate', header.get('exp_report_rate'));
                record.set('period_name', header.get('period_name'));
                record.set('exchange_rate_type', header.get('exp_report_rate_type'));
                record.set('exchange_rate_quotation', header.get('exp_report_rate_quotation'));
            
                record.set('account_number', header.get('account_number'));
                record.set('account_name', header.get('account_name'));
            
                record.set('payment_type', header.get('exp_report_payment_method'));
                record.set('payment_type_id', header.get('payment_method_id'));
            
                record.set('expense_type_id', '${/model/budget_control/record/@default_expense_type}');
                record.set('expense_type_name', '${/model/budget_control/record/@default_expense_type_desc}');
            
            
                var saveFlag = true;
            }
            
            //循环校验每行计划付款行付款日期是否小于报销日期
            
            function pmtDateValidator() {
            
                var expDate = Aurora.formatDate($('exp_report_head').getAt(0).get('exp_report_data'));
                var pmt_ds = $('pmtplan_schedules_ds');
                var pmt_line_records = pmt_ds.getAll();
                var tmp = 0;
                if (pmt_line_records.length == 0) {
                    canSave = true;
                }
                if (pmt_line_records.length != 0) {
                    for (var t = 0;t < pmt_line_records.length;t++) {
                        var scheduleDueDate = Aurora.formatDate(pmt_line_records[t].get('schedule_due_date'));
                        if (expDate > scheduleDueDate) {
                            tmp++;
                        }
                    }
                }
                if (tmp != 0) {
                    canSave = false;
                }
                if (tmp == 0) {
                    canSave = true;
                }
            }
            
            function savereport() {
            
                //添加费用政策地点定义检查
                var records = $('exp_report_lines').getAll();
                var len = records.length;
                for (var i = 0;i < len;i++) {
                    lineInfoInit(records[i]);
                }
                pmtDateValidator();
                if (!canSave) {
                    Aurora.showInfoMessage('${l:PROMPT}', '计划付款日期不能小于报销日期', null, 250, 100);
                    return;
                }
                var d1 = $('exp_report_head_dimension');
                var d2 = $('exp_report_head_object');
                var rec = d2.getAt(0).data;
                if (!d1.validate()) {
                    return;
                }
                if (!d2.validate()) {
                    return;
                }

                if (!$('exp_report_head').validate()) {
                    return;
                }
                if (!$('exp_report_lines').validate()) {
                    return;
                }
                if (!$('pmtplan_schedules_ds').validate()) {
                    return;
                }
                if (!$('exp_report_object_lines').validate()) {
                    return;
                }
                if ($('exp_report_lines').getAll().length == 0) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PLEASE_INSERT_LINE_DATA}', null, 250, 100);
                    return;
                }
            
                for (var p in rec) {
                    if (p.substring(0, 1) == '#') {
                        var records = $('exp_report_object_lines').getAll();
                        var record;
                        for (var i = 0;i < records.length;i++) {
                            var tempRecord = records[i];
                            if (tempRecord.get('expense_object_type_id') == p.substring(1, p.length)) {
                                record = tempRecord;
                                break;
                            }
                        }
            
                        if (!record) {
                            record = new Aurora.Record({});
                            $('exp_report_object_lines').add(record);
                        }
            
                        record.data['expense_object_type_id'] = p.substring(1, p.length);
                        record.data['expense_object_id'] = rec[p];
                        record.data['expense_object_desc'] = rec['^' + p];
                        if (exp_report_header_id_bak != '') {
                            record.isNew = false;
                            record.dirty = true;
                        }
                    }
                }
            
                //头维度，当头维度修改之后将数据存放到行，如果没有修改就跳过该段逻辑
                var recd = d1.getAt(0).data;
                if (d1.isModified()) {
                    for (var p in recd) {
                        if (p.substring(0, 1) == 'e') {
                            var lines = $('exp_report_lines').getAll();
                            for (var i = 0,
                                l = lines.length;i < l;i++) {
                                lines[i].set(p, recd[p]);
                            }
                        }
                    }
                }
            
            
                var d3 = $('exp_report_lines');
                var linerecords = d3.getAll();
                for (var t = 0;t < linerecords.length;t++) {
                    var los = [];
                    var recp = linerecords[t].data
                    for (var q in recp) {
                        var llo = {};
                        if (q.substring(0, 1) == '^') {
            
                            llo['expense_object_type_id'] = q.substring(2, q.length);
                            llo['expense_object_id'] = recp[q.replace('^', '')];
                            llo['expense_object_desc'] = recp[q];
            
                            if (linerecords[t].isNew) {
                                llo['_status'] = 'insert';
                            } else {
                                llo['_status'] = 'update';
                                llo['exp_report_line_id'] = linerecords[t].get('exp_report_line_id');
                            }
                            los.push(llo);
                        }
                    }
                    linerecords[t].data['details'] = los;
                }
            
                //add 2013/1/7 wgf
                if (removeFlag) {
                    $('exp_report_head').getCurrentRecord().dirty = true;
                }
                // var length=d3.getAll().length;
                // for(var i=0;i<length;i++){
                // var record=d3.getAt(i);
                // }
            
                $('exp_report_head').submit();
                saveFlag = true; //保存成功后，保存标志变为true
                // alert(' 保存时index值:' + index);
                // alert('点击保存时值 exp_report_header_id_bak: '+ exp_report_header_id_bak);
            }
            
            function setfunctionamount(value, record, name) {
                var quotation = $('exp_report_head').getAt(0).get('exp_report_rate_quotation');
                var a = record.get('report_amount');
                var b = $('exp_report_head').getAt(0).get('exp_report_rate');
                if (quotation == 'DIRECT QUOTATION') {
                    record.data['report_functional_amount'] = isNaN(a * b) ? '' : (a * b).toFixed('${/model/precision/record/@precision}');
                    return isNaN(a * b) ? '' : Aurora.formatMoney((a * b).toFixed('${/model/precision/record/@precision}'));
                } else {
                    record.data['report_functional_amount'] = isNaN(a / b) ? '' : (a / b).toFixed('${/model/precision/record/@precision}');
                    return isNaN(a / b) ? '' : Aurora.formatMoney((a / b).toFixed('${/model/precision/record/@precision}'));
                }
            }
            
            function getpmtdate() {
                var period_name = $('exp_report_head').getAt(0).get('period_name');
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/csh.sys_fun_get_period_name/query*/
                    $('sys_fun_get_payment_date_link').getUrl() + '?_ban_remind=Y',
                    para: {
                        period_name: period_name
                    },
                    success: pmtdate,
                    scope: this
                });
            }
            
            function pmtcanaddaline() {
                if ($('pmtplan_schedules_ds').getAll().length == 0 && $('exp_report_head').validate()) {
                    if (exp_report_header_id_bak == '') {
                        var t = $('exp_report_head').getAt(0);
                        var r = t.getMeta();
                        r.getField('exp_report_position').setReadOnly(true);
                        r.getField('exp_report_data').setReadOnly(true);
                        r.getField('exp_report_payment_method').setReadOnly(true);
                        r.getField('exp_report_payee_name').setReadOnly(true);
                        r.getField('exp_report_rate_type_name').setReadOnly(true);
                        r.getField('exp_report_rate_quotation_name').setReadOnly(true);
                        r.getField('exp_report_rate').setReadOnly(true);
                        r.getField('exp_report_payee_category_name').setReadOnly(true);
                    }
                    return true;
                } else if ($('pmtplan_schedules_ds').getAll().length != 0) {
                    return true;
                } else {
                    return false;
                }
                return true;
            
            }
            
            function canaddaline() {
                if ($('exp_report_lines').getAll().length == 0 && $('exp_report_head').validate()) {
                    if (exp_report_header_id_bak == '') {
                        var t = $('exp_report_head').getAt(0);
                        var r = t.getMeta();
                        r.getField('exp_report_position').setReadOnly(true);
                        r.getField('exp_report_data').setReadOnly(true);
                        r.getField('exp_report_payment_method').setReadOnly(true);
                        r.getField('exp_report_payee_name').setReadOnly(true);
                        r.getField('exp_report_rate_type_name').setReadOnly(true);
                        r.getField('exp_report_rate_quotation_name').setReadOnly(true);
                        r.getField('exp_report_rate').setReadOnly(true);
                        r.getField('exp_report_payee_category_name').setReadOnly(true);
                    }
                    return true;
                } else if ($('exp_report_lines').getAll().length != 0) {
                    return true;
                } else {
                    return false;
                }
                return true;
            
            }
            //原点击保存后触发的操作
            
            function reloadres(ds, res) {
                saveFlag = true;
                //submitFlag具体作用不明，注释掉
                //if (submitFlag == 0) {
                var t = exp_report_header_id_bak == '' ? res.result.record.exp_report_header_id : exp_report_header_id_bak;
                // alert('点击保存后值 t: ' + t + ' res.result.record.exp_report_header_id: ' + res.result.record.exp_report_header_id + ' exp_report_header_id_bak: ' + exp_report_header_id_bak);
                Ext.get('deletereportBtn').show();
                Ext.get('uploadFileBtn').show();
                Ext.get('seeHisBtn').show();
                Ext.get('submitBtn').show();
                Ext.get('seeLog').show();
                Ext.get('newreportBtn').show();
                Ext.get('policy').show();
                // Aurora.request({
                // url:$('exp_report_maintain_get_exp_report_number_link').getUrl(),
                // para:{'exp_report_header_id':t},
                // success:function (data){
                // $('exp_report_head').getCurrentRecord().set('exp_report_number',data.result.record.exp_report_number);
                // }
                // });
                $('exp_report_head').setQueryParameter('exp_report_header_id', t);
                //注销掉头重新查询语句，防止刷新界面，使得设置的只读字段无效
                //$('exp_report_head').query();
                // alert('保存成功后index:' + index);
                index = 1;
                // alert('index值为1:' + index);
                $('exp_report_lines').setQueryParameter('exp_report_header_id', t);
                $('exp_report_lines').query();
                $('pmtplan_schedules_ds').setQueryParameter('exp_report_header_id', t);
                $('pmtplan_schedules_ds').query();
            
                exp_report_header_id_bak = t;
                //修改头维度DataSet和头费用对象DataSet的数据为dirty=false,isNew=false
                $('exp_report_head_dimension').getAt(0).dirty = false;
                $('exp_report_head_dimension').getAt(0).isNew = false;
            
                $('exp_report_head_object').getAt(0).dirty = false;
                $('exp_report_head_object').getAt(0).isNew = false;
            
                init_bak();
                //}
            }
            
            function deletereport() {
                Aurora.showConfirm('${l:EXP_REPORT_CREATE.DELETE}', '${l:EXP_REPORT_CREATE.DELETE}', function(cmp) {
                    if (exp_report_header_id_bak != '') {
                        Aurora.request({
                            url: /*exp_report_delete.svc*/
                            $('exp_report_delete_link_1').getUrl(),
                            para: {
                                exp_report_header_id: exp_report_header_id_bak
                            },
                            success: function() {
                                if (!opener) {
                                    window.location.href = /*exp_report_type_choice.screen*/
                                    $('exp_report_type_choice_link_1').getUrl()
                                } else {
                                    opener.query();
                                    window.close();
                                }
                            },
                            scope: this
                        });
                    }
            
                }, null, null, 85);
            
            }
            
            function header_ds_update(ds, record, name, value, oldvalue) {
                //update by robin 2016-04-12
                if (name == "vat_special_invoice_include") {
                    var lineData = $('exp_report_lines').getAll();
                    if (value == "Y") {
                        $('grid').showColumn('invoice_type_desc');
                        $('grid').showColumn('invoice_number');
                        $('grid').showColumn('invoice_status_desc');
                        $('grid').showColumn('invoice_code');
                        $('grid').showColumn('invoice_date');
                        $('grid').showColumn('usage_type_desc');
                        $('grid').showColumn('tax_amount');
                        $('grid').showColumn('sale_amount');
                        $('grid').showColumn('tax_rate');
                        $('grid').showColumn('input_tax_struc_detail_desc');
                        for (var i = 0;i < lineData.length;i++) {
                            lineData[i].getField('invoice_type_desc').setRequired(true);
                            if (lineData[i].get('special_invoice') == 'Y') {
                                lineData[i].getField('invoice_number').setRequired(true);
                                lineData[i].getField('invoice_status_desc').setRequired(true);
                                lineData[i].getField('invoice_code').setRequired(true);
                                lineData[i].getField('invoice_date').setRequired(true);
                                lineData[i].getField('tax_amount').setRequired(true);
                            } else {
                                // modified by HM @2016-07-28 电子普通发票
                                if (lineData[i].get('special_invoice') != 'Y' && lineData[i].get('einvoice_flag') == 'Y') {
                                    lineData[i].getField('invoice_number').setRequired(true);
                                    lineData[i].getField('invoice_code').setRequired(true);
                                    lineData[i].getField('invoice_date').setRequired(true);
                                } else {
                                    lineData[i].getField('invoice_number').setRequired(false);
                                    lineData[i].getField('invoice_code').setRequired(false);
                                    lineData[i].getField('invoice_date').setRequired(false);
                                }
                                lineData[i].getField('invoice_status_desc').setRequired(false);
                                lineData[i].getField('tax_amount').setRequired(false);
                            }
                        }
                    } else if (value == "N") {
                        $('grid').hideColumn('invoice_type_desc');
                        $('grid').hideColumn('invoice_number');
                        $('grid').hideColumn('invoice_status_desc');
                        $('grid').hideColumn('invoice_code');
                        $('grid').hideColumn('invoice_date');
                        $('grid').hideColumn('usage_type_desc');
                        $('grid').hideColumn('tax_amount');
                        $('grid').hideColumn('sale_amount');
                        $('grid').hideColumn('tax_rate');
                        $('grid').hideColumn('input_tax_struc_detail_desc');
                        for (var i = 0;i < lineData.length;i++) {
                            lineData[i].set('invoice_type', null);
                            lineData[i].set('invoice_type_desc', null);
                            lineData[i].set('invoice_number', null);
                            lineData[i].set('invoice_date', null);
                            lineData[i].set('invoice_code', null);
                            lineData[i].set('usage_type', null);
                            lineData[i].set('usage_type_desc', null);
                            lineData[i].set('invoice_status', null);
                            lineData[i].set('invoice_status_desc', null);
                            lineData[i].set('input_tax_structure_detail', null);
                            lineData[i].set('input_tax_struc_detail_desc', null);
                            lineData[i].set('tax_amount', null);
                            lineData[i].set('sale_amount', null);
                            lineData[i].set('tax_rate', null);
                            lineData[i].set('special_invoice', null);
                            lineData[i].getField('invoice_number').setRequired(false);
                            lineData[i].getField('invoice_status_desc').setRequired(false);
                            lineData[i].getField('invoice_code').setRequired(false);
                            lineData[i].getField('invoice_date').setRequired(false);
                            lineData[i].getField('tax_amount').setRequired(false);
                            lineData[i].getField('usage_type_desc').setRequired(false);
                            lineData[i].getField('invoice_type_desc').setRequired(false);
                            lineData[i].getField('input_tax_struc_detail_desc').setRequired(false);
                        }
                    }
                }
                if (name == 'exp_report_data') {
                    showPeriod(record);
                }
                if (name == 'rate_method_code') {
                    record.set('exp_report_rate_quotation_name', '');
                    record.set('exp_report_rate_quotation', '');
                    record.set('exp_report_rate', '');
                    var meta = record.getMeta();
                    if (value == 'DAILY' || value == 'FIXED') {
                        meta.getField('exp_report_rate_quotation_name').setReadOnly(true);
                        meta.getField('exp_report_rate_quotation_name').setRequired(false);
                        meta.getField('exp_report_rate').setReadOnly(true);
                        record.set('exp_report_rate', '');
            
                        // alert(record.get('functional_currency_code'));
                        // alert(record.get('exp_report_currency_code'));
                        // alert(record.get('exp_report_rate_type'));
                        // alert(record.get('exp_report_data'));
                        // alert(record.get('period_name'));
            
                        getExchangeRate({
                            fromCur: record.get('functional_currency_code'),
                            toCur: record.get('exp_report_currency_code'),
                            exchangeRateType: record.get('exp_report_rate_type'),
                            exchangeDate: record.get('exp_report_data'),
                            periodName: record.get('period_name')
                        });
                    } else if (value == 'PERIOD' || value == 'MANUAL') {
                        if (record.get('currency_code') != record.get('functional_currency_code')) {
                            meta.getField('exp_report_rate_quotation_name').setReadOnly(false);
                            meta.getField('exp_report_rate').setReadOnly(false);
                            meta.getField('exp_report_rate_quotation_name').setRequired(true);
                            meta.getField('exp_report_rate').setRequired(true);
                            record.set('exp_report_rate_quotation_name', '');
                            record.set('exp_report_rate', '');
                        }
                    } else {
            
                       }
                }
            
                if (name == 'exp_report_rate_quotation_name' || name == 'exp_report_rate_quotation') {
                    if (record.get('exp_report_rate_type') == null || record.get('exp_report_rate_type') == '') {
                        Aurora.showMessage('提示', '汇率类型不能为空');
                        return;
                    } else {
                        getExchangeRateByQuo({
                            fromCur: record.get('functional_currency_code'),
                            toCur: record.get('exp_report_currency_code'),
                            exchangeRateType: record.get('exp_report_rate_type'),
                            exchangeDate: record.get('exp_report_data'),
                            periodName: record.get('period_name'),
                            exchangeRateQuo: record.get('exp_report_rate_quotation')
                        });
                    }
            
                    // alert(record.get('functional_currency_code'));
                    // alert(record.get('exp_report_currency_code'));
                    // alert(record.get('exp_report_rate_type'));
                    // alert(record.get('exp_report_data'));
                    // alert(record.get('period_name'));
                }
            
                if (name == 'exp_report_payee_category') {
                    record.set('exp_report_payee_name', '');
                    record.set('exp_report_payee_id', '');
                    var payee_category = value;
                    var f1 = record.getField('exp_report_payee_name');
                    if (payee_category == null || payee_category == undefined || payee_category == '') {
                        f1.setReadOnly(true);
                        f1.setLovService('');
                    } else if (payee_category == 'EMPLOYEE') {
                        f1.setReadOnly(false);
                        f1.setLovService('expm.exp_employee_req_lov');
                        f1.setTitle('${l:EXP_EMPLOYEES.QUERY}');
                    } else if (payee_category == 'VENDER') {
                        f1.setReadOnly(false);
                        f1.setTitle('${l:VENDER_SEARCH}');
                        f1.setLovService('expm.exp_vender_req_lov');
                    } else {
                        f1.setReadOnly(false);
                        f1.setTitle('${l:EXP_EMPLOYEES.QUERY}');
                        f1.setLovService('expm.exp_customer_req_lov');
                    }
            
                }
            
            }
            
            function getExchangeRate(param) {
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.get_exchange_rate/query*/
                    $('get_exchange_rate_link_16').getUrl(),
                    para: {
                        from_currency: param.fromCur,
                        to_currency: param.toCur,
                        exchange_date: param.exchangeDate,
                        exchange_period_name: param.periodName,
                        exchange_rate_type: param.exchangeRateType
                    },
                    success: setRateAndQuotation,
                    scope: this
                });
            }
            
            function getExchangeRateByQuo(param) {
                Aurora.request({
                    url: $('get_exchange_rate_by_quotation_link').getUrl(),
                    para: {
                        from_currency: param.fromCur,
                        to_currency: param.toCur,
                        exchange_date: param.exchangeDate,
                        exchange_period_name: param.periodName,
                        exchange_rate_type: param.exchangeRateType,
                        exchange_rate_quo: param.exchangeRateQuo
                    },
                    success: setRate,
                    scope: this
                });
            }
            
            function setRate(res) {
                var record = $('exp_report_head').getAt(0);
                record.set('exp_report_rate', res.result.record.exchange_rate);
            }
            
            function setRateAndQuotation(res) {
                var record = $('exp_report_head').getAt(0);
                record.set('exp_report_rate', res.result.record.exchange_rate);
                record.set('exp_report_rate_quotation_name', getDisplayByValue(res.result.record.exchange_rate_quotation, 'code_value', 'code_value_name', 'quotation'));
                record.set('exp_report_rate_quotation', res.result.record.exchange_rate_quotation);
            }
            
            function getDisplayByValue(value, valueName, displayName, dsName) {
                var dataSet = $(dsName);
                var records = dataSet.getAll();
                for (var i = 0;i < records.length;i++) {
                    if (records[i].get(valueName) == value) {
                        return records[i].get(displayName);
                    }
                }
            }
            
            function showPeriod(record) {
                var r_date = Aurora.formatDate(record.get('exp_report_data'));
                if ($('exp_report_head').getAt(0).get('budget_control_enabled') == 'N') {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/csh.sys_fun_get_period_name/query*/
                        $('sys_fun_get_period_name_link_5').getUrl(),
                        para: {
                            p_date: r_date
                        },
                        success: periodname,
                        scope: this
                    });
                } else {
                    Aurora.request({
                        url: $('sys_fun_get_period_name_link_6').getUrl(),
                        para: {
                            p_date: r_date
                        },
                        success: periodname,
                        scope: this
                    });
                }
            }
            
            function periodname(res) {
                if (res) {
                    var pluscols = res.result.record.period_name;
                    if (pluscols) {
                        $('exp_report_head').getAt(0).set('period_name', pluscols);
                    } else {
                        $('exp_report_head').getAt(0).set('period_name', '');
                    }
                }
                getpmtdate();
            }
            
            function pmtdate(res) {
                var pluscols = res.result.schedule_due_date;
                if (pluscols) {
                    pmt_schedule_due_date = pluscols;
                    // $('exp_report_head').getAt(0).set('schedule_due_date', pluscols);
                } else {
                    pmt_schedule_due_date = '';
                    // $('exp_report_head').getAt(0).set('schedule_due_date', '');
                }
            }
            
            function datapickerselect(dp, date) {
                var rd = Aurora.formatDate(date);
                $('exp_report_period_ds').setQueryParameter('company_id', '${/session/@company_id}');
                $('exp_report_period_ds').setQueryParameter('date', rd);
                $('exp_report_period_ds').query();
            
            }
            
            function afterperiodds(ds) {
                var record = ds.getAt(0);
            
                $('exp_report_head').getAt(0).set('period_name', record.get('period_name'));
            }
            
            function afterrateds(ds) {
                var record = ds.getAt(0);
            
                if (record) {
                    $('exp_report_head').getAt(0).set('exp_report_rate_quotation', record.get('exchange_rate_quotation'));
                    $('exp_report_head').getAt(0).set('exp_report_rate_quotation_name', record.get('quotation_display'));
                    $('exp_report_head').getAt(0).set('exp_report_rate', record.get('exchange_rate'));
                }
            }
            
            function loadheader(ds, o) {
            
                var record = ds.getCurrentRecord();
                var payee_category = record.get('exp_report_payee_category');
                var f1 = ds.getField('exp_report_payee_name');
                if (payee_category == 'EMPLOYEE') {
                    f1.setLovService('expm.exp_employee_req_lov');
                } else if (payee_category == 'VENDER') {
                    f1.setLovService('expm.exp_vender_req_lov');
                } else {
                    f1.setLovService('expm.exp_customer_req_lov');
                }
            }
            
            function submitreport() {
                //add by Qu yuanyuan 采用支票的付款方式时进行提示
                //add by zhaofan 增加锁屏，防止重复点击    Start
                if ($('new_report_detail_window')) {
                    Aurora.Masker.mask($('new_report_detail_window').wrap, '提交中...');
                } else {
                    Aurora.Masker.mask(Ext.getBody(), '提交中...');
                };
                //add by zhaofan 增加锁屏，防止重复点击    End
                var pmt_records = $('pmtplan_schedules_ds').getAll();
                var payment_method_code = '';
                var flag = '';
                var wirte_off_flag = '';
                for (var i = 0;i < pmt_records.length;i++) {
                    var payment_method_code = pmt_records[i].get('payment_method_code');
                    if (payment_method_code == '20') {
                        flag = 'Y';
                        break;
                    } else {
                        flag = 'N'
                    }
                    var un_write_off_flag = pmt_records[i].get('un_write_off_flag');
                    if (un_write_off_flag == 'N') {
                        wirte_off_flag = 'Y';
                        break;
                    } else {
                        wirte_off_flag = 'N';
                    }
                }
            
                if (flag == 'Y') {
                    Aurora.showOkCancelWindow('${l:PROMPT}', '${l:PROMPT.PLEASE_EDIT_REASONS}', function() {
                        submitreport_update();
                    }, null, 300, 100);
                }
                if (wirte_off_flag == 'Y') {
                    Aurora.showOkCancelWindow('${l:PROMPT}', '您存在借款，是否已完成核销?若未核销借款,请至计划付款行处核销借款!', function() {
                        submitreport_update();
                    }, null, 300, 100);
                } else {
                    submitreport_update();
                }
            }
            
            function submitreport_update() {
                submitFlag = true;
            
                //必须在动态列和行都处于无脏数据的情况下才能进行保存。否则提示。
                if (!saveFlag || $('exp_report_lines').isModified() || ($('exp_report_head').isModified()) || ($('pmtplan_schedules_ds').isModified())) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.SAVE_SUBMIT}', null, 250, 100);
            
                    //add by zhaofan 增加锁屏，防止重复点击    Start
                    if ($('new_report_detail_window')) {
                        Aurora.Masker.unmask($('new_report_detail_window').wrap);
                    } else {
                        Aurora.Masker.unmask(Ext.getBody());
                    };
                    //add by zhaofan 增加锁屏，防止重复点击    End
                    return;
                }
                if (!$('exp_report_lines').validate()) {
            
                    //add by zhaofan 增加锁屏，防止重复点击    Start
                    if ($('new_report_detail_window')) {
                        Aurora.Masker.unmask($('new_report_detail_window').wrap);
                    } else {
                        Aurora.Masker.unmask(Ext.getBody());
                    };
                    //add by zhaofan 增加锁屏，防止重复点击    End
                    return;
                }
                if (!$('pmtplan_schedules_ds').validate()) {
            
                    //add by zhaofan 增加锁屏，防止重复点击    Start
                    if ($('new_report_detail_window')) {
                        Aurora.Masker.unmask($('new_report_detail_window').wrap);
                    } else {
                        Aurora.Masker.unmask(Ext.getBody());
                    };
                    //add by zhaofan 增加锁屏，防止重复点击    End
                    return;
                }
                //修改报销单凭证生成方式，所以不需要支付的报销单也需要进行计划付款行总金额与行总金额对等校验
                Aurora.request({
                    url: $('exp_report_pmt_check_link').getUrl(),
                    para: {
                        exp_report_header_id: exp_report_header_id_bak
                    },
                    success: function(res) {
                        if (res.result.flag == 'N') {
                            Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.PMT_CHECK}', null, 250, 100);
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                            return;
                        } else {
                            // modified by HM @2016-07-29 验证电子发票是否被使用过
                            expYGZCheckEInvoiceUsedFun();
                            // bgtCheck();
                        }
                    },
                    failure: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    error: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    scope: this
                });
            
            }
            
            function submit_report_with_cache() {
                submitFlag = true;
                //必须在动态列和行都处于无脏数据的情况下才能进行保存。否则提示。
                if (!saveFlag || $('exp_report_lines').isModified() || ($('exp_report_head').isModified()) || ($('pmtplan_schedules_ds').isModified())) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.SAVE_SUBMIT}', null, 250, 100);
                    return;
                }
                if (!$('exp_report_lines').validate()) {
                    return;
                }
                if (!$('pmtplan_schedules_ds').validate()) {
                    return;
                }
                //修改报销单凭证生成方式，所以不需要支付的报销单也需要进行计划付款行总金额与行总金额对等校验
                Aurora.request({
                    url: $('exp_report_pmt_check_link').getUrl(),
                    para: {
                        exp_report_header_id: exp_report_header_id_bak
                    },
                    success: function(res) {
                        if (res.result.flag == 'N') {
                            Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.PMT_CHECK}', null, 250, 100);
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                            return;
                        } else {
                            bgt_check_with_cache();
                        }
                    },
                    failure: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    error: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    scope: this
                });
            }
            
            function bgtCheck() {
                if ($('exp_report_head').getAt(0).get('budget_control_enabled') == 'Y') {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/expm.exp_report_bgt_check/execute*/
                        $('exp_report_bgt_check_link').getUrl(),
                        para: {
                            exp_report_header_id: exp_report_header_id_bak,
                            flag: 'N'
                        },
                        success: nextProcess,
                        failure: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        error: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        scope: this
                    });
                } else {
                    finalSubmit();
                }
            }
            
            function bgt_check_with_cache() {
                if ($('exp_report_head').getAt(0).get('budget_control_enabled') == 'Y') {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/expm.exp_report_bgt_check/execute*/
                        $('exp_report_bgt_check_with_cache_link').getUrl(),
                        para: {
                            exp_report_header_id: exp_report_header_id_bak,
                            flag: 'N'
                        },
                        success: next_process_witch_cache,
                        failure: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        error: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        scope: this
                    });
                } else {
                    finalSubmit();
                }
            }
            
            function nextProcess(res) {
                var t = res.result['error_level_code'];
                if (!t) {
                    checkSubmit();
                } else if (t == 'ALLOWED') {
                    var okCan = Aurora.showConfirm('${l:PROMPT}', res.result.message_code, function() {
                        checkSubmit('Y');
                        okCan.close();
                    }, function() {
                        //$('submitBtn').disable();
                        okCan.close();
                    }, 300, 200);
                } else if (t == 'BLOCK') {
                    Aurora.showInfoMessage('${l:PROMPT}', res.result.message_code, null, 250, 100);
                    submitFlag = 0;
                    //add by zhaofan 增加锁屏，防止重复点击    Start
                    if ($('new_report_detail_window')) {
                        Aurora.Masker.unmask($('new_report_detail_window').wrap);
                    } else {
                        Aurora.Masker.unmask(Ext.getBody());
                    };
                    //add by zhaofan 增加锁屏，防止重复点击    End
                }
            }
            
            function next_process_witch_cache(res) {
                var t = res.result['error_level_code'];
                if (!t) {
                    check_submit_with_cache();
                } else if (t == 'ALLOWED') {
                    var okCan = Aurora.showConfirm('${l:PROMPT}', res.result.message_code, function() {
                        check_submit_with_cache('Y');
                        okCan.close();
                    }, function() {
                        //$('submitBtn').disable();
                        okCan.close();
                    }, 300, 200);
                } else if (t == 'BLOCK') {
                    Aurora.showInfoMessage('${l:PROMPT}', res.result.message_code, null, 250, 100);
                    submitFlag = 0;
                    //add by zhaofan 增加锁屏，防止重复点击    Start
                    if ($('new_report_detail_window')) {
                        Aurora.Masker.unmask($('new_report_detail_window').wrap);
                    } else {
                        Aurora.Masker.unmask(Ext.getBody());
                    };
                    //add by zhaofan 增加锁屏，防止重复点击    End
                }
            }
            
            function checkSubmit(flag) {
                if (flag) {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/expm.exp_report_bgt_check/execute*/
                        $('exp_report_bgt_check_link').getUrl(),
                        para: {
                            exp_report_header_id: exp_report_header_id_bak,
                            flag: 'Y'
                        },
                        success: finalSubmit,
                        failure: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        error: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        scope: this
                    });
                } else {
                    finalSubmit();
                }
            }
            
            function check_submit_with_cache(flag) {
                if (flag) {
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/expm.exp_report_bgt_check/execute*/
                        $('exp_report_bgt_check_with_cache_link').getUrl(),
                        para: {
                            exp_report_header_id: exp_report_header_id_bak,
                            flag: 'Y'
                        },
                        success: finalSubmit,
                        failure: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        error: function() {
                            //add by zhaofan 增加锁屏，防止重复点击    Start
                            if ($('new_report_detail_window')) {
                                Aurora.Masker.unmask($('new_report_detail_window').wrap);
                            } else {
                                Aurora.Masker.unmask(Ext.getBody());
                            };
                            //add by zhaofan 增加锁屏，防止重复点击    End
                        },
                        scope: this
                    });
                } else {
                    finalSubmit();
                }
            }
            
            function finalSubmit() {
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.exp_report_submit/execute*/
                    $('exp_report_submit_link').getUrl(),
                    para: {
                        exp_report_header_id: exp_report_header_id_bak
                    },
                    success: function() {
                        if (window.opener) {
                            window.opener.query();
                            window.close();
                        } else {
                            window.location.href = /*exp_report_maintain_query.screen*/
                            $('exp_report_maintain_query_link_1').getUrl();
            
                        }
                    },
                    failure: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    error: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    scope: this
                });
            }
            
            function processres(ds, res) {
                var record = ds.getAt(0);
                if (record.get('error_level_code') == '' || record.get('error_level_code') == null || record.get('error_level_code') == undefined) {
                    final_submit();
                } else if (record.get('error_level_code') == 'ALLOWED') {
            
                   } else if (record.get('error_level_code') == 'BLOCK') {
                    Aurora.showErrorMessage('${l:PROMPT}', '', null, null, 100);
                }
            
            }
            
            function resetobjds(ds, res) {
                $('exp_report_object_lines').removeAll();
            }
            
            function dispatchtomaintain(ds, res) {
                if (!opener) {
                    window.location.href = /*exp_report_maintain_query.screen*/
                    $('exp_report_maintain_query_link_1').getUrl()
                } else {
                    opener.query();
                    window.close();
                }
            }
            
            function final_submit() {
                var record = $('exp_report_head_final_submit').getAt(0);
                record.set('exp_report_header_id', exp_report_header_id_bak);
                record.isNew = true;
                record.dirty = true;
                $('exp_report_head_final_submit').submit();
            }
            
            function newreport() {
                //window.location.href = /*exp_report_type_choice.screen*/
                //$('exp_report_type_choice_link_1').getUrl();
                var okCan = Aurora.showConfirm('${l:PROMPT}', '${l:PROMPTS.SAVE_CONTINUE}', function() {
                    if ($('exp_report_lines').getAll().length == 0) {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:PLEASE_INSERT_LINE_DATA}', null, 250, 100);
                        return;
                    }
                    savereport();
                    window.location.href = /*exp_report_type_choice.screen*/
                    $('exp_report_type_choice_link_1').getUrl();
                    okCan.close();
                }, null, 250, 100);
            }
            
            function createforereq() {
                new Aurora.Window({
                    id: 'exp_report_fromreq_screen',
                    url: /*exp_report_fromreq.screen*/
                    $('exp_report_fromreq_link').getUrl() + '?currency_code=' + $('exp_report_head').getAt(0).get('exp_report_currency_code') + '&exp_report_type_id=' + $('exp_report_head').getAt(0).get('exp_report_type_id') + '&employee_id=' + $('exp_report_head').getAt(0).get('employee_id'),
                    title: '${l:CREATE_REP_FROM_REQ}',
                    fullScreen: true
                });
            }
            
            function assign() {
                var grid = $('exp_report_lines');
                records = grid.getSelected();
            
                if (records.length != 1) {
                    Aurora.showWarningMessage('${l:PROMPT}', '${l:PROMPTS.PLEASE_SELECT_RIGHT_REP_LINES}');
                    return false;
                } else if (records[0].get('exp_report_line_id')) {
                    new Aurora.Window({
                        id: 'exp_report_line_assign_window',
                        title: '${l:EXP_REPORT_LINE_ASSIGN.TITLE_MAIN}',
                        url: $('exp_report_line_assign_link').getUrl() + '?line_id=' + records[0].get('exp_report_line_id') + '&budget_control_enabled=' + '${/model/budget_control/record/@budget_control_enabled}',
                        fullScreen: true
                    });
                } else {
                    Aurora.showWarningMessage('${l:PROMPT}', '${l:PROMPTS.PLEASE__ASSIGNMENT}');
                    return false;
                }
            }
            
            function policyFunction() {
                var record = $('exp_report_head').getAt(0);
                // if(records.length != 1){
                // Aurora.showMessage('${l:PROMPT}','${l:CHOOSE_ONE_RECORD}');
                // return;
                // }
                new Aurora.Window({
                    url: $('exp_document_req_policy_query_link').getUrl() + '?exp_report_header_id=' + record.get('exp_report_header_id'),
                    title: '${l:PROMPT.VIEW_POLICIES}',
                    id: 'exp_document_policy_query_screen',
                    fullScreen: true
                });
            }
            
            
            function dateValidate(record, name, value) {
                if (name == 'date_from' || name == 'date_to') {
                    var start_date = record.get('date_from');
                    var end_date = record.get('date_to');
                    if (typeof(end_date) != 'undefined' && !Ext.isEmpty(end_date)) {
                        if (!compareDate(start_date, end_date)) {
                            return '${l:EXP_REPORT_MAINTAIN.DATE_VALIDATE}';
                        }
                    }
                    return true;
                }
            }
            
            function compareDate(start, end) {
                if (start > end) {
                    return false;
                }
                return true;
            }
            
            function seeLog() {
                var url = $('exp_budget_check_log_link_9').getUrl() + '?exp_requisition_header_id=' + exp_report_header_id_bak + '&document_type=EXP_REPORT&doc_header_id=' + exp_report_header_id_bak;
                new Aurora.Window({
                    id: 'exp_budget_check_log_screen',
                    url: url,
                    title: '${l:EXP_REQUESTION_CREATE_SERVICE.LOG}',
                    fullScreen: true
                });
            }
            
            function seeHistory() {
                var url = $('exp_report_query_history_link_6').getUrl() + '?head_id=' + exp_report_header_id_bak;
                new Aurora.Window({
                    id: 'exp_report_history_window',
                    url: url,
                    title: '${l:REC_REQUISITION_HISTORY}',
                    fullScreen: true
                });
            }
            
            function planPay() {
                var url = $('exp_report_pmtplan_schedules_link_4').getUrl() + '?exp_requisition_header_id=' + exp_report_header_id_bak + '&document_type=EXP_REPORT';
                new Aurora.Window({
                    url: url,
                    title: '',
                    id: 'exp_report_pmtplan_schedules_screen',
                    fullScreen: true
                });
            }
            
            function createLineFromReq(array) {
                initFlag = 2;
                for (var i = 0;i < array.length;i++) {
                    var item = array[i];
                    item['exp_report_header_id'] = exp_report_header_id_bak;
                    lineNum = lineNum + 10;
                    item['line_number'] = lineNum;
                    $('exp_report_lines').add(new Aurora.Record(item));
                    var record = $('exp_report_lines').getCurrentRecord();
                    var header = $('exp_report_head').getAt(0);
                    record.set('payment_type', header.get('exp_report_payment_method'));
                    record.set('payment_flag', header.get('payment_flag'));
                    record.set('period_name', header.get('period_name'));
                    record.set('payment_type_id', header.get('payment_method_id'));
            
                    //add by Qu yuanyuan将申请单维度6：决策单元带入报销单头上
                    header_dimension = $('exp_report_head_dimension').getAt(0);
                    header_dimension.set('d6', item['d6']);
                    header_dimension.set('e6', item['e6']);
                    //end by Qu yuanyuan
                }
                initFlag = 1;
            }
            
            function lineLoadFunction(ds) {
                initLineIndex = $('exp_report_lines').getAll().length;
                // alert('行加载时initLineIndex: ' + initLineIndex + '--index: ' + index);
                var record = $('exp_report_head').getCurrentRecord();
                var value = record.get('exp_report_payee_id');
                var payee_category = record.get('exp_report_payee_category');
                var vat_special_invoice_include = record.get('vat_special_invoice_include');
                // headAmountChanged();
                //added by mjj at 2014-07-17 行加载时检查费用政策
                var records = $('exp_report_lines').getAll();
                var len = records.length;
                for (var i = 0;i < len;i++) {
                    lineInfoInit(records[i]);
                    // if (vat_special_invoice_include == 'Y') {
                    var invoice_type = records[i].get('invoice_type')
                    var special_invoice = records[i].get('special_invoice');
                    var einvoice_flag = records[i].get('einvoice_flag');
                    if (special_invoice == 'Y') {
                        records[i].getField('invoice_type_desc').setRequired(true);
                        records[i].getField('invoice_number').setRequired(true);
                        records[i].getField('invoice_status_desc').setRequired(true);
                        records[i].getField('invoice_code').setRequired(true);
                        records[i].getField('invoice_date').setRequired(true);
                        records[i].getField('tax_amount').setReadOnly(false);
                        records[i].getField('tax_amount').setRequired(true);
                        records[i].getField('usage_type_desc').setReadOnly(false);
                        records[i].getField('usage_type_desc').setRequired(true);
                        records[i].getField('input_tax_struc_detail_desc').setReadOnly(false);
                        records[i].getField('input_tax_struc_detail_desc').setRequired(true);
                    } else {
                        // records[i].set('tax_amount', 0); commentted by HM @2016-04-22 这句会导致保存后modified标志被改变，无法提交
                        if (Aurora.isEmpty(invoice_type)) {
                            records[i].getField('invoice_type_desc').setRequired(false);
                        } else {
                            records[i].getField('invoice_type_desc').setRequired(true);
                        }
                        // modified by HM @2016-07-28 电子普通发票
                        if (einvoice_flag == 'Y' && special_invoice != 'Y') {
                            records[i].getField('invoice_number').setRequired(true);
                            records[i].getField('invoice_code').setRequired(true);
                            records[i].getField('invoice_date').setRequired(true);
                        } else {
                            records[i].getField('invoice_number').setRequired(false);
                            records[i].getField('invoice_code').setRequired(false);
                            records[i].getField('invoice_date').setRequired(false);
                        }
                        records[i].getField('invoice_status_desc').setRequired(false);
                        records[i].getField('tax_amount').setReadOnly(true);
                        records[i].getField('tax_amount').setRequired(false);
                        records[i].getField('usage_type_desc').setReadOnly(true);
                        records[i].getField('usage_type_desc').setRequired(false);
                        records[i].getField('input_tax_struc_detail_desc').setReadOnly(true);
                        records[i].getField('input_tax_struc_detail_desc').setRequired(false);
                    }
                    // }
                }
                // end add
            
                var vat_special_invoice_include = record.get('vat_special_invoice_include');
                if (vat_special_invoice_include == "Y") {
                    //报销单行新增字段隐藏
                    $('grid').showColumn('invoice_type_desc');
                    $('grid').showColumn('invoice_number');
                    $('grid').showColumn('invoice_status_desc');
                    $('grid').showColumn('invoice_code');
                    $('grid').showColumn('invoice_date');
                    $('grid').showColumn('usage_type_desc');
                    $('grid').showColumn('tax_amount');
                    $('grid').showColumn('sale_amount');
                    $('grid').showColumn('tax_rate');
                    $('grid').showColumn('input_tax_struc_detail_desc');
            
            
                } else if (vat_special_invoice_include == "N") {
                    //报销单按现有的正常显示。
                    $('grid').hideColumn('invoice_type_desc');
                    $('grid').hideColumn('invoice_number');
                    $('grid').hideColumn('invoice_status_desc');
                    $('grid').hideColumn('invoice_code');
                    $('grid').hideColumn('invoice_date');
                    $('grid').hideColumn('usage_type_desc');
                    $('grid').hideColumn('tax_amount');
                    $('grid').hideColumn('sale_amount');
                    $('grid').hideColumn('tax_rate');
                    $('grid').hideColumn('input_tax_struc_detail_desc');
                }
            }
            
            function priceValidator(record, name, value) {
                if (record.get('p_upper_limit')) {
                    if (parseFloat(value) > parseFloat(record.get('p_upper_limit')) && record.get('p_commit_flag') && record.get('p_commit_flag') == 'N') {
                        return '${l:EXP_REPORT_CREATE.CHECK1}';
                    }
                }
            
                if (record.get('p_lower_limit')) {
                    if (parseFloat(value) < parseFloat(record.get('p_lower_limit')) && record.get('p_commit_flag') && record.get('p_commit_flag') == 'N') {
                        return '${l:EXP_REPORT_CREATE.CHECK2}';
                    }
                }
            
                return true;
            }
            
            function uploadFile() {
                var url = /*${/request/@context_path}/uploadFile.screen*/
                $('uploadFile_link_10').getUrl() + '?table_name=EXP_REPORT_HEADERS&header_id=' + exp_report_header_id_bak
                new Aurora.Window({
                    url: url,
                    title: '${l:ATM.UPLOAD_ATTACHMENT}',
                    id: 'check_upload_file_screen',
                    width: 600,
                    height: 400
                });
            }
            //当修改动态列里面的数据后保存标志变为false
            
            function dynamicUpdate() {
                saveFlag = false;
            
            }
            
            function line_number(value, record, name) {
                return ($('pmtplan_schedules_ds').indexOf(record) + 1) * 10;
            }
            
            function submit_success() {
                $('pmtplan_schedules_ds').query();
            }
            
            function edit_function_grop(value, record, name) {
                var url = $('exp_prepayment_post_link_2').getUrl() + '?payment_schedule_line_id=' + record.get('payment_schedule_line_id');
                if (!record.isNew) {
                    if (record.get('un_write_off_flag') == 'N') {
                        return '<a style="color:red" href="javascript:view_doc(\'' + url + '\')">' + '${l:EXP_REPORT_PMTPLAN_SCHEDULES.VERIFICATION_LOAN}' + '</a>';
                    } else {
                        return '<a href="javascript:view_doc(\'' + url + '\')">' + '${l:EXP_REPORT_PMTPLAN_SCHEDULES.VERIFICATION_LOAN}' + '</a>';
                    }
                }
            }
            
            function view_doc(url) {
                new Aurora.Window({
                    url: url,
                    fullScreen: true,
                    title: '',
                    id: 'exp_prepayment_post_screen'
                });
            }
            
            function init_bak() {
                var t = $('exp_report_head').getAt(0);
                var r = t.getMeta();
                var f1 = r.getField('exp_report_rate_type_name');
                var f2 = r.getField('exp_report_rate_quotation_name');
                var f3 = r.getField('exp_report_rate');
            
                if (t.get('exp_report_currency_code') != t.get('functional_currency_code')) {} else {
                    f1.setReadOnly(true);
                    f2.setReadOnly(true);
                    f3.setReadOnly(true);
                    f3.setRequired(true);
                    t.set('exp_report_rate', 1);
                }
                if (exp_report_header_id_bak != '') {
                    r.getField('exp_report_data').setReadOnly(true);
                    r.getField('exp_report_payment_method').setReadOnly(true);
                    r.getField('exp_report_position').setReadOnly(true);
                    r.getField('exp_report_payee_category_name').setReadOnly(true);
                    r.getField('exp_report_payee_name').setReadOnly(true);
                    for (var fieldName in t.data) {
                        if (fieldName != 'exp_report_description' && fieldName != 'exp_report_attach_id' && fieldName != "vat_special_invoice_include") {
                            r.getField(fieldName).setReadOnly(true);
                        }
                    }
                    f1 = r.getField('exp_report_payee_name');
                    var payee_category = t.get('exp_report_payee_category');
                    if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('expm.exp_employee_req_lov');
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('expm.exp_vender_req_lov');
                    } else {
                        f1.setLovService('expm.exp_customer_req_lov');
                    }
                }
            }
            
            function pmtQuery() {
                $('pmtplan_schedules_ds').query();
            }
            
            //计划付款行删除2013/1/7 wgf
            
            function remove_record(ds, record, index) {
                removeFlag = true;
            }
            
            //add 2013/1/11 wgf 收款对象修改
            
            function payee_name_lov_commit(lov, r1, r2) {
                var payee_category = r1.get('exp_report_payee_category');
                if (payee_category == 'EMPLOYEE') {
                    r1.set('exp_report_payee_id', r2.get('employee_id'));
                    r1.set("bank_code", r2.get("bank_code"));
                    r1.set("bank_name", r2.get("bank_name"));
                    r1.set("bank_location_code", r2.get("bank_location_code"));
                    r1.set("bank_location", r2.get("bank_location"));
                    r1.set("province_code", r2.get("province_code"));
                    r1.set("province_name", r2.get("province_name"));
                    r1.set("city_code", r2.get("city_code"));
                    r1.set("city_name", r2.get("city_name"));
                    r1.set("account_number", r2.get("account_number"));
                    r1.set("account_name", r2.get("account_name"));
                    r1.set("notes", r2.get("notes"));
                } else if (payee_category == 'VENDER') {
                    r1.set('exp_report_payee_id', r2.get('vender_id'));
                    r1.set("bank_code", r2.get("bank_code"));
                    r1.set("bank_name", r2.get("bank_name"));
                    r1.set("bank_location_code", r2.get("bank_location_code"));
                    r1.set("bank_location", r2.get("bank_location"));
                    r1.set("province_code", r2.get("province_code"));
                    r1.set("province_name", r2.get("province_name"));
                    r1.set("city_code", r2.get("city_code"));
                    r1.set("city_name", r2.get("city_name"));
                    r1.set("account_number", r2.get("account_number"));
                    r1.set("account_name", r2.get("account_name"));
                    r1.set("notes", r2.get("notes"));
                } else {
                    r1.set('exp_report_payee_id', r2.get('customer_id'));
                    r1.set("bank_code", r2.get("bank_code"));
                    r1.set("bank_name", r2.get("bank_name"));
                    r1.set("bank_location_code", r2.get("bank_location_code"));
                    r1.set("bank_location", r2.get("bank_location"));
                    r1.set("province_code", r2.get("province_code"));
                    r1.set("province_name", r2.get("province_name"));
                    r1.set("city_code", r2.get("city_code"));
                    r1.set("city_name", r2.get("city_name"));
                    r1.set("account_number", r2.get("account_number"));
                    r1.set("account_name", r2.get("account_name"));
                    r1.set("notes", r2.get("notes"));
                }
            }
            
            // modify 20130401 计划付款行添加 银行账号修改功能
            
            function bankAssign(value, record, name) {
                var pmtLineIndex = $('pmtplan_schedules_ds').indexOf(record);
                return '<a href="javascript:bankAssignInfo(' + pmtLineIndex + ')">${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}</a>';
            }
            
            function bankAssignInfo(pmtLineIndex) {
                new Aurora.Window({
                    id: 'exp_bank_assign_window',
                    url: $('exp_bank_assign_link').getUrl() + '?line_index=' + pmtLineIndex + '&ds_name=pmtplan_schedules_ds',
                    title: '${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}',
                    fullScreen: true
                });
            }
            
            function getRecordsFromBankCode(record) {
                var pmt_line_index = record.get('line_index');
                var pmtplan_schedules_record = $('pmtplan_schedules_ds').getAt(pmt_line_index);
                pmtplan_schedules_record.set('account_number', record.get('account_number'));
                pmtplan_schedules_record.set('account_name', record.get('account_name'));
                pmtplan_schedules_record.set('bank_code', record.get('bank_code'));
                pmtplan_schedules_record.set('bank_name', record.get('bank_name'));
                pmtplan_schedules_record.set('bank_location_code', record.get('bank_location_code'));
                pmtplan_schedules_record.set('bank_location_name', record.get('bank_location_name'));
                pmtplan_schedules_record.set('province_code', record.get('province_code'));
                pmtplan_schedules_record.set('province_name', record.get('province_name'));
                pmtplan_schedules_record.set('city_code', record.get('city_code'));
                pmtplan_schedules_record.set('city_name', record.get('city_name'));
            }
            //add by Qu yuanyuan 2015-11-25 默认集中支付
            
            function loadPmtFunc() {
            
                var pmt_lines_records = $('pmtplan_schedules_ds').getAll();
                var gather_flag_records = $('gather_flag_ds').getAll();
                for (var i = 0;i < gather_flag_records.length;i++) {
                    if (gather_flag_records[i].get('code_value') == '1') {
                        for (var j = 0;j < pmt_lines_records.length;j++) {
                            if (!pmt_lines_records[j].get('gather_flag')) {
                                pmt_lines_records[j].set('gather_flag', gather_flag_records[i].get('code_value'));
                                pmt_lines_records[j].set('gather_flag_desc', gather_flag_records[i].get('code_value_name'));
                            }
                        }
                        break;
                    }
                }
            }
            //end by Qu yuanyuan
            
            function headerLoadFunction(ds) {}
            
            // added by HM @2016-04-13 营改增-税率显示
            
            function expYGZtaxRateRenderer(value, record, name) {
                if (Aurora.isEmpty(value)) {
                    return value;
                } else if (isNaN(value)) {
                    return '';
                } else {
                    return Aurora.formatNumber(value * 100, 0) + '%';
                }
            }
            
            // added by HM @2016-05-11 税校验
            
            function expYGZtaxValidator(record, name, value) {
                if (name == 'tax_amount' || name == 'sale_amount' || name == 'report_amount') {
                    if (record.get('usage_type') == 'YT999') {
                        if (value > 0) return '用途类型是红票时，该行金额必须是负数！';
                    } else {
                        if (value < 0) return '金额必须是正数！';
                    }
                    if (name == 'tax_amount' || name == 'sale_amount') {
                        if (record.get('special_invoice') == 'Y') {
                            if (value == 0) return '税额不能为0！';
                            if (name == 'tax_amount') var tax_amount = value;
                            else var tax_amount = record.get('tax_amount');
                            if (name == 'sale_amount') var sale_amount = value;
                            else var sale_amount = record.get('sale_amount');
                            if ((tax_amount / sale_amount) >= 1) {
                                return '当前税额超过不含税金额，请重新确认税额！';
                            }
                        }
                    }
                } else if (name == 'tax_rate') {
                    if (value > 1) {
                        return '当前税额超过不含税金额，请重新确认税额！';
                    } else if (value < 0) {
                        return '增值税专用发票税额不可为0！';
                    }
                }
                return true;
            }
            
            // added by HM @2016-05-07 营改增-发票长度编码校验
            
            function expYGZInvoiceLengthValidateFun(record, name, value) {
                var invoice_number_length_limit = record.get('invoice_number_digit');
                var invoice_code_length_limit = record.get('invoice_code_digit');
                if (record.get('special_invoice') == 'Y') {
                    if (name == 'invoice_number' && invoice_number_length_limit != "") {
                        if (value.length > invoice_number_length_limit) {
                            return '发票编号长度不得超过' + invoice_number_length_limit + '位';
                        }
                    } else if (name == 'invoice_code' && invoice_code_length_limit != "") {
                        if (value.length > invoice_code_length_limit) {
                            return '发票代码长度不得超过' + invoice_code_length_limit + '位';
                        }
                    }
                }
                return true;
            }
            
            // added by HM @2016-07-29 验证电子发票是否被使用过
            
            function expYGZCheckEInvoiceUsedFun() {
                var records;
                var exp_report_numbers = '';
                var invoice_number;
                // added by HM @2016-07-29 验证电子发票是否被使用过
                Aurora.request({
                    url: $('exp_ygz_check_einvoice_used_link').getUrl(),
                    para: {
                        exp_report_header_id: exp_report_header_id_bak
                    },
                    success: function(arg) {
                        if (Aurora.isEmpty(arg.result.record)) {
                            bgtCheck();
                        } else {
                            if (isNaN(arg.result.record.length)) {
                                invoice_number = arg.result.record.invoice_number;
                                exp_report_numbers = arg.result.record.exp_report_number + ' ';
                            } else {
                                records = arg.result.record;
                                invoice_number = records[0].invoice_number;
                                for (var i = 0;i < records.length;i++) {
                                    if (records[i].einvoice_conut != 0) {
                                        exp_report_numbers += records[i].exp_report_number + ' ';
                                    }
                                }
                            }
                            Aurora.showConfirm('${l:PROMPT}', '发票编号为 ' + invoice_number + ' 发票已经在 ' + exp_report_numbers + '中报销，请确认是否继续使用该张发票报销？', function() {
                                bgtCheck();
                            }, '', 300, 150);
                        }
                    },
                    failure: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    error: function() {
                        //add by zhaofan 增加锁屏，防止重复点击    Start
                        if ($('new_report_detail_window')) {
                            Aurora.Masker.unmask($('new_report_detail_window').wrap);
                        } else {
                            Aurora.Masker.unmask(Ext.getBody());
                        };
                        //add by zhaofan 增加锁屏，防止重复点击    End
                    },
                    scope: this
                });
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="vat_invoice_type_ds">
                <a:datas dataSource="/model/invoice_type"/>
            </a:dataSet>
            <a:dataSet id="vat_usage_type_ds">
                <a:datas dataSource="/model/usage_type"/>
            </a:dataSet>
            <a:dataSet id="vat_invoice_status_ds" lookupCode="VMS_INVOICE_STATUS"/>
            <a:dataSet id="vat_input_tax_structure_detail_ds" fetchAll="true" loadData="true" model="exp.EXP1350.exp_ygz_input_tax_struc_dtl_lov"/>
            <a:dataSet id="gather_flag_ds" lookupCode="GATHER_FLAG"/>
            <a:dataSet id="exp_exchange_rate_quta_ds" lookupCode="EXCHANGE_RATE_QUOTATION"/>
            <a:dataSet id="payment_mehtod_ds">
                <a:datas datasource="/model/payment_method_list"/>
            </a:dataSet>
            <a:dataSet id="exp_exchange_rate_ds" fetchAll="true" model="gld.gld_exchange_rates">
                <a:events>
                    <a:event name="load" handler="afterrateds"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="exp_report_period_ds" fetchAll="true" model="gld.gld_periods">
                <a:events>
                    <a:event name="load" handler="afterperiodds"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="positionlist_ds">
                <a:datas datasource="/model/position_list"/>
            </a:dataSet>
            <a:dataSet id="exp_report_head_submit" autoCreate="true" submitUrl="${/request/@context_path}/modules/expm/public/exp_report_bgt_check.svc">
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                    <a:field name="flag"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="processres"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="exp_report_head_final_submit" autoCreate="true" submitUrl="${/request/@context_path}/modules/expm/public/exp_report_submit.svc">
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="dispatchtomaintain"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="exp_expense_type_ds" fetchAll="true" model="expm.exp_expense_type_flag_filter" queryUrl="${/request/@context_path}/autocrud/expm.exp_expense_type_flag_filter/query?expense_report_type_id=${/parameter/@expense_report_type_id}&amp;exp_report_header_id=${/parameter/@exp_report_header_id}&amp;report_flag=Y"/>
            <a:dataSet id="exp_expense_item_ds" fetchAll="true" model="expm.exp_expense_item"/>
            <a:dataSet id="company_ds">
                <a:datas datasource="/model/fnd_company_bm"/>
            </a:dataSet>
            <a:dataSet id="pay_category_ds" lookupcode="PAYMENT_OBJECT"/>
            <a:dataSet id="quotation" lookupcode="EXCHANGE_RATE_QUOTATION"/>
            <a:dataSet id="tax_type_ds" loadData="true" model="fnd.FND2410.fnd_tax_type_code_lov"/>
            <a:dataSet id="exp_report_head" model="expm.exp_report_head_show" submitUrl="${/request/@context_path}/modules/expm/public/exp_report_save_collection.svc">
                <a:datas dataSource="/model/head_data"/>
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                    <a:field name="exp_report_type_name" prompt="EXP_REPORT_HEADERS.EXP_REPORT_TYPE_ID" readonly="true"/>
                    <a:field name="exp_report_type_id"/>
                    <a:field name="company_id"/>
                    <a:field name="company_name"/>
                    <a:field name="payment_flag"/>
                    <a:field name="responsibility_center_name"/>
                    <a:field name="responsibility_center_id"/>
                    <a:field name="unit_id"/>
                    <a:field name="unit_name"/>
                    <a:field name="employee_id"/>
                    <a:field name="employee_name"/>
                    <a:field name="position_id"/>
                    <a:field name="position_name"/>
                    <a:field name="sum_amount" prompt="CON_CONTRACT_HEADERS.SUM_AMOUNT" readOnly="true"/>
                    <a:field name="exp_report_number" prompt="EXP_REPORT_HEADERS.REPORT_NUMBER" readonly="true"/>
                    <a:field name="exp_report_data" prompt="EXP_REPORT_HEADERS.REPORT_DATE" required="true"/>
                    <a:field name="exp_report_period" prompt="EXP_REPORT_HEADERS.PERIOD_NAME"/>
                    <a:field name="exp_report_employee_name" prompt="EXP_REPORT_HEADERS.EMPLOYEE_NAME" readonly="true"/>
                    <a:field name="exp_report_payment_method" displayfield="description" options="payment_mehtod_ds" prompt="EXP_REPORT_HEADERS.PAYMENT_METHOD" required="true" returnfield="payment_method_id" valuefield="payment_method_id"/>
                    <a:field name="exp_report_position" displayfield="position_name" options="positionlist_ds" prompt="EXP_REPORT_HEADERS.POSITION" required="true" returnfield="position_id" valuefield="position_id"/>
                    <a:field name="exp_report_payee_category_name" displayField="code_value_name" options="pay_category_ds" prompt="EXP_REPORT_HEADERS.PAYEE_CATEGORY" returnField="exp_report_payee_category" valueField="code_value"/>
                    <a:field name="exp_report_payee_category"/>
                    <a:field name="exp_report_payee_name" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="460" lovWidth="520" lovservice="expm.exp_employee_req_lov" prompt="EXP_REPORT_HEADERS.PAYEE_ID" readOnly="false">
                        <a:mapping>
                            <a:map from="code_name" to="exp_report_payee_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="bank_code"/>
                    <a:field name="bank_name"/>
                    <a:field name="bank_location_code"/>
                    <a:field name="bank_location"/>
                    <a:field name="province_code"/>
                    <a:field name="province_name"/>
                    <a:field name="city_code"/>
                    <a:field name="city_name"/>
                    <a:field name="account_number"/>
                    <a:field name="account_name"/>
                    <a:field name="notes"/>
                    <a:field name="exp_report_payee_id"/>
                    <a:field name="exp_report_currency_name" prompt="EXP_REPORT_HEADERS.CURRENCY_CODE" readonly="true"/>
                    <a:field name="exp_report_currency_code"/>
                    <a:field name="exp_report_rate" prompt="EXP_REPORT_HEADERS.EXCHANGE_RATE" required="true"/>
                    <a:field name="exp_report_rate_type_name" autoComplete="true" autoCompleteField="type_name_code" fetchRemote="false" lovGridHeight="320" lovHeight="460" lovWidth="550" lovservice="gld.gld_exchangerate_type_lov" prompt="EXP_REPORT_HEADERS.EXCHANGE_RATE_TYPE" title="EXP_PRE_POST_RO.FEE_TYPE">
                        <a:mapping>
                            <a:map from="type_name" to="exp_report_rate_type_name"/>
                            <a:map from="type_code" to="exp_report_rate_type"/>
                            <a:map from="rate_method_code" to="rate_method_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="rate_method_code"/>
                    <a:field name="functional_currency_code"/>
                    <a:field name="exp_report_rate_type"/>
                    <a:field name="exp_report_rate_quotation_name" displayField="code_value_name" options="exp_exchange_rate_quta_ds" prompt="EXP_REPORT_HEADERS.EXCHANGE_RATE_QUOTATION" returnField="exp_report_rate_quotation" valueField="code_value"/>
                    <a:field name="exp_report_rate_quotation"/>
                    <a:field name="exp_report_description" prompt="EXP_REPORT_HEADERS.DESCRIPTION" required="true"/>
                    <a:field name="exp_report_attach_id" prompt="EXP_REPORT_HEADERS.ATTACH_ID" required="true"/>
                    <a:field name="exp_report_status" prompt="EXP_REPORT_HEADERS.REPORT_STATUS" readOnly="true"/>
                    <a:field name="exp_report_create_by" prompt="EXP_REPORT_HEADERS.CREATE_BY" readOnly="true"/>
                    <a:field name="exp_report_audit_date" prompt="EXP_REPORT_HEADERS.AUDIT_DATE" readOnly="true"/>
                    <a:field name="payment_method_id"/>
                    <a:field name="period_name" prompt="EXP_REQUISITION_HEADERS.PERIOD_NAME" readOnly="true"/>
                    <a:field name="schedule_due_date"/>
                    <a:field name="budget_control_enabled"/>
                    <a:field name="vat_special_invoice_include" checkedValue="Y" defaultValue="Y" prompt="含专票或电子发票" uncheckedValue="N"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="reloadres"/>
                    <a:event name="update" handler="header_ds_update"/>
                    <a:event name="load" handler="headerLoadFunction"/>
                    <a:event name="submitfailed" handler="resetobjds"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="exp_report_head_dimension" autoCreate="true">
                <a:fields>
                    <a:placeHolder id="dynamicHeadFields"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="dynamicUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="exp_report_head_object" autoCreate="true">
                <a:fields>
                    <a:placeHolder id="dynamicHeadObjects"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="dynamicUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="position_ds" fetchAll="true" model="exp.exp_org_position"/>
            <a:dataSet id="exp_report_object_lines" bindName="objlines" bindTarget="exp_report_head"/>
            <a:dataSet id="exp_report_lines" autoQuery="true" bindName="lines" bindTarget="exp_report_head" fetchAll="true" model="expm.exp_report_lines" pageSize="1000" queryUrl="${/request/@context_path}/modules/expm/public/exp_report_line_query.svc?exp_report_header_id=${/parameter/@exp_report_header_id}&amp;_ban_remind=Y" selectable="true">
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                    <a:field name="exp_report_line_id"/>
                    <a:field name="company_id"/>
                    <a:field name="company_name" autoComplete="true" autoCompleteField="company_code_name" lovGridHeight="320" lovHeight="460" lovWidth="500" lovservice="exp.exp_company_tree" required="true" title="EXP_REPORT_LINES.COMPANY_ID">
                        <a:mapping>
                            <a:map from="company_short_name" to="company_name"/>
                            <a:map from="company_id" to="company_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="unit_id"/>
                    <a:field name="unit_name" autoComplete="true" autoCompleteField="unit_code_name" lovGridHeight="320" lovHeight="460" lovWidth="500" lovservice="exp.exp_org_unit" required="true" title="EXP_REPORT_LINES.UNIT_ID">
                        <a:mapping>
                            <a:map from="org_unit_description" to="unit_name"/>
                            <a:map from="unit_id" to="unit_id"/>
                            <a:map from="responsibility_center_name" to="responsibility_center_name"/>
                            <a:map from="responsibility_center_id" to="responsibility_center_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="responsibility_center_id"/>
                    <a:field name="responsibility_center_name" autoComplete="true" autoCompleteField="resp_center_code_name" lovGridHeight="320" lovHeight="460" lovWidth="500" lovservice="fnd.fnd_responsibility_centers_lov" required="true" title="EXP_REPORT_LINES.RESPONSIBILITY_CENTER_ID">
                        <a:mapping>
                            <a:map from="responsibility_center_name" to="responsibility_center_name"/>
                            <a:map from="responsibility_center_id" to="responsibility_center_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="position_id"/>
                    <a:field name="position_name" displayfield="position_name" options="position_ds" required="true" returnfield="position_id" valuefield="position_id"/>
                    <a:field name="employee_id"/>
                    <a:field name="employee_name" autoComplete="true" autoCompleteField="emp_code_name" lovGridHeight="320" lovHeight="460" lovWidth="500" lovservice="expm.exp_report_employeelist_cross_com" required="true" title="EXP_REPORT_LINES.EMPLOYEE_ID">
                        <a:mapping>
                            <a:map from="name" to="employee_name"/>
                            <a:map from="employee_id" to="employee_id"/>
                            <a:map from="position_primary" to="position_primary"/>
                            <!-- <a:map from="position_id" to="position_id"/> -->
                        </a:mapping>
                    </a:field>
                    <a:field name="position_primary"/>
                    <a:field name="currency_code"/>
                    <a:field name="exchange_rate_type"/>
                    <a:field name="exchange_rate_type_name"/>
                    <a:field name="exchange_rate_quotation"/>
                    <a:field name="exchange_rate_quotation_name"/>
                    <a:field name="exchange_rate"/>
                    <a:field name="line_number"/>
                    <a:field name="description" required="true"/>
                    <a:field name="city"/>
                    <a:field name="place" autoComplete="true" autoCompleteField="place_code_name" lovGridHeight="320" lovHeight="450" lovLabelWidth="120" lovService="expm.exp_expense_policy_place_lov" lovWidth="550" prompt="EXP_REQUISITION_LINES.PLACE_ID" title="EXP_REQUISITION_LINES.PLACE_ID">
                        <a:mapping>
                            <a:map from="place_desc" to="place"/>
                            <a:map from="place_id" to="place_id"/>
                            <a:map from="place_type_id" to="place_type_id"/>
                            <a:map from="place_type_desc" to="place_type"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="place_id"/>
                    <a:field name="place_type" autoComplete="true" autoCompleteField="place_type_code_name" lovGridHeight="300" lovHeight="450" lovLabelWidth="120" lovService="expm.exp_expense_policy_place_type_lov" lovWidth="550" prompt="EXP_REQUISITION_LINES.PLACE_TYPE_ID" title="EXP_REQUISITION_LINES.PLACE_TYPE_ID">
                        <a:mapping>
                            <a:map from="place_type_id" to="place_type_id"/>
                            <a:map from="description" to="place_type"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="place_type_id"/>
                    <a:field name="budget_item_id"/>
                    <a:field name="date_from" validator="dateValidate"/>
                    <a:field name="date_to" validator="dateValidate"/>
                    <a:field name="expense_type_id"/>
                    <a:field name="expense_type_name" displayfield="expense_type_description" options="exp_expense_type_ds" required="true" returnfield="expense_type_id" valuefield="expense_type_id"/>
                    <a:field name="exp_req_item_id"/>
                    <a:field name="exp_req_item_name" displayfield="expense_item_description" options="exp_expense_item_ds" required="true" returnfield="exp_req_item_id" tipfield="expense_item_desc" valuefield="expense_item_id"/>
                    <a:field name="price" required="false" validator="priceValidator"/>
                    <a:field name="primary_quantity" required="true"/>
                    <a:field name="report_amount" prompt="含税金额" required="true" validator="expYGZtaxValidator"/>
                    <a:field name="report_functional_amount"/>
                    <a:field name="period_name" autoComplete="true" autoCompleteField="period_name" lovGridHeight="300" lovHeight="460" lovWidth="500" prompt="EXP_REQUISITION_LINES.PERIOD_NAME" required="true" title="EXP_REQUISITION_LINES.PERIOD_NAME">
                        <a:mapping>
                            <a:map from="period_name" to="period_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_flag" checkedvalue="Y" uncheckedvalue="N"/>
                    <a:field name="payee_id"/>
                    <a:field name="contract_header_code" autoComplete="true" autoCompleteField="contract_number" lovGridHeight="300" lovHeight="460" lovService="csh.csh_contract_lov" lovWidth="600" prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" title="CON_CONTRACT_HEADERS.CONTRACT_NUMBER">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_header_code"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_header_id" prompt="PAYMENT_SCHEDULE_LINE_CODE"/>
                    <a:field name="payment_schedule_line_code" autoComplete="true" autoCompleteField="payment_schedule_line_number" lovGridHeight="250" lovHeight="460" lovService="csh.csh_payment_schedule_lov" lovWidth="600" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="payment_schedule_line_code"/>
                            <a:map from="payment_schedule_line_id" to="payment_schedule_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_schedule_line_id"/>
                    <a:field name="tax_type_desc" displayField="description" options="tax_type_ds" prompt="FND_TAX_TYPE_CODES.TAX_TYPE_RATE" returnField="tax_type_id" valueField="tax_type_id"/>
                    <a:field name="tax_type_id"/>
                    <a:placeHolder id="dynamicLineFields"/>
                    <a:placeHolder id="dynamicLineFieldsObj"/>
                    <a:field name="invoice_type" prompt="发票类型"/>
                    <a:field name="invoice_number" prompt="发票编号" validator="expYGZInvoiceLengthValidateFun"/>
                    <a:field name="invoice_status"/>
                    <a:field name="invoice_status_desc" displayField="code_value_name" options="vat_invoice_status_ds" prompt="发票状态" readOnly="true" required="true" returnField="invoice_status" valueField="code_value"/>
                    <a:field name="tax_amount" prompt="税额" validator="expYGZtaxValidator"/>
                    <a:field name="sale_amount" prompt="不含税金额" readonly="true" validator="expYGZtaxValidator"/>
                    <a:field name="tax_rate" prompt="税率" readonly="true" validator="expYGZtaxValidator"/>
                    <a:field name="usage_type" prompt="用途类型"/>
                    <a:field name="usage_type_desc" displayField="type_name" options="vat_usage_type_ds" prompt="用途类型" returnField="usage_type" valueField="type_code"/>
                    <a:field name="invoice_type_desc" displayField="type_name" options="vat_invoice_type_ds" prompt="发票类型" required="true" returnField="invoice_type" valueField="type_code">
                        <a:mapping>
                            <a:map from="special_invoice" to="special_invoice"/>
                            <a:map from="default_invoice_status" to="invoice_status"/>
                            <a:map from="default_invoice_status_desc" to="invoice_status_desc"/>
                            <a:map from="invoice_number_digit" to="invoice_number_digit"/>
                            <a:map from="invoice_code_digit" to="invoice_code_digit"/>
                            <a:map from="einvoice_flag" to="einvoice_flag"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="invoice_code" prompt="发票代码" validator="expYGZInvoiceLengthValidateFun"/>
                    <a:field name="invoice_date" prompt="发票日期"/>
                    <a:field name="input_tax_structure_detail"/>
                    <a:field name="input_tax_struc_detail_desc" displayField="type_name" options="vat_input_tax_structure_detail_ds" prompt="进项结构明细" returnField="input_tax_structure_detail" valueField="type_code"/>
                    <a:field name="special_invoice" prompt="视同专票"/>
                    <a:field name="invoice_number_digit" prompt="发票编号位数"/>
                    <a:field name="invoice_code_digit" prompt="发票代码位数"/>
                    <a:field name="einvoice_flag" prompt="是否电子发票"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="lineupdate"/>
                    <a:event name="beforecreate" handler="canaddaline"/>
                    <a:event name="load" handler="lineLoadFunction"/>
                    <a:event name="remove" handler="removeLine"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pmtplan_schedules_ds" autoQuery="true" bindName="pmtplan" bindTarget="exp_report_head" model="expm.exp_report_pmtplan_schedules_query" queryUrl="${/request/@context_path}/autocrud/expm.exp_report_pmtplan_schedules_query/query?exp_report_header_id=${/parameter/@exp_report_header_id}" selectable="true" submitUrl="${/request/@context_path}/autocrud/expm.update_exp_rep_pmt_schedules/batch_update">
                <a:fields>
                    <a:field name="exp_report_header_id"/>
                    <a:field name="payment_schedule_line_id"/>
                    <a:field name="line_num"/>
                    <a:field name="verification_loan"/>
                    <a:field name="company_name" prompt="EXP_REPORT_PMT_SCHEDULES.COMPANY_ID"/>
                    <a:field name="description" prompt="EXP_REPORT_PMT_SCHEDULES.DESCRIPTION"/>
                    <a:field name="currency_name" prompt="EXP_REPORT_PMT_SCHEDULES.CURRENCY"/>
                    <a:field name="currency"/>
                    <a:field name="due_amount" prompt="EXP_REPORT_PMT_SCHEDULES.DUE_AMOUNT" required="true"/>
                    <a:field name="write_off_amount" prompt="CSH_WRITE_OFF.CSH_WRITE_OFF_AMOUNT"/>
                    <a:field name="schedule_start_date"/>
                    <a:field name="schedule_due_date" required="true"/>
                    <a:field name="company_short_name" prompt="EXP_REPORT_PMT_SCHEDULES.COMPANY_ID"/>
                    <a:field name="contract_number" autoComplete="true" autoCompleteField="contract_number" lovGridHeight="300" lovHeight="460" lovService="csh.csh_contract_report_pmtplan_lov" lovWidth="500" prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" title="CON_CONTRACT_HEADERS.CONTRACT_NUMBER">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_number"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="collection_account_desc" autoComplete="true" autoCompleteField="bank_account_name" lovGridHeight="300" lovHeight="460" lovLabelWidth="200" lovService="expm.exp_report_collection_account_lov" lovWidth="500" prompt="EXP_REPORT_PMT_SCHEDULES.COLLECTION_ACCOUNT" required="true" title="EXP_REPORT_PMT_SCHEDULES.COLLECTION_ACCOUNT">
                        <a:mapping>
                            <a:map from="bank_account_desc" to="collection_account_desc"/>
                            <a:map from="bank_account_id" to="collection_account_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_header_id"/>
                    <!-- <a:field name="line_number" lovGridHeight="300" lovHeight="460" lovService="csh.csh_payment_schedule_lov" lovWidth="500" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER"> -->
                    <a:field name="line_number" autoComplete="true" autoCompleteField="payment_schedule_line_number" lovGridHeight="300" lovHeight="460" lovService="csh.csh_payment_schedule_pmtplan_lov" lovWidth="500" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="line_number"/>
                            <a:map from="payment_schedule_line_id" to="payment_sch_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_sch_line_id"/>
                    <a:field name="payee_type" displayField="code_value_name" options="pay_category_ds" required="true" returnField="payee_type_value" valueField="code_value"/>
                    <a:field name="payee_type_value"/>
                    <a:field name="payee_id"/>
                    <a:field name="payee_partner_name" autoComplete="true" autoCompleteField="code_name" lovGridHeight="320" lovHeight="460" lovWidth="500" title="EXP_REPORT_LINES.PAYEE_ID">
                        <a:mapping>
                            <a:map from="id" to="payee_id"/>
                            <a:map from="description" to="payee_partner_name"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location_name" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_method" displayField="description" options="payment_mehtod_ds" prompt="ACP.DESCRIPTION_METHOD" required="true">
                        <a:mapping>
                            <a:map from="description" to="payment_method"/>
                            <a:map from="payment_method_id" to="payment_type_id"/>
                            <a:map from="payment_method_code" to="payment_method_code"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_method_code"/>
                    <a:field name="payment_type_id"/>
                    <a:field name="account_number" autoComplete="true" autoCompleteField="account_number" fetchRemote="false" lovGridHeight="250" lovHeight="400" lovWidth="500" title="CSH_BANK_BALANCES.BANK_ACCOUNT_ID">
                        <a:mapping>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location_name" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="bank_code"/>
                    <a:field name="bank_name"/>
                    <a:field name="bank_location_code"/>
                    <a:field name="bank_location_name"/>
                    <a:field name="province_code"/>
                    <a:field name="province_name"/>
                    <a:field name="city_code"/>
                    <a:field name="city_name"/>
                    <a:field name="usedes_name" autoComplete="true" autoCompleteField="code_name" lovGridHeight="300" lovHeight="460" lovService="expm.csh_payment_usedes_vl?expense_report_type_id=${/parameter/@expense_report_type_id}&amp;exp_report_header_id=${/parameter/@exp_report_header_id}" lovWidth="500" required="true" title="CSH_PAYMENT_USEDS.USEDS_CODE">
                        <a:mapping>
                            <a:map from="usedes_code" to="usedes"/>
                            <a:map from="description" to="usedes_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="usedes"/>
                    <a:field name="bank_id"/>
                    <a:field name="account_name" prompt="EXP_EMPLOYEE_ACCOUNTS.BANK_ACCOUNT_NAME"/>
                    <a:field name="frozen_flag" checkedValue="Y" defaultValue="N" prompt="SYS_USER.FROZEN_FLAG" uncheckedValue="N"/>
                    <a:field name="gather_flag_desc" displayField="code_value_name" options="gather_flag_ds" required="true" returnField="gather_flag" valueField="code_value"/>
                    <a:field name="gather_flag" defaultValue="1"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="pmtlineupdate"/>
                    <a:event name="submitsuccess" handler="submit_success"/>
                    <a:event name="beforecreate" handler="pmtcanaddaline"/>
                    <a:event name="add" handler="setpmtinitdata"/>
                    <a:event name="remove" handler="remove_record"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="head_object">
                <a:datas dataSource="/model/head_object"/>
            </a:dataSet>
            <a:dataSet id="head_dimension">
                <a:datas dataSource="/model/head_dimension"/>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar id="exp_rep_mt_standard_top_bar">
                <a:screenTitle/>
                <a:toolbarButton click="savereport" text="HAP_SAVE" width="80"/>
                <a:toolbarButton id="newreportBtn" click="newreport" text="PROMPT.CREATE" width="80"/>
                <!-- <a:toolbarButton click="createforereq" text="EXP_REPORT_CREATE.FROMREQ" width="80"/> -->
                <a:toolbarButton id="submitBtn" click="submitreport" text="PROMPT.SUBMIT" width="80"/>
                <a:toolbarButton id="policy" click="policyFunction" text="PROMPT.VIEW_POLICIES" width="80"/>
                <a:toolbarButton id="seeLog" click="seeLog" text="PROMPT.OVER_BUDGET_TYPE" width="80"/>
                <a:toolbarButton id="deletereportBtn" click="deletereport" text="HAP_DELETE_ALL_REPORT" width="80"/>
                <a:toolbarButton id="uploadFileBtn" click="uploadFile" text="ATM.UPLOAD_ATTACHMENT" width="80"/>
                <a:toolbarButton id="seeHisBtn" click="seeHistory" text="PROMPT.HISTORY" width="80"/>
            </a:screenTopToolbar>
            <a:form id="exp_rep_mt_standard_head_form" title="EXP_REPORT_CREATE.TITEL">
                <a:box id="exp_rep_mt_standard_normal_box" column="4" style="width:100%">
                    <a:textField name="exp_report_number" bindtarget="exp_report_head"/>
                    <a:textField name="exp_report_type_name" bindtarget="exp_report_head"/>
                    <a:datePicker name="exp_report_data" bindtarget="exp_report_head"/>
                    <a:numberField name="sum_amount" allowDecimals="true" allowFormat="true" bindTarget="exp_report_head"/>
                    <a:textField name="exp_report_employee_name" bindtarget="exp_report_head"/>
                    <a:comboBox name="exp_report_position" bindtarget="exp_report_head"/>
                    <a:textField name="exp_report_currency_name" bindtarget="exp_report_head"/>
                    <a:numberField name="exp_report_attach_id" allowDecimals="false" bindtarget="exp_report_head"/>
                    <a:textField name="exp_report_create_by" bindtarget="exp_report_head"/>
                    <a:comboBox name="exp_report_payment_method" bindtarget="exp_report_head"/>
                    <!-- <a:comboBox name="exp_report_payee_category_name" bindtarget="exp_report_head"/> -->
                    <!-- <a:lov name="exp_report_payee_name" bindtarget="exp_report_head">
                        <a:events>
                            <a:event name="commit" handler="payee_name_lov_commit"/>
                        </a:events>
                    </a:lov> -->
                    <!-- <a:lov name="exp_report_rate_type_name" bindtarget="exp_report_head"/> -->
                    <!-- <a:comboBox name="exp_report_rate_quotation_name" bindtarget="exp_report_head"/> -->
                    <!-- <a:textField name="exp_report_rate" bindtarget="exp_report_head"/> -->
                    <!-- <a:numberField name="exp_report_rate" bindTarget="exp_report_head"/> -->
                    <a:textField name="exp_report_status" bindtarget="exp_report_head">
                        <a:events>
                            <a:event name="commit" handler="headcommitpayee"/>
                        </a:events>
                    </a:textField>
                    <a:placeHolder id="dynamicHeadColumn"/>
                    <a:placeHolder id="dynamicHeadObject"/>
                    <a:checkBox name="vat_special_invoice_include" bindtarget="exp_report_head"/>
                </a:box>
                <a:box id="exp_rep_mt_standard_ta_box" style="width:100%">
                    <a:textArea name="exp_report_description" id="exp_rep_mt_standard_desc_ta" bindtarget="exp_report_head"/>
                </a:box>
            </a:form>
            <a:tabPanel id="line_tab" marginHeight="325" marginWidth="32" minHeight="250">
                <a:tabs>
                    <a:tab prompt="HEC.EXP_REPORT_LINE_INFO" width="150">
                        <a:grid id="grid" bindTarget="exp_report_lines" marginHeight="377" minHeight="210" navBar="true" style="margin-top:5px;margin-left:5px;">
                            <a:toolBar>
                                <a:button id="addButton_update" click="createLineRecord" icon="${/request/@context_path}/images/add.gif" text="HAP_NEW"/>
                                <a:button type="delete"/>
                            </a:toolBar>
                            <a:columns>
                                <!-- <a:column name="line_number" align="center" editor="description_grid_tf" width="50"/>
                                <a:column name="description" align="left" editor="description_grid_tf" width="150"/>
                                <a:column name="company_name" align="center" editor="company_combox" width="120"/>
                                <a:column name="expense_type_name" align="center" editor="type_combox" width="120"/>
                                <a:column name="exp_req_item_name" align="center" editor="type_combox" width="120"/>
                                <a:column name="invoice_type_desc" align="center" editor="type_combox" width="100"/>
                                <a:column name="invoice_number" align="center" editor="description_grid_tf" width="100"/>
                                <a:column name="invoice_status_desc" align="center" editor="type_combox" width="100"/>
                                <a:column name="invoice_code" align="center" editor="description_grid_tf" width="100"/>
                                <a:column name="invoice_date" align="center" editor="datapicker_grid_dp" renderer="Aurora.formatDate" width="100"/>
                                <a:column name="price" align="right" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="primary_quantity" align="right" editor="quantitynumberfield" width="100"/>
                                <a:column name="report_amount" align="right" editor="numberfield" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="report_functional_amount" align="right" renderer="setfunctionamount" width="100"/>
                                <a:column name="tax_amount" align="right" editor="numberfield" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="tax_rate" align="right" renderer="expYGZtaxRateRenderer" width="50"/>
                                <a:column name="sale_amount" align="right" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="usage_type_desc" align="center" editor="type_combox" width="100"/>
                                <a:column name="input_tax_struc_detail_desc" align="center" editor="type_combox" width="100"/> -->
                                <!-- <a:column name="tax_type_desc" align="center" editor="type_combox" width="120"/> -->
                                <a:column name="period_name" align="center" editor="company_combox" width="80"/>
                                <a:column name="unit_name" align="center" editor="company_combox" width="120"/>
                                <a:column name="responsibility_center_name" align="center" editor="company_combox" width="120"/>
                                <a:column name="employee_name" align="center" editor="company_combox" width="120"/>
                                <a:column name="position_name" align="center" editor="type_combox" width="120"/>
                                <!-- <a:column name="contract_header_code" align="center" editor="company_combox" width="120"/> -->
                                <!-- <a:column name="payment_schedule_line_code" align="center" editor="company_combox" width="120"/> -->
                                <a:placeHolder id="dynamicLineColumn"/>
                                <a:placeHolder id="dynamicLineColumnObj"/>
                            </a:columns>
                            <a:editors>
                                <a:textField id="org_unit_level_code_grid_tf" typecase="upper"/>
                                <a:textField id="description_grid_tf"/>
                                <a:placeHolder id="numberfield_holder"/>
                                <a:numberField id="quantitynumberfield" allowDecimals="false" allowNegative="false"/>
                                <a:comboBox id="type_combox"/>
                                <a:lov id="company_combox" lovGridHeight="250" lovHeight="500" lovWidth="600"/>
                                <a:lov id="company_combox1" editable="false" lovGridHeight="250" lovHeight="450" lovWidth="500"/>
                                <a:checkBox id="paymentflag"/>
                                <a:lov id="payee_name" lovGridHeight="250" lovHeight="450" lovWidth="500"/>
                                <a:checkBox id="fnd_calendar_grid_dp"/>
                                <a:datePicker id="datapicker_grid_dp"/>
                            </a:editors>
                            <a:events>
                                <a:event name="cellclick" handler="gridcellclick"/>
                            </a:events>
                        </a:grid>
                    </a:tab>
                    <a:tab prompt="HEC.EXP_REPORT_PMT_LINE_INFO" width="150">
                        <a:grid id="pmt_grid" bindTarget="pmtplan_schedules_ds" marginHeight="377" minHeight="220" navBar="true" style="margin-top:5px;margin-left:5px;">
                            <a:toolBar>
                                <a:button type="add"/>
                                <a:button type="delete"/>
                            </a:toolBar>
                            <a:columns>
                                <a:column name="line_num" align="center" prompt="CSH_CASH_PLAN_LINES.LINE_NUMBER" renderer="line_number" width="50"/>
                                <!-- <a:column name="verification_loan" align="center" prompt="EXP_REPORT_PMTPLAN_SCHEDULES.VERIFICATION_LOAN" renderer="edit_function_grop" width="80"/> -->
                                <!-- <a:column name="write_off_amount" align="right" renderer="Aurora.formatMoney" width="100"/> -->
                                <a:column name="description" align="left" editor="pmt_tf" width="150"/>
                                <a:column name="due_amount" align="right" editor="pmt_nf" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="payee_type" align="left" editor="pmt_combox" prompt="EXP_REPORT_HEADERS.PAYEE_CATEGORY" width="120"/>
                                <a:column name="payee_partner_name" align="left" editor="pmt_lov" prompt="ACP_INVOICE_HEADERS.PAYEE_ID" width="120"/>
                                <!-- <a:column name="account_number" align="left" editor="pmt_lov" prompt="EXP_EMPLOYEE.BANK_ACCOUNT" width="120"/> -->
                                <!-- <a:column name="account_name" align="left" editor="pmt_tf" prompt="CSH_BANK_BALANCES.BANK_ACCOUNT_ID" width="120"/> -->
                                <a:column name="payment_method" align="left" editor="pmt_combox" prompt="EXP_REPORT_HEADERS.PAYMENT_METHOD" width="120"/>
                                <a:column name="usedes_name" align="left" editor="pmt_lov" prompt="CSH_PAYMENT_USEDS.USEDS_CODE" width="120"/>
                                <a:column name="gather_flag_desc" align="center" prompt="TRAVEL_PLAN_TYPE.CENTRALIZED_CLEARING_FLAG" width="120"/>
                                <!-- <a:column name="schedule_due_date" align="left" editor="schedule_due_date_dp" prompt="EXP_REPORT_PMT_SCHEDULES.SCHEDULE_DUE_DATE" renderer="Aurora.formatDate"/> -->
                                <a:column name="contract_number" align="left" editor="pmt_lov" width="120"/>
                                <a:column name="line_number" align="left" editor="pmt_lov" width="120"/>
                                <a:column name="collection_account_desc" align="left" editor="pmt_lov" prompt="EXP_REPORT_PMT_SCHEDULES.COLLECTION_ACCOUNT" width="200"/>
                                <!-- <a:column name="frozen_flag" align="center" editor="pmt_checkbox" width="50"/> -->
                                <!-- <a:column name="bank_id" align="center" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" renderer="bankAssign" width="80"/> -->
                            </a:columns>
                            <a:editors>
                                <a:comboBox id="pmt_combox"/>
                                <a:textField id="pmt_tf"/>
                                <a:lov id="pmt_lov" lovGridHeight="320" lovHeight="450" lovWidth="500"/>
                                <a:datePicker id="schedule_start_date_dp"/>
                                <a:datePicker id="schedule_due_date_dp"/>
                                <a:checkBox id="pmt_checkbox"/>
                                <a:numberField id="pmt_nf"/>
                            </a:editors>
                            <a:events>
                                <a:event name="cellclick" handler="pmtGridcellclick"/>
                            </a:events>
                        </a:grid>
                    </a:tab>
                </a:tabs>
            </a:tabPanel>
        </a:screenBody>
        <script><![CDATA[
            function init() {
            
                if ('${/model/head_data/record/@req_required_flag}' == 'Y') {
                    $('addButton_update').disable();
                }
            
                var t = $('exp_report_head').getAt(0);
                var r = t.getMeta();
                var f1 = r.getField('exp_report_rate_type_name');
                var f2 = r.getField('exp_report_rate_quotation_name');
                var f3 = r.getField('exp_report_rate');
            
                //初始化收款方查询lov
                var payee_category = t.get('exp_report_payee_category');
                var exp_report_payee_name = t.getField('exp_report_payee_name');
                if (payee_category == null || payee_category == undefined || payee_category == '') {
                    exp_report_payee_name.setReadOnly(true);
                    exp_report_payee_name.setLovService('');
                } else if (payee_category == 'EMPLOYEE') {
                    exp_report_payee_name.setReadOnly(false);
                    exp_report_payee_name.setLovService('expm.exp_employee_req_lov');
                    exp_report_payee_name.setTitle('${l:EXP_EMPLOYEES.QUERY}');
                } else if (payee_category == 'VENDER') {
                    exp_report_payee_name.setReadOnly(false);
                    exp_report_payee_name.setTitle('${l:VENDER_SEARCH}');
                    exp_report_payee_name.setLovService('expm.exp_vender_req_lov');
                } else {
                    exp_report_payee_name.setReadOnly(false);
                    exp_report_payee_name.setTitle('${l:EXP_EMPLOYEES.QUERY}');
                    exp_report_payee_name.setLovService('expm.exp_customer_req_lov');
                }
            
                if (t.get('exp_report_currency_code') != t.get('functional_currency_code')) {
                    var rateMethodCode = '${/model/exchange_type/record/@rate_method_code}';
                    var meta = t.getMeta();
                    if (rateMethodCode == 'DAILY' || rateMethodCode == 'FIXED') {
                        meta.getField('exp_report_rate_type_name').setRequired(true);
                        meta.getField('exp_report_rate_quotation_name').setReadOnly(true);
                        meta.getField('exp_report_rate').setReadOnly(true);
                    } else {
                        meta.getField('exp_report_rate_quotation_name').setReadOnly(false);
                        meta.getField('exp_report_rate_quotation_name').setRequired(true);
                        meta.getField('exp_report_rate_type_name').setReadOnly(false);
                        meta.getField('exp_report_rate_type_name').setRequired(true);
                    }
                    if (exp_report_header_id_bak == '') {
                        t.set('exp_report_rate_type_name', '${/model/exchange_type/record/@type_name}');
                        t.set('exp_report_rate_type', '${/model/exchange_type/record/@value_code}');
                        getExchangeRate({
                            fromCur: t.get('functional_currency_code'),
                            toCur: t.get('exp_report_currency_code'),
                            exchangeRateType: '${/model/exchange_type/record/@value_code}',
                            exchangeDate: t.get('exp_report_data'),
                            periodName: t.get('period_name')
                        });
                    }
            
                } else {
                    f1.setReadOnly(true);
                    f2.setReadOnly(true);
                    f3.setReadOnly(true);
                    f3.setRequired(true);
                    t.set('exp_report_rate', 1, false);
                }
                if (t.get('exp_report_payee_category') == 'EMPLOYEE') {
                    if (exp_report_header_id_bak == '') {
                        t.set('exp_report_payee_id', '${/parameter/@employee_id}');
                        t.set('exp_report_payee_name', t.get('exp_report_employee_name'));
                    }
                }
                if (exp_report_header_id_bak != '') {
                    r.getField('exp_report_data').setReadOnly(true);
                    r.getField('exp_report_payment_method').setReadOnly(true);
                    r.getField('exp_report_position').setReadOnly(true);
                    r.getField('exp_report_payee_category_name').setReadOnly(true);
                    r.getField('exp_report_payee_name').setReadOnly(true);
                    for (var fieldName in t.data) {
                        if (fieldName != "exp_report_description" && fieldName != "exp_report_attach_id" && fieldName != "vat_special_invoice_include") {
                            r.getField(fieldName).setReadOnly(true);
                        }
                    }
                    f1 = r.getField('exp_report_payee_name');
                    if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('expm.exp_employee_req_lov');
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('expm.exp_vender_req_lov');
                    } else {
                        f1.setLovService('expm.exp_customer_req_lov');
                    }
                } else {
                    f1 = r.getField('exp_report_payee_name');
                    f1.setReadOnly(false);
                    if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('expm.exp_employee_req_lov');
                        f1.setMapping([{
                            from: 'employee_id',
                            to: 'exp_report_payee_id'
                        }, {
                            from: 'name',
                            to: 'payee_name'
                        }, {
                            from: 'code_name',
                            to: 'exp_report_payee_name'
                        }]);
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('expm.exp_vender_req_lov');
                        f1.setMapping([{
                            from: 'vender_id',
                            to: 'exp_report_payee_id'
                        }, {
                            from: 'vender_name',
                            to: 'payee_name'
                        }, {
                            from: 'code_name',
                            to: 'exp_report_payee_name'
                        }]);
                    } else {
                        f1.setLovService('expm.exp_customer_req_lov');
                        f1.setMapping([{
                            from: 'customer_id',
                            to: 'exp_report_payee_id'
                        }, {
                            from: 'customer_name',
                            to: 'payee_name'
                        }, {
                            from: 'code_name',
                            to: 'exp_report_payee_name'
                        }]);
                    }
                    Ext.get('deletereportBtn').hide();
                    Ext.get('uploadFileBtn').hide();
                    Ext.get('seeHisBtn').hide();
                    Ext.get('seeLog').hide();
                    Ext.get('submitBtn').hide();
                    Ext.get('policy').hide();
                }
                var hidename = '';
                if ('${/model/policy_enabled/record/@policy_enabled}' == 'Y') {
                    hidename = 'city';
                } else {
                    hidename = 'place';
                }
                var columns = $('grid').columns;
                for (var i = 0,
                    l = columns.length;i < l;i++) {
                    var colname = columns[i].name;
                    if (colname == hidename) {
                        $('grid').hideColumn(colname);
                    }
                }
                lineNum = $('exp_report_head').getAt(0).get('line_number');
                lineNum = lineNum > 0 ? lineNum : 0;
                getpmtdate();
            }
            init();
            
            new function() {
                if ('${/model/check_log_count/record/@check_count}' > 0) {
                    $('seeLog').el.setStyle('color', 'red');
                } else {
                    $('seeLog').el.setStyle('color', '');
                }
            }();
        ]]></script>
        <script purpose="auto_resize"><![CDATA[
            function expRepMTStandardInitSize() {
                //描述宽度
                var labelWidth = 75;
                //标签宽度,5 = 3padding + 2border-spacing
                var tagWidth = 150 + 5;
                //页面宽度、高度
                var vw = $A.getViewportWidth();
                //留白宽度
                var marginWidth = 35 ;
                //自适应宽度
                var autoWidth = vw - marginWidth;
                //Form内部宽度，-2border
                var formInnerWidth = autoWidth - 2;
                //所占列数
                var colSpan = 4;
                //设置组件的自适应宽度
                Ext.get('exp_rep_mt_standard_head_form').setWidth(autoWidth + 4);
		$('line_tab').setWidth(autoWidth + 4);
                $('grid').setWidth(autoWidth + 4 - 17);
                $('pmt_grid').setWidth(autoWidth + 4 - 17);
                //设置TextArea的自适应宽度,别问我最后那个6是哪里来的，试出来的
                Ext.get('exp_rep_mt_standard_desc_ta').setWidth(formInnerWidth - (formInnerWidth / colSpan - labelWidth - tagWidth) - labelWidth - 6);
            }
            //Ext.fly(window).on('resize', expRepMTStandardInitSize);
            expRepMTStandardInitSize();
        ]]></script>
    </a:view>
    <a:view-config>
        <c:batch-config source="/model/head_dimension" targetId="dynamicHeadColumn">
            <a:lov name="${@dimension_code}" bindTarget="exp_report_head_dimension" lovGridHeight="320" lovHeight="450" lovWidth="500"/>
        </c:batch-config>
        <c:create-config targetId="dynamicHeadFields">
            <p:loop source="/model/head_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code}" autoComplete="true" autoCompleteField="code_name" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="450" lovService="expm.EXP2110.exp_rep_ref_dimension_dvc_lov?dimension_id=${@dimension_id}&amp;enabled_flag=Y" lovWidth="500" prompt="${@description}" required="true" title="${@description}">
                        <a:mapping>
                            <a:map from="dimension_value_code" to="dimension_value_code"/>
                            <a:map from="dimension_value_id" to="${@dimension_code1}"/>
                            <a:map from="description" to="${@dimension_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@dimension_code1}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicHeadObject">
            <p:loop source="/model/head_object">
                <p:switch test="@expense_object_method">
                    <p:case value="VALUE_LIST">
                        <c:process-config>
                            <a:lov name="${@expense_object_type_code}" bindTarget="exp_report_head_object" lovGridHeight="320" lovHeight="450" lovWidth="500"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="SQL_TEXT">
                        <c:process-config>
                            <a:lov name="${@expense_object_type_code}" bindTarget="exp_report_head_object" lovGridHeight="320" lovHeight="450" lovWidth="500"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="DESC_TEXT">
                        <c:process-config>
                            <a:textField name="${@expense_object_type_code}" bindTarget="exp_report_head_object"/>
                        </c:process-config>
                    </p:case>
                </p:switch>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicHeadObjects">
            <p:loop source="/model/head_object">
                <c:process-config>
                    <a:field name="${@expense_object_type_code}" defaultValue="${@default_object_desc}" lovGridHeight="320" lovHeight="450" lovUrl="${/request/@context_path}/modules/expm/public/exp_req_ref_obj_sql_query_lov.screen?expense_object_type_id=${@expense_object_type_id}" lovWidth="500" prompt="${@description}" required="${@required_flag}" title="${@description}">
                        <a:mapping>
                            <a:map from="id" to="${@forname}"/>
                            <a:map from="description" to="${@expense_object_type_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@forname}" defaultValue="${@default_object_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:batch-config source="/model/line_dimension" targetId="dynamicLineColumn">
            <a:column name="${@dimension_code}" align="center" editor="company_combox" prompt="${@description}"/>
        </c:batch-config>
        <c:create-config targetId="dynamicLineFields">
            <p:loop source="/model/line_dimension">
                <c:process-config>
                    <a:field name="${@dimension_code}" defaultValue="${@value_description}" lovGridHeight="320" lovHeight="450" lovService="expm.EXP2110.exp_rep_ref_dimension_dvc_lov?dimension_id=${@dimension_id}&amp;enabled_flag=Y" lovWidth="500" prompt="${@description}" required="true" title="${@description}">
                        <a:mapping>
                            <a:map from="dimension_value_code" to="dimension_value_code"/>
                            <a:map from="dimension_value_id" to="${@dimension_code1}"/>
                            <a:map from="description" to="${@dimension_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@dimension_code1}" defaultValue="${@default_dim_value_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <c:create-config targetId="dynamicLineColumnObj">
            <p:loop source="/model/line_object">
                <p:switch test="@expense_object_method">
                    <p:case value="VALUE_LIST">
                        <c:process-config>
                            <a:column name="${@expense_object_type_code}" align="center" editor="company_combox1"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="SQL_TEXT">
                        <c:process-config>
                            <a:column name="${@expense_object_type_code}" align="center" editor="company_combox1"/>
                        </c:process-config>
                    </p:case>
                    <p:case value="DESC_TEXT">
                        <c:process-config>
                            <a:column name="${@expense_object_type_code}" align="center" editor="description_grid_tf"/>
                        </c:process-config>
                    </p:case>
                </p:switch>
            </p:loop>
        </c:create-config>
        <!--<c:batch-config source="/model/line_object" targetId="dynamicLineColumnObj">
            <a:column name="${@expense_object_type_code}" align="center" editor="company_combox"/>
        </c:batch-config>-->
        <c:create-config targetId="dynamicLineFieldsObj">
            <p:loop source="/model/line_object">
                <c:process-config>
                    <a:field name="${@expense_object_type_code}" defaultValue="${@default_object_desc}" lovGridHeight="320" lovHeight="450" lovUrl="${/request/@context_path}/modules/expm/public/exp_req_ref_obj_sql_query_lov.screen?expense_object_type_id=${@expense_object_type_id}" lovWidth="500" prompt="${@description}" required="${@required_flag}" title="${@description}">
                        <a:mapping>
                            <a:map from="id" to="${@forname}"/>
                            <a:map from="description" to="${@expense_object_type_code}"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="${@forname}" defaultValue="${@default_object_id}"/>
                </c:process-config>
            </p:loop>
        </c:create-config>
        <!-- 调整类报销单的金额可以为负数 -->
        <c:create-config targetId="numberfield_holder">
            <p:switch test="/model/head_data/record/@adjustment_flag">
                <p:case value="Y">
                    <c:process-config>
                        <a:numberField id="numberfield" allowNegative="true" decimalPrecision="3"/>
                    </c:process-config>
                </p:case>
                <p:case>
                    <c:process-config>
                        <a:numberField id="numberfield" allowNegative="false" decimalPrecision="3"/>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
    </a:view-config>
</a:screen>
