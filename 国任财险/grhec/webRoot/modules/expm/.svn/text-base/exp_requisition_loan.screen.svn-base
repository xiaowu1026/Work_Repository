<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	&author:LiuZhiMin
	&date:2012.1.7
	&purpose:费用申请借款申请页面
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query defaultWhereClause="t1.hidden_flag = &apos;Y&apos; and (t1.user_id is null or t1.user_id = ${/session/@user_id}) and (t1.role_id is null or t1.role_id = ${/session/@role_id})" model="csh.CSH5010.csh_pay_req_hide_columns" rootpath="grid_cust"/>
        <!--<a:model-query defaultWhereClause="csh_transaction_type_code = &apos;PREPAYMENT&apos; and enabled_flag = &apos;Y&apos;" model="csh.csh_transaction_classes_vl" rootpath="trans_classes"/>-->
        <a:model-query model="csh.CSH5010.csh_pay_req_create_init_user" rootpath="user"/>
        <a:model-query model="csh.CSH5010.csh_pay_req_create_init_emp_list" rootpath="emp_list"/>
        <a:model-query defaultWhereClause="enabled_flag = &apos;Y&apos;" model="gld.gld_currency_vl" rootpath="cur_list"/>
        <a:model-query defaultWhereClause="enabled_flag = &apos;Y&apos;" model="csh.csh_payment_methods_vl" rootpath="payment_methods_list"/>
        <a:model-query model="csh.CSH5010.csh_pay_req_create_init_hd_id" rootpath="pay_req_hd_id"/>
        <a:model-query model="csh.CSH5010.csh_fnd_companies_vl" rootpath="comp"/>
        <a:model-query model="csh.csh_pay_req_create_init_currency" rootpath="cur"/>
        <a:model-query fetchAll="true" model="csh.csh_payment_req_types_vl" rootpath="pay_req_type"/>
        <a:model-query fetchAll="true" model="csh.csh_pay_req_update_init_file_type" rootpath="file_types"/>
        <a:model-query fetchAll="true" model="csh.CSH5010.csh_pay_req_update_init_record" rootpath="record"/>
        <a:model-query autoCount="false" defaultWhereClause="gc_lov.currency_code = ${/parameter/@currency_code}" fetchAll="true" model="gld.gld_currency_lov" rootPath="currency"/>
        <a:model-query defaultWhereClause="v.description = ${/parameter/@payment_type}" fetchAll="reue" model="csh.csh_payment_requisition_typlist" rootPath="payment_type"/>
        <a:model-query model="expm.exp_requisition_get_description" rootPath="exp_requisition"/>
    </a:init-procedure>
    <a:view>
        <a:link id="csh_pay_req_create_save_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_pay_req_create_save_exp.svc"/>
        <a:link id="uploadFile_link_2" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="csh_sum_amount_link" model="csh.CSH5010.csh_sum_amount" modelaction="query"/>
        <a:link id="csh_pay_req_head_update_link" model="csh.CSH5010.csh_pay_req_header_update" modelaction="update"/>
        <a:link id="csh_pay_req_line_query_link" model="csh.csh_pay_req_line_query" modelaction="batch_update"/>
        <a:link id="csh_pay_req_detail_history_link_3" url="${/request/@context_path}/modules/csh/public/csh_pay_req_detail_history.screen"/>
        <a:link id="csh_payment_requisition_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_payment_requisition.screen"/>
        <a:link id="csh_pay_req_submit_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_pay_req_submit.svc"/>
        <a:link id="csh_pay_req_update_save_link" url="${/request/@context_path}/modules/csh/CSH5010/csh_pay_req_update_save.svc"/>
        <a:link id="csh_payment_requisition_maintain_get_requistion_number_link" model="csh.CSH5010.csh_payment_requisition_maintain_get_requistion_number" modelaction="query"/>
        <a:link id="exp_bank_assign_link" url="${/request/@context_path}/modules/exp/EXP1050/exp_bank_assign_pmt_schedule_readonly.screen"/>
        <a:link id="csh_pay_req_delete_link" model="csh.CSH5010.csh_payment_requisition" modelaction="delete"/>
        <a:link id="csh_pay_req_line_delete_link" model="csh.CSH5010.csh_pay_req_line_delete" modelaction="delete"/>
        <script><![CDATA[
            function thi(record) {
                var grid = $('csh_payment_req_grid');
                var columns = grid.columns; /*总列数*/
                var colcount = columns.length;
                var redname = record.get('colname');
            
                for (var i = 0;i < colcount;i++) {
                    var colname = columns[i].name;
                    if (redname == colname) {
                        grid.hideColumn(colname);
                    }
                }
            }
            
            function expReqLoanLoadComplete() {
                document.getElementById('deleteButton_create').style.display = 'none';
                var grid_cust = $('loan_grid_cust_ds').getAll();
                for (var i = 0;i < grid_cust.length;i++) {
                    thi(grid_cust[i]);
                }
                var dataSet = $('pay_req_create_header_ds');
                var record = dataSet.getAt(0);
                record.set('employee_id', '${/model/user/record/@employee_id}');
                record.set('employee_id_display', '${/model/user/record/@name_code}');
                record.set('position_id_display', '${/model/user/record/@position}');
                record.set('position_id', '${/model/user/record/@position_id}');
                var p_date = (new Date()).format('yyyy-mm-dd');
                record.set('requisition_date', p_date);
                record.set('currency_code', '${/model/currency/record/@currency_code}');
                record.set('currency_code_display', '${/model/currency/record/@currency_name}');
                record.set('csh_type_id_display', '${/parameter/@payment_type}');
                record.set('partner_category_display', getRecordByProp('code_value', 'EMPLOYEE', $('payment_object_list_ds')).get('code_value_name'));
                record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_emp_lov');
            
                record.set('account_number', '${/model/user/record/@account_number}');
                record.set('account_name', '${/model/user/record/@account_name}');
                record.set('bank_code', '${/model/user/record/@bank_code}');
                record.set('bank_name', '${/model/user/record/@bank_name}');
                record.set('bank_location_code', '${/model/user/record/@bank_location_code}');
                record.set('bank_location_name', '${/model/user/record/@bank_location_name}');
                record.set('province_code', '${/model/user/record/@province_code}');
                record.set('province_name', '${/model/user/record/@province_name}');
                record.set('city_code', '${/model/user/record/@city_code}');
                record.set('city_name', '${/model/user/record/@city_name}');
            }
            
            function headerUpdateFunction_create(dataSet, record, name, value, oldValue) {
                if (name == 'partner_category') {
                    record.set('partner_code', '');
                    var linesDataSet = $('pay_req_create_line_ds');
                    var lines = linesDataSet.getAll();
                    for (var i = 0;i < lines.length;i++) {
                        lines[i].set('partner_category_display', record.get('partner_category_display'));
                        lines[i].set('partner_category', value);
                        lines[i].set('p_partner_name', '');
                        lines[i].set('account_number', '');
                        lines[i].set('account_name', '');
                    }
                    if (value == 'EMPLOYEE') {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_emp_lov');
                    } else if (value == 'CUSTOMER') {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_cus_lov');
                    } else {
                        record.getMeta().getField('partner_code').setLovService('csh.csh_pay_req_ven_lov');
                    }
                } else if (name == 'employee_id') {
                    record.set('position_id_display', '');
                    record.set('position_id', '');
                    var expRecord = $('pay_req_create_header_ds').getCurrentRecord();
                    $('pay_req_type_ds').setQueryParameter('employee_id', expRecord.get('employee_id'));
                    $('pay_req_type_ds').query();
                } else if (name == 'csh_type_id') { //增加当修改借款申请单类型后，设置行上得借款类型
                    var linesDataSet = $('pay_req_create_line_ds');
                    var lines = linesDataSet.getAll();
                    var pmds = $('pay_req_type_ds');
                    for (var i = 0;i < lines.length;i++) {
                        lines[i].set('csh_transaction_class_code_display', '');
                    }
                    $('trans_classes_ds').setQueryParameter('type_id', record.get('csh_type_id'));
                    $('trans_classes_ds').query();
                } else if (name == "employee_id_display") {}
            }
            
            function changePartner(combo, value, display, record) {
                var dataSet = $('pay_req_create_header_ds');
                var field = record.getMeta().getField('partner_code');
                var type = record.get('partner_category');
                if (type == 'EMPLOYEE') {
                    field.setLovService('csh.csh_pay_req_emp_lov');
                } else if (type == 'CUSTOMER') {
                    field.setLovService('csh.csh_pay_req_cus_lov');
                } else {
                    field.setLovService('csh.csh_pay_req_ven_lov');
                }
            }
            
            
            
            function initFunction_create(dataSet, record, index) {
                var employee_id = record.get('employee_id');
                var dataSet = $('pay_req_create_header_ds');
                dataSet.getAt(0).set('unpaid_amount', '${/parameter/@sum_amount}' - '${/parameter/@sum_line_amount}');
                dataSet.getAt(0).set('exp_req_header_id', '${/parameter/@exp_requisition_header_id}');
            }
            
            function createLineRecord() {
                var dataSet = $('pay_req_create_header_ds');
                var flag = dataSet.validate();
                if (flag) {
                    $('pay_req_create_line_ds').create();
                }
                
            }
            
            function saveFunction_create() {
            
                var headerDataSet = $('pay_req_create_header_ds');
                var unpaid_amount = headerDataSet.getAt(0).get('unpaid_amount');
                var sum_this_amount = headerDataSet.getAt(0).get('amount');
                var lineDataSet = $('pay_req_create_line_ds');
                if (headerDataSet.validate() && lineDataSet.validate()) {
                    //add by huangshengbo @2011/07/06
                    //防止用户不点击新增就按保存
                    //begin
                    if (!headerDataSet.getAt(0).get('amount')) {
                        Aurora.showMessage('${l:PROMPT}', '${l:CHS_PAYMENT_REQUISITION_CREATE.PROMPT_NEW_DATA}');
                        return;
                    }
                    //校验金额
                    if (sum_this_amount > unpaid_amount) {
                        Aurora.showMessage('${l:PROMPT}', '${l:CHS_PAYMENT_REQUISITION_CREATE.NOT_ENOUGH_TO_PAY}');
                        return;
                    }
            
                    //end
                    var param = [];
                    param = headerDataSet.getJsonData(false)[0] || [];
                    param['line'] = lineDataSet.getJsonData(false);
                    Aurora.request({
                        url: /*csh_pay_req_create_save.svc*/
                        $('csh_pay_req_create_save_link').getUrl(),
                        para: param,
                        success: dispatch_create,
                        scope: this
                    });
                }
            }
            
            function submitFunction_create() {
                if (!$('pay_req_create_header_ds').getAt(0).get('amount')) {
                    Aurora.showMessage('${l:PROMPT}', '${l:CHS_PAYMENT_REQUISITION_CREATE.PROMPT_NEW_DATA}');
                    return;
                }
                if (!checkAmount()) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK1}', null, 250, 100);
                    return;
                }
                Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.SAVE_SUBMIT}', null, 250, 100);
            }
            
            function backFunction_create() {
                $('exp_csh_payment_requisition_screen2').close();
            
            }
            //点击保存按钮成功后调用
            var payment_requisition_header_id = null;
            
            
            //点击保存按钮成功后调用
            var payment_requisition_header_id = null;
            
            function dispatch_create(args) {
                var expRecord = $('pay_req_create_header_ds').getCurrentRecord();
                var csh_type_id_display = expRecord.getMeta().getField("csh_type_id_display"); //hisms-42621
                csh_type_id_display.setReadOnly(true); //--------------------------------------fanqihua-2013/10/8
                position_id = expRecord.get('position_id');
                var employee_id = expRecord.get('employee_id');
                payment_requisition_header_id = expRecord.get('payment_requisition_header_id');
            
                Aurora.request({
                    url: $('csh_payment_requisition_maintain_get_requistion_number_link').getUrl(),
                    para: {
                        'payment_requisition_header_id': payment_requisition_header_id
                    },
                    success: function(data) {
                        expRecord.set('requisition_number', data.result.record.requisition_number);
                        expRecord.set('status_name', data.result.record.status_name);
                    }
                });
                //document.getElementById('create_box').style.display = 'none';
                //document.getElementById('update_hbox').style.display = 'block';
                //$('createButton').hidden();
                // $('position_list_update_ds').setQueryParameter('payment_requisition_header_id',payment_requisition_header_id);
                // $('position_list_update_ds').query();
                // expRecord.getField('position_id_display').setOptions($('position_list_update_ds'));
            
                // document.getElementById('deleteButton_create').style.display = 'none';
                // document.getElementById('deleteButton_update').style.display = 'block';
                $('requisition_detail_result_ds').query();
                $('pay_req_create_line_ds').setQueryUrl('${/request/@context_path}/autocrud/csh.csh_pay_req_line_query/query?payment_requisition_header_id=' + payment_requisition_header_id);
                $('pay_req_create_line_ds').query();
                // var payment_requisition_line_id = $('pay_req_create_line_ds').getAt(0).get('payment_requisition_line_id');
                // $('pay_req_create_line_ds').getAt(0).get('payment_requisition_line_id');
            }
            
            
            function checkAmount() {
                var records = $('pay_req_create_line_ds').getAll();
                var heanderAmount = $('pay_req_create_header_ds').getAt(0).get('amount');
                var lineAmount = 0;
            
                for (var i = 0;i < records.length;i++) {
                    lineAmount = lineAmount + records[i].get('amount');
                }
                if (heanderAmount == lineAmount) {
                    return true;
                } else {
                    return false;
                }
            }
            
            
            function addFunction_create(dataSet, record, index) {
                var selectedLines = dataSet.getSelected();
                var dataSetHeader = $('pay_req_create_header_ds');
                var recordHeader = dataSetHeader.getAt(0);
                var employeeId = recordHeader.get('employee_id');
                var currencyCode = recordHeader.get('currency_code');
                var lineRecords = dataSet.getAll();
                if (employeeId == '') {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK4}', null, 250, 100);
                    $('employee_id_cmp').focus();
                }
            
                if (currencyCode == '') {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK5}', null, 250, 100);
                    $('currency_code_cmp').focus();
                }
            
                if (employeeId != '' && currencyCode != '') {
                    recordHeader.getMeta().getField('employee_id_display').setReadOnly(true);
                    recordHeader.getMeta().getField('currency_code_display').setReadOnly(true);
                    recordHeader.getMeta().getField('currency_code_display').setRequired(false);
                }
            
                if (!selectedLines || selectedLines.length == 0) {
                    record.set('payment_requisition_header_id', $('pay_req_hd_id_ds').getAt(0).get('payment_requisition_header_id'));
                    record.set('description', recordHeader.get('description'));
                    record.set('partner_category', recordHeader.get('partner_category'));
                    record.set('partner_category_display', recordHeader.get('partner_category_display'));
                    record.set('partner_id', recordHeader.get('p_partner_id'));
                    record.set('p_partner_name', recordHeader.get('partner_code'));
                    record.set('payment_method_id', recordHeader.get('payment_method_id'));
                    record.set('payment_method_id_display', recordHeader.get('payment_method_id_display'));
                    record.set('account_number', recordHeader.get('account_number'));
                    record.set('account_name', recordHeader.get('account_name'));
                    record.set('bank_code', recordHeader.get('bank_code'));
                    record.set('bank_name', recordHeader.get('bank_name'));
                    record.set('bank_location_code', recordHeader.get('bank_location_code'));
                    record.set('bank_location_name', recordHeader.get('bank_location_name'));
                    record.set('province_code', recordHeader.get('province_code'));
                    record.set('province_name', recordHeader.get('province_name'));
                    record.set('city_code', recordHeader.get('city_code'));
                    record.set('city_name', recordHeader.get('city_name'));
                    //add by Qu yuanyuan 默认集中支付
                    var gather_flag_records = $('gather_flag_ds').getAll();
                for(var i=0;i<gather_flag_records.length;i++){
                    if(gather_flag_records[i].get('code_value') == '1'){
                        record.set('gather_flag',gather_flag_records[i].get('code_value'));
                        record.set('gather_flag_desc',gather_flag_records[i].get('code_value_name'));
                        break;
                    }
                }
            
                } else {
            
                    record.set('payment_requisition_header_id', selectedLines[0].get('payment_requisition_header_id'));
                    record.set('csh_transaction_class_code_display', selectedLines[0].get('csh_transaction_class_code_display'));
                    record.set('csh_transaction_class_code', selectedLines[0].get('csh_transaction_class_code'));
                    record.set('payment_requisition_line_type_display', selectedLines[0].get('payment_requisition_line_type_display'));
                    record.set('payment_requisition_line_type', selectedLines[0].get('payment_requisition_line_type'));
                    record.set('ref_document_id_display', selectedLines[0].get('ref_document_id_display'));
                    record.set('need_payment_amount', selectedLines[0].get('need_payment_amount'));
                    record.set('requisited_amount', selectedLines[0].get('requisited_amount'));
                    record.set('requisited_unpayment_amount', selectedLines[0].get('requisited_unpayment_amount'));
                    record.set('ref_document_id', selectedLines[0].get('ref_document_id'));
                    record.set('cont_flag', selectedLines[0].get('cont_flag'));
                    record.set('partner_category', selectedLines[0].get('partner_category'));
                    record.set('partner_category_display', selectedLines[0].get('partner_category_display'));
                    record.set('payment_schedule_line_id', selectedLines[0].get('payment_schedule_line_id'));
                    record.set('p_partner_name', selectedLines[0].get('p_partner_name'));
                    record.set('payment_method_id', selectedLines[0].get('payment_method_id'));
                    record.set('payment_method_id_display', selectedLines[0].get('payment_method_id_display'));
                    record.set('partner_id', selectedLines[0].get('partner_id'));
                    record.set('account_number', selectedLines[0].get('account_number'));
                    record.set('account_name', selectedLines[0].get('account_name'));
                    record.set('contract_number', selectedLines[0].get('contract_number'));
                    record.set('contract_header_id', selectedLines[0].get('contract_header_id'));
                    record.set('payment_schedule_line_number', selectedLines[0].get('payment_schedule_line_number'));
                    record.set('description', selectedLines[0].get('description'));
                    record.set('amount', selectedLines[0].get('amount'));
                    record.set('gather_flag',selectedLines[0].get('code_value'));
                    record.set('gather_flag_desc',selectedLines[0].get('code_value_name'));
                }
            }
            
            function updateFunction_create(dataSet, record, name, value, oldValue) {
                if (name == 'payment_requisition_line_type') {
                    record.set('ref_document_id', '');
                    record.set('ref_document_id_display', '');
                    record.set('need_payment_amount', '');
                    record.set('requisited_amount', '');
                    record.set('requisited_unpayment_amount', '');
                    record.set('amount', '');
                    record.set('contract_header_id', '');
                    if (value != 'EXP_REQUISITION') {
                        record.getMeta().getField('ref_document_id_display').setRequired(false);
                    } else {
                        record.getMeta().getField('ref_document_id_display').setRequired(true);
                    }
                } else if (name == 'contract_number') {
                    if (oldValue != value) {
                        record.set('payment_schedule_line_number', '');
                    }
                    record.set('payment_schedule_line_number', '');
                    record.set('payment_schedule_line_id', '');
                } else if (name == 'partner_category') {
                    record.set('p_partner_name', '');
                    record.set('partner_id', '');
                    record.set('account_number', '');
                } else if (name == 'p_partner_name') {
                    record.getMeta().getField('account_number').setLovPara('id', record.get('partner_id'));
                }
            }
            
            function isCellEditableFunction_create(record, name) {
                if (name == 'need_payment_amount' || name == 'requisited_amount' || name == 'requisited_unpayment_amount') {
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        return '';
                    } else {
                        record.set('ref_document_id', '');
                        record.set('ref_document_id_display', '');
                        record.set('need_payment_amount', '');
                        record.set('requisited_amount', '');
                        record.set('requisited_unpayment_amount', '');
                        return '';
                    }
                }
            }
            
            function amountValidator(record, name, value) {
                var need_payment_amount = $('pay_req_create_header_ds').getAt(0).get('unpaid_amount');
                var dataSet = $('pay_req_create_line_ds');
                if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                    if (value <= 0 || value > (parseFloat(('' + need_payment_amount).replace(/[,]+/g, ""))).toFixed(5)) {
                        record.set('amount', '');
                        headAmountChanged('');
                        return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK2}';
                    }
                    var rs = dataSet.getAll();
                    var usedAmount = 0;
                    var lineAmount = 0;
                    for (var i = 0;i < rs.length;i++) {
                        var r = rs[i];
                        if (r.get('ref_document_id_display') == record.get('ref_document_id_display') && r != record) {
                            lineAmount = r.get('amount');
                            if (!isNaN(lineAmount) && !Aurora.isEmpty(lineAmount)) {
                                usedAmount += lineAmount;
                            }
                        }
                    }
                    if (value + usedAmount > need_payment_amount) {
                        record.set('amount', '');
                        headAmountChanged('');
                        return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK2}';
                    }
                } else {
                    if (record.get('amount') <= 0) {
                        record.set('amount', '');
                        headAmountChanged('');
                        return '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK17}';
                    }
                }
                headAmountChanged();
                return true;
            }
            
            function headAmountChanged() {
                var records = $('pay_req_create_line_ds').getAll();
                var lineAmount = 0;
                for (var i = 0;i < records.length;i++) {
                    lineAmount += records[i].get('amount');
                }
                $('pay_req_create_header_ds').getAt(0).set('amount', lineAmount);
            }
            
            /*新增点击保存后进入维护页面js代码*/
            
            function updateFunction_load(ds) {
                $('saveButton').enable();
            }
            
            //点击保存按钮所触发的操作
            
            function saveFunction_update() {
                $('saveButton').disable();
                var headerDataSet = $('pay_req_create_header_ds');
                var lineDataSet = $('pay_req_create_line_ds');
                var payment_requisition_header_id = headerDataSet.getAt(0).get('payment_requisition_header_id');
                var payment_requisition_number = headerDataSet.getAt(0).get('requisition_number');
                if (headerDataSet.validate() && lineDataSet.validate()) {
                    var param = [];
                    param = headerDataSet.getJsonData(false)[0] || [];
                    param['source_type'] = 'EXP_REQUISITION';
                    if (Aurora.isEmpty(payment_requisition_number)) {
                        param['_status'] = 'insert';
                    } else {
                        param['_status'] = 'update';
                    }
                    param['line'] = lineDataSet.getJsonData(false);
                    Aurora.request({
                        url: /*csh_pay_req_update_save.svc*/
                        $('csh_pay_req_update_save_link').getUrl(),
                        para: param,
                        success: function() {
                            /* $('requisition_detail_result_ds').query();
                             $('pay_req_create_line_ds').query(); */
                            Aurora.request({
                                url: $('csh_sum_amount_link').getUrl(),
                                para: {
                                    'payment_requisition_header_id': payment_requisition_header_id
                                },
                                success: function(data) {
                                    headerDataSet.getAt(0).set('amount', data.result.record.sum_amount);
                                    Aurora.request({
                                        url: $('csh_pay_req_head_update_link').getUrl(),
                                        para: headerDataSet.getJsonData(false)[0] || [],
                                        success: dispatch_create,
                                        failure: function() {
                                            $('saveButton').enable();
                                        },
                                        scope: this
                                    });
                                },
                                failure: function() {
                                    $('saveButton').enable();
                                },
                            });
                            $('deleteButton').show();
                        },
                        failure: function() {
                            $('saveButton').enable();
                        },
                        scope: this
                    });
                } else {
                    $('saveButton').enable();
                    document.getElementById('deleteButton_create').style.display = 'block';
                }
                $('saveButton').enable();
                document.getElementById('deleteButton_create').style.display = 'block';
            }
            
            function paySchLineNumFunction(record, name) {
                if (record.get('contract_header_id')) {
                    var dataSet = $('pay_req_create_line_ds');
                    var metaField = record.getMeta().getField('payment_schedule_line_number');
                    metaField.setLovService('csh.CSH5010.csh_pay_req_schedules_lov');
                    metaField.setLovPara('contract_header_id', record.get('contract_header_id'));
                    metaField.setLovPara('currency_code', $('pay_req_create_header_ds').getAt(0).get('currency_code'));
                    metaField.setLovPara('partner_category', record.get('partner_category'));
                    metaField.setLovPara('partner_id', record.get('partner_id'));
                    return 'pay_sch_line_num_lov';
                } else {
                    return '';
                }
            }
            
            function conNumFunction(record, name) {
                var req_id = record.get('ref_document_id');
                var dataSet = $('pay_req_create_line_ds');
                var metaField = record.getMeta().getField('contract_number');
                metaField.setLovService('csh.CSH5010.csh_pay_req_contract_lov');
                if (record.get('payment_requisition_line_type') != 'EXP_REQUISITION') {
                    metaField.setLovPara('partner_category', record.get('partner_category'));
                    metaField.setLovPara('partner_id', record.get('partner_id'));
                    metaField.setLovPara('type_fg', 'OTHER');
                } else {
                    metaField.setLovPara('ref_document_id', req_id);
                    metaField.setLovPara('partner_category', record.get('partner_category'));
                    metaField.setLovPara('partner_id', record.get('partner_id'));
                    metaField.setLovPara('type_fg', 'REQUIS');
                }
            
                var r = $('pay_req_create_header_ds').getAt(0);
                r.set('p_req_id', req_id);
                return 'con_num_lov';
            }
            
            function refDocCommitFunction_create(lov, record, record2) {
                record.set('amount', '');
            }
            
            function partnerNameCommitFunction_create(lov, record, record2) {}
            
            function cellClickFunction_create(grid, row, name, record) {
                if (name == 'ref_document_id_display') {
                    var r = $('pay_req_create_header_ds').getAt(0);
                    var employeeId = r.get('employee_id');
                    var currencyCode = r.get('currency_code');
                    if (employeeId == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK7}', null, 250, 100);
                        $('employee_id_cmp').focus();
                    }
                    if (currencyCode == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK8}', null, 250, 100);
                        $('currency_code_cmp').focus();
                    }
                    if (record.get('payment_requisition_line_type') == 'EXP_REQUISITION') {
                        var dataSet = $('pay_req_create_line_ds');
                        var metaField = record.getMeta().getField('ref_document_id_display');
                        metaField.setLovService('csh.CSH5010.csh_pay_req_exp_lov');
                        metaField.setLovPara('employee_id', employeeId);
                        metaField.setLovPara('currency_code', currencyCode);
                    }
                } else if (name == 'p_partner_name') {
                    var lineField = record.getMeta().getField('p_partner_name');
                    var type = record.get('partner_category');
            
                    if (type == 'EMPLOYEE') {
                        lineField.setLovService('csh.csh_pay_req_emp_lov');
                    } else if (type == 'CUSTOMER') {
                        lineField.setLovService('csh.csh_pay_req_cus_lov');
                    } else {
                        lineField.setLovService('csh.csh_pay_req_ven_lov');
                    }
                } else if (name == 'payment_schedule_line_number') {
                    if (record.get('contract_header_id') == '') {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION_HDS.CHECK6}', null, 250, 100);
                        return '';
                    }
                } else if (name == 'account_number') {
                    switch (record.get('partner_category')) {
                    case 'CUSTOMER':
                        url = 'csh.csh_customer_accounts';
                        break;
                    case 'EMPLOYEE':
                        url = 'csh.exp_employee_accounts';
                        break;
                    case 'VENDER':
                        url = 'csh.csh_vender_accounts';
                        break;
                    default:
                        break;
                    }
                    record.getMeta().getField('account_number').setLovService(url);
                    record.getMeta().getField('account_number').setLovPara('id', record.get('partner_id'));
                }
            }
            
            
            function getRecordByProp(propName, key, dataSet) {
                var records = dataSet.getAll();
            
                for (var i = 0;i < records.length;i++) {
                    var record = records[i];
                    if (record.get(propName) == key) {
                        return record;
                    }
                }
                return null;
            } /*新增点击保存后进入维护页面js代码*/
            
            function bankAssign(value, record, name) {
                var lineIndex = $('pay_req_create_line_ds').indexOf(record);
                return '<a href="javascript:bankAssignInfo(' + lineIndex + ')">${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}</a>';
            }
            
            function bankAssignInfo(lineIndex) {
                new Aurora.Window({
                    id: 'exp_bank_assign_window',
                    url: $('exp_bank_assign_link').getUrl() + '?line_index=' + lineIndex + '&ds_name=pay_req_create_line_ds',
                    title: '${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}',
                    height: 240,
                    width: 540
                });
            }
            
            function getRecordsFromBankCode(record) {
                var lineIndex = record.get('line_index');
                var pmtplan_schedules_record = $('pay_req_create_line_ds').getAt(lineIndex);
                pmtplan_schedules_record.set('account_number', record.get('account_number'));
                pmtplan_schedules_record.set('account_name', record.get('account_name'));
                pmtplan_schedules_record.set('bank_code', record.get('bank_code'));
                pmtplan_schedules_record.set('bank_name', record.get('bank_name'));
                pmtplan_schedules_record.set('bank_location_code', record.get('bank_location_code'));
                pmtplan_schedules_record.set('bank_location_name', record.get('bank_location_name'));
                pmtplan_schedules_record.set('province_code', record.get('province_code'));
                pmtplan_schedules_record.set('province_name', record.get('province_name'));
                pmtplan_schedules_record.set('city_code', record.get('city_code'));
                pmtplan_schedules_record.set('city_name', record.get('city_name'));
            }
            
            //added by mjj at 2014-07-11 purpose:添加整单删除按钮。
            
            function deleteCshReq() {
                var okCan = Aurora.showConfirm('${l:PROMPT}', '${l:CSH_PAYMENT_REQUISITION.SURE_DELETE_REQ}', function() {
                    var payment_requisition_header_id = $('pay_req_create_header_ds').getAt(0).get('payment_requisition_header_id');
                    param = {};
                    param['payment_requisition_header_id'] = payment_requisition_header_id;
                    Aurora.request({
                        url: $('csh_pay_req_delete_link').getUrl(),
                        para: param,
                        success: function() {
                            $('requisition_detail_result_ds').query();
                            $('exp_csh_payment_requisition_screen2').close();
                        },
                        scope: this
                    });
                }, function() {
                    okCan.close();
                }, 250, 100);
            }
            
            function deleteLineRecord() {
                var ds = $('pay_req_create_line_ds');
                var record = ds.getCurrentRecord();
                var payment_requisition_line_id = record.get('payment_requisition_line_id');
                Aurora.request({
                    url: $('csh_pay_req_line_delete_link').getUrl(),
                    para: {
                        'payment_requisition_line_id': payment_requisition_line_id
                    },
                    success: function() {
                        $('pay_req_create_line_ds').query();
                    },
                    scope: this
                });
            }
            //end add.
        ]]></script>
        <a:dataSets>
            <a:dataSet id="gather_flag_ds" lookupCode="GATHER_FLAG"/>
            <a:dataSet id="loan_grid_cust_ds">
                <a:datas dataSource="/model/grid_cust"/>
            </a:dataSet>
            <a:dataSet id="trans_classes_ds" model="csh.CSH5010.csh_payment_requisition_req_types"/>
            <a:dataSet id="user_ds">
                <a:datas dataSource="/model/user"/>
            </a:dataSet>
            <a:dataSet id="emp_list_ds">
                <a:datas dataSource="/model/emp_list"/>
            </a:dataSet>
            <a:dataSet id="cur_list_ds">
                <a:datas dataSource="/model/cur_list"/>
            </a:dataSet>
            <a:dataSet id="payment_methods_list_ds">
                <a:datas dataSource="/model/payment_methods_list"/>
            </a:dataSet>
            <a:dataSet id="pay_req_hd_id_ds">
                <a:datas dataSource="/model/pay_req_hd_id"/>
            </a:dataSet>
            <a:dataSet id="comp_ds">
                <a:datas dataSource="/model/comp"/>
            </a:dataSet>
            <a:dataSet id="cur_ds">
                <a:datas dataSource="/model/cur"/>
            </a:dataSet>
            <a:dataSet id="pay_req_type_ds" model="csh.csh_payment_req_types_vl">
                <a:datas dataSource="/model/pay_req_type"/>
            </a:dataSet>
            <a:dataSet id="position_list_update_ds" model="csh.CSH5010.csh_payment_requisition_position_update_list">
                <a:fields>
                    <a:field name="position_code"/>
                    <a:field name="position_id"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="payment_object_list_ds" lookupCode="PAYMENT_OBJECT"/>
            <a:dataSet id="doc_category_list_ds" lookupCode="PAYMENT_REQ_DOC_CATEGORY"/>
            <a:dataSet id="pay_req_create_header_ds" autoCreate="true">
                <a:fields>
                    <a:field name="exp_req_header_id"/>
                    <a:field name="unpaid_amount" prompt="EXP_REQUISITION_HEADERS.UNPAID_AMOUNT" readOnly="true"/>
                    <a:field name="payment_requisition_header_id" defaultValue="${/model/pay_req_hd_id/record/@payment_requisition_header_id}"/>
                    <a:field name="operation_unit_id" defaultValue="${/model/user/record/@operation_unit_id}"/>
                    <a:field name="contract_header_id"/>
                    <a:field name="p_partner_id" defaultValue="${/model/user/record/@employee_id}"/>
                    <a:field name="p_req_id"/>
                    <a:field name="p_company_id" defaultValue="${/model/comp/record/@company_id}"/>
                    <a:field name="employee_id"/>
                    <a:field name="employee_id_display" displayField="name_code" options="emp_list_ds" prompt="CSH_BANK_CONTACT_PERSONS.EMPLOYEE_ID" required="true" returnField="employee_id" valueField="employee_id">
                        <a:mapping>
                            <a:map from="operate_unit_id" to="operation_unit_id"/>
                            <a:map from="employee_id" to="employee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="position_id"/>
                    <a:field name="requisition_date" prompt="CSH_PAYMENT_REQUISITION_HDS.REQUISITION_DATE" required="true"/>
                    <a:field name="requisition_number" prompt="CSH_DOC_PAYMENT_COMPANY.DOCUMENT_ID" readOnly="true"/>
                    <a:field name="partner_category" defaultValue="EMPLOYEE"/>
                    <a:field name="partner_category_display" displayField="code_value_name" options="payment_object_list_ds" prompt="EXP_REPORT_HEADERS.PAYEE_TARGET" required="true" returnField="partner_category" valueField="code_value"/>
                    <a:field name="partner_code" defaultValue="${/model/user/record/@name_code}" lovGridHeight="300" lovHeight="430" lovService="csh.csh_pay_req_emp_lov" lovWidth="600" prompt="ACP_INVOICE_HEADERS.PAYEE_ID" required="true" title="ACP_INVOICE_HEADERS.PAYEE_ID">
                        <a:mapping>
                            <a:map from="partner_code" to="partner_code"/>
                            <a:map from="id" to="p_partner_id"/>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="amount" prompt="CSH_PAYMENT_REQUISITION_HDS.AMOUNT" readOnly="true"/>
                    <a:field name="description" prompt="CSH_PAYMENT_REQUISITION_HDS.DESCRIPTION" required="true"/>
                    <a:field name="payment_method_id"/>
                    <a:field name="payment_method_id_display" displayField="description" options="payment_methods_list_ds" prompt="CSH_TRANSACTION_HEADERS.PAYMENT_METHOD_ID" required="true" returnField="payment_method_id" valueField="payment_method_id"/>
                    <a:field name="status_name" prompt="PUR_PURCHASE_ORDER.DOCUMENT_STATUS" readOnly="true"/>
                    <a:field name="csh_type_id"/>
                    <a:field name="csh_type_id_display" displayField="description" options="pay_req_type_ds" prompt="CSH_PAY_REQ_TYPES.TYPE_CODE" required="true">
                        <a:mapping>
                            <a:map from="type_id" to="csh_type_id"/>
                            <a:map from="payment_method_desc" to="payment_method_id_display"/>
                            <a:map from="payment_method_id" to="payment_method_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="source_type" defaultValue="EXP_REQUISITION"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="initFunction_create"/>
                    <a:event name="update" handler="headerUpdateFunction_create"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pay_req_create_line_ds" autoCount="true" autoQuery="false" selectable="true">
                <a:fields>
                    <a:field name="csh_transaction_class_code"/>
                    <a:field name="csh_transaction_class_code_display" displayField="description" options="trans_classes_ds" prompt="CSH_PAYMENT_REQUISITION_PAYMENT.SACTION_CLASS_DESC" required="true" returnField="csh_transaction_class_code" valueField="csh_transaction_class_code"/>
                    <a:field name="payment_requisition_line_type" defaultValue="EXP_REQUISITION"/>
                    <a:field name="p_payment_req_line_type" defaultValue="${/model/exp_requisition/record/@description_text}" prompt="CSH_PAYMENT_REQUISITION_LNS.PAYMENT_REQUISITION_LINE_TYPE" readOnly="true"/>
                    <a:field name="ref_document_id_display" defaultValue="${/parameter/@expense_type_code}" prompt="CSH_PAYMENT_REQUISITION_LNS.REF_DOCUMENT_ID"/>
                    <a:field name="ref_document_id" defaultValue="${/parameter/@exp_requisition_header_id}"/>
                    <a:field name="partner_category" required="true"/>
                    <a:field name="partner_category_display" displayField="code_value_name" options="payment_object_list_ds" prompt="EXP_REPORT_HEADERS.PAYEE_CATEGORY" returnField="partner_category" valueField="code_value"/>
                    <a:field name="partner_id"/>
                    <a:field name="p_partner_name" lovGridHeight="300" lovHeight="430" lovService="csh.csh_pay_req_emp_lov" lovWidth="600" prompt="ACP_INVOICE_HEADERS.PAYEE_ID" title="ACP_INVOICE_HEADERS.PAYEE_ID">
                        <a:mapping>
                            <a:map from="partner_code" to="p_partner_name"/>
                            <a:map from="id" to="partner_id"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="account_number" to="account_number"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_method_id"/>
                    <a:field name="payment_method_id_display" displayField="description" options="payment_methods_list_ds" prompt="CSH_TRANSACTION_HEADERS.PAYMENT_METHOD_ID" required="true" returnField="payment_method_id" valueField="payment_method_id"/>
                    <a:field name="contract_number" lovGridHeight="300" lovHeight="430" lovWidth="500" prompt="CON_CONTRACT_HEADERS.CONT_DOCUMENT_NUMBER" title="CON_CONTRACT_HEADERS.CONT_DOCUMENT_NUMBER">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_number"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="account_number" lovGridHeight="320" lovHeight="450" lovService="csh.exp_employee_accounts" lovWidth="750" required="true" title="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NUM">
                        <a:mapping>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="province_code" to="province_code"/>
                            <a:map from="province_name" to="province_name"/>
                            <a:map from="city_code" to="city_code"/>
                            <a:map from="city_name" to="city_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="payment_schedule_line_number" lovGridHeight="300" lovHeight="430" lovWidth="750" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title=" ">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="payment_schedule_line_number"/>
                            <a:map from="payment_schedule_line_id" to="payment_schedule_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="description" prompt="CSH_PAYMENT_REQUISITION_HDS.DESCRIPTION"/>
                    <a:field name="amount" prompt="CSH_PAYMENT_REQUISITION_LNS.LINE_AMOUNT" required="true" validator="amountValidator"/>
                    <a:field name="payment_schedule_line_id"/>
                    <a:field name="payment_requisition_header_id"/>
                    <a:field name="payment_requisition_line_id"/>
                    <a:field name="contract_header_id"/>
                    <a:field name="cont_flag"/>
                    <a:field name="gather_flag_desc" displayField="code_value_name" options="gather_flag_ds" required="true" returnField="gather_flag" valueField="code_value"/>
                    <a:field name="gather_flag" defaultValue="1"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="addFunction_create"/>
                    <a:event name="update" handler="updateFunction_create"/>
                    <a:event name="load" handler="updateFunction_load"/>
                    <a:event name="remove" handler="headAmountChanged"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar id="exp_csh_pay_req_create_top_bar">
                <a:screenTitle/>
                <a:toolbarButton id="saveButton" click="saveFunction_update" text="HAP_SAVE" width="80"/>
                <a:toolbarButton id="deleteButton" click="deleteCshReq" text="PROMPT.DELETE_DOCUMENT" width="80"/>
                <a:toolbarButton click="backFunction_create" text="HAP_BACK" width="80"/>
            </a:screenTopToolbar>
            <a:form id="exp_csh_pay_req_create_head_form" column="1" title="CSH_PAYMENT_REQUISITION_HDS.CREATE">
                <a:box id="exp_csh_pay_req_create_normal_box" column="4" labelWidth="90" style="width:100%">
                    <a:textField name="requisition_number" bindTarget="pay_req_create_header_ds"/>
                    <a:comboBox name="csh_type_id_display" bindTarget="pay_req_create_header_ds"/>
                    <a:comboBox name="payment_method_id_display" bindTarget="pay_req_create_header_ds"/>
                    <a:numberField name="unpaid_amount" allowFormat="true" bindTarget="pay_req_create_header_ds"/>
                    <!-- <a:comboBox name="partner_category_display" bindTarget="pay_req_create_header_ds">
                        <a:events>
                            <a:event name="select" handler="changePartner"/>
                        </a:events>
                    </a:comboBox>
                    <a:lov name="partner_code" bindTarget="pay_req_create_header_ds"/> -->
                    <a:datePicker name="requisition_date" bindTarget="pay_req_create_header_ds"/>
                    <a:numberField name="amount" allowDecimals="true" allowFormat="true" bindTarget="pay_req_create_header_ds"/>
                </a:box>
                <a:box id="exp_csh_pay_req_create_ta_box" labelWidth="90" style="width:100%;">
                    <a:textArea name="description" id="exp_csh_pay_req_create_desc_ta" bindTarget="pay_req_create_header_ds" colspan="4"/>
                </a:box>
            </a:form>
            <!-- <a:hBox id="create_box" style="margin-left:10px;margin-top:10px;">
                <a:button click="saveFunction_create" text="HAP_SAVE"/>
                <a:button click="backFunction_create" text="HAP_BACK"/>
            </a:hBox>
            <a:hBox id="update_hbox" style="margin-left:10px;margin-top:10px;display:none;">
                <a:button id="saveButton" click="saveFunction_update" text="HAP_SAVE"/>
                <a:button click="backFunction_create" text="HAP_BACK"/>
            </a:hBox> -->
            <a:grid id="csh_payment_req_grid" bindTarget="pay_req_create_line_ds" marginHeight="268" navBar="true">
                <a:toolBar>
                    <a:button click="createLineRecord" icon="${/request/@context_path}/images/add.gif" text="HAP_NEW"/>
                    <a:button type="clear"/>
                    <a:button id="deleteButton_create" click="deleteLineRecord" icon="${/request/@context_path}/images/remove.gif" text="删除"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="csh_transaction_class_code_display" align="center" editor="combobox_editor_create" width="120"/>
                    <a:column name="p_payment_req_line_type" align="center" width="120"/>
                    <a:column name="ref_document_id_display" align="center" width="150"/>
                    <a:column name="partner_category_display" align="center" editor="combobox_editor_create" width="80"/>
                    <a:column name="p_partner_name" align="center" editor="con_num_lov"/>
                    <a:column name="amount" align="center" editor="numberfield_editor_create" renderer="Aurora.formatMoney"/>
                    <a:column name="account_number" align="center" editor="con_num_lov" prompt="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NUM"/>
                    <a:column name="account_name" align="center" prompt="EXP_EMPLOYEE_ACCOUNTS.BANK_ACCOUNT_NAME"/>
                    <a:column name="payment_method_id_display" align="center" editor="combobox_editor_create" prompt="ACP.DESCRIPTION_METHOD"/>
                    <a:column name="gather_flag_desc" align="center" prompt="TRAVEL_PLAN_TYPE.CENTRALIZED_CLEARING_FLAG"/>
                    <a:column name="description" align="left" editor="textfield_editor_create"/>
                    <a:column name="contract_number" align="center" editorFunction="conNumFunction"/>
                    <a:column name="payment_schedule_line_number" align="center" editorFunction="paySchLineNumFunction" width="120"/>
                    <!-- <a:column name="bank_id" align="center" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" renderer="bankAssign"/> -->
                </a:columns>
                <a:editors>
                    <a:comboBox id="combobox_editor_create"/>
                    <a:textField id="textfield_editor_create"/>
                    <a:lov id="ref_doc_id_lov">
                        <a:events>
                            <a:event name="commit" handler="refDocCommitFunction_create"/>
                        </a:events>
                    </a:lov>
                    <a:lov id="con_num_lov"/>
                    <a:lov id="p_partner_name_lov">
                        <a:events>
                            <a:event name="commit" handler="partnerNameCommitFunction_create"/>
                        </a:events>
                    </a:lov>
                    <a:lov id="pay_sch_line_num_lov"/>
                    <a:numberField id="numberfield_editor_create"/>
                </a:editors>
                <a:events>
                    <a:event name="cellclick" handler="cellClickFunction_create"/>
                </a:events>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
            function expCshPayReqCreateInitSize() {
                //描述宽度
                　　
                var labelWidth = 75;　　 //标签宽度,5 = 3padding + 2border-spacing
                　　
                var tagWidth = 150 + 5;　　 //页面宽度、高度
                　　
                var vw = $A.getViewportWidth();　　
                var vh = $A.getViewportHeight();　　 //留白宽度
                　　
                var marginWidth = 35;　　 //自适应宽度
                　　
                var autoWidth = vw - marginWidth;　　 //Form内部宽度，-2border
                　　
                var formInnerWidth = autoWidth - 2;　　 //所占列数
                　　
                var colSpan = 4;　　 //设置组件的自适应宽度
                　　Ext.get('exp_csh_pay_req_create_head_form').setWidth(autoWidth + 4);
                $('csh_payment_req_grid').setWidth(autoWidth);
                Ext.get('exp_csh_pay_req_create_desc_ta').setWidth(formInnerWidth - (formInnerWidth / colSpan - labelWidth - tagWidth) - labelWidth - 6);
            }
            //Ext.fly(window).on('resize', expCshPayReqCreateInitSize);
            expCshPayReqCreateInitSize();
            
            expReqLoanLoadComplete();
        ]]></script>
    </a:view>
</a:screen>
