<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure>
        <a:model-query fetchAll="true" model="gld.gld_currency_vl" rootpath="currencylist"/>
        <a:model-query defaultWhereClause="company_id = ${/session/@company_id}" fetchAll="true" model="expm.exp_expense_report_types_vl" rootPath="exp_report_type_list"/>
        <a:model-query model="expm.get_batch_id" rootPath="batch_id"/>
        <a:model-query model="cont.sys_date" rootPath="sysdate"/>
        <a:model-query model="gl.gl_segment_description" rootPath="segment_descs"/>
        <a:model-query model="expm.get_company_currency_code" rootPath="company_currency_code"/>
        <a:model-query model="expm.gld_get_default_period_name" rootPath="default_period_name"/>
    </a:init-procedure>
    <a:view>
        <a:link id="exp_report_reject_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_reject.screen"/>
        <a:link id="gld_get_period_name_link_3" model="expm.gld_get_period_name" modelaction="query"/>
        <a:link id="get_exchange_rate_link_13" model="expm.get_exchange_rate" modelaction="query"/>
        <a:link id="get_exchange_rate_type_code_link" model="gld.get_exchange_rate_type_code" modelaction="query"/>
        <a:link id="get_accounts_result_link" model="expm.exp_report_accounts_query" modelaction="query"/>
        <a:link id="exp_report_accounts_create_control_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_accounts_create_control.svc"/>
        <a:link id="exp_report_audit_control_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_audit_control.svc"/>
        <a:link id="exp_report_query_history_link_2" url="${/request/@context_path}/modules/exp/public/exp_report_query_history.screen"/>
        <a:link id="exp_expense_report_audit_log_link_1" url="${/request/@context_path}/modules/expm/public/exp_expense_report_audit_log.screen"/>
        <a:link id="exp_report_accounts_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_accounts.screen"/>
        <a:link id="exp_report_audit_account_tmp_control_link_1" url="${/request/@context_path}/modules/expm/public/exp_report_audit_account_tmp_control.svc"/>
        <a:link id="exp_report_readonly_wfl_link_5" url="${/request/@context_path}/modules/expm/public/exp_report_readonly_wfl_edit_for_expense_journal_adjust.screen"/>
        <a:link id="exp_report_audit_save_link" model="expm.EXP5140.exp_report_audit_account_query_control" modelaction="batch_update"/>
        <script><![CDATA[
            var flag = 0;
            
            function doQuery() {
                $('audit_result_ds').query();
            }
            
            function audit_result_load() {
                var record = $('audit_result_ds').getAt(0);
                if (record) {
                    var headerId = record.get('exp_report_header_id');
            
                    $('audit_account_result').setQueryParameter('header_id', headerId);
                    $('audit_account_result').query();
            
                } else {
                    $('audit_account_result').setQueryParameter('header_id', '');
                    $('audit_account_result').query();
                }
            }
            
            function journalQueryFun() {
                if ($('audit_result_ds').getCurrentRecord()) {
                    var curRecord = $('audit_result_ds').getCurrentRecord();
                    var headerId = curRecord.get('exp_report_header_id');
                    if (headerId) {
                        $('audit_account_result').setQueryParameter('header_id', headerId);
                        $('audit_account_result').query();
                    }
                }
            }
            
            function selectChange(grid, rowNum, record) {
                $('audit_account_result').setQueryParameter('header_id', record.get('exp_report_header_id'));
                $('audit_account_result').query();
            }
            
            function seeDetail(value, record, name) {
                var header_id = record.get('exp_report_header_id');
                return '<a href="javascript:detailNewWindow(' + header_id + ');">' + value + '</a>';
            }
            
            function detailNewWindow(header_id) {
                var url = /*${/request/@context_path}/modules/expm/exp_report_readonly_wfl.screen*/
                $('exp_report_readonly_wfl_link_5').getUrl() + '?exp_report_header_id=' + header_id + '&canUploadFlag=false';
                //window.open(url);
                new Aurora.Window({
                    url: url,
                    title: '${l:EXP_REPORT_QUERY_DETAIL}',
                    id: 'exp_report_detail',
                    fullScreen:true
                });
            }
            
            function doCreate() {
                var records = $('audit_result_ds').getJsonData(true);
                if (records.length < 1) {
                    Aurora.showWarningMessage('', '${l:PROMPT.PLEASE_SELECT}', null, 200, 100);
                    return;
                }
                var param = new Object();
                var datas = [];
                for (var i = 0,
                    l = records.length;i < l;i++) {
                    var data = records[i];
                    data['batch_id'] = '${/model/batch_id/record/@batch_id}';
                    datas.push(data);
                }
                param['details'] = datas;
                param['batch_id'] = '${/model/batch_id/record/@batch_id}';
                Aurora.request({
                    url: /*${/request/@context_path}/modules/expm/exp_report_audit_account_tmp_control.svc*/
                    $('exp_report_audit_account_tmp_control_link_1').getUrl(),
                    para: param,
                    success: createSuccess,
                    scope: this
                });
            }
            
            function refresh() {
                flag = 0;
                Aurora.showMessage('${l:PROMPT}', '${l:EXP_REPORT_ACCOUNTS.PROMPT}', function() {
                    if (doQuery && typeof(doQuery) == 'function') {
                        doQuery();
                    }
                });
            }
            
            
            function errorRefresh() {
                flag = 0;
            }
            
            function createSuccess() {
                Aurora.request({
                    url: /*${/request/@context_path}/modules/expm/exp_report_audit_account_tmp_control.svc*/
                    $('get_accounts_result_link').getUrl(),
                    para: {
                        batch_id: '${/model/batch_id/record/@batch_id}'
                    },
                    success: checkPeriodName,
                    scope: this
                });
            }
            
            function checkPeriodName(args) {
                var records = args.result.record;
                var period_name = $('input_date_ds').getAt(0).get('period_name');
                if (period_name) {
                    if (records.length) {
                        for (var i = 0,
                            l = records.length;i < l;i++) {
                            checkChangeRateRecord(records, records[i], records.length);
                        }
                    } else {
                        checkChangeRateRecord(records, records, records.length);
                    }
                } else {
                    Aurora.showWarningMessage('', '${l:EXP_REPORT_ACCOUNTS.CHECK1}', null, 200, 100);
                }
            
            }
            
            function checkChangeRateRecord(rs, record, length) {
            
                var f_cur_code = '${/model/company_currency_code/record/@company_currency_code}';
                var cur_code = record.currency_code;
                if (f_cur_code == cur_code) {
                    flagIncrease(rs, length);
                } else {
                    var from_currency = f_cur_code;
                    var to_currency = cur_code;
                    var exchange_rate_type = record.exchange_rate_type;
                    var exchange_date = $('input_date_ds').getAt(0).get('journal_date');
                    var exchange_period_name = $('input_date_ds').getAt(0).get('period_name');
                    exchange_date = Aurora.formatDate(exchange_date);
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/expm.get_exchange_rate/query*/
                        $('get_exchange_rate_link_13').getUrl(),
                        para: {
                            "from_currency": from_currency,
                            "to_currency": to_currency,
                            "exchange_rate_type": exchange_rate_type,
                            "exchange_date": exchange_date,
                            "exchange_period_name": exchange_period_name
                        },
                        success: function(args) {
                            var pluscols = args.result.record;
                            if (pluscols.length) {
                                if (pluscols[0].exchange_rate) {
                                    flagIncrease(rs, length);
                                } else {
                                    if (record.exchange_rate_type_code != 'MANUAL') {
                                        flag = 0;
                                        Aurora.showWarningMessage('', to_currency + '${l:BGT_JOURNAL_ADD_SELECT.CHECK1}', null, 200, 100);
                                    }
                                }
                            } else {
                                if (pluscols.exchange_rate) {
                                    flagIncrease(rs, length);
                                } else {
                                    if (record.exchange_rate_type_code != 'MANUAL') {
                                        flag = 0;
                                        Aurora.showWarningMessage('', to_currency + '${l:BGT_JOURNAL_ADD_SELECT.CHECK1}', null, 200, 100);
                                    }
                                }
                            }
            
                        },
                        scope: this
                    });
                }
            }
            
            function flagIncrease(rs, args) {
                flag++;
                if (flag == args || (args == null && flag == 1)) {
                    createFunction(rs);
                }
            }
            
            function createFunction(records) {
                if ($('input_date_ds').validate()) {
                    var journal_date = $('input_date_ds').getAt(0).get('journal_date');
                    journal_date = Aurora.formatDate(journal_date);
                    var period_name = $('input_date_ds').getAt(0).get('period_name');
                    var param = new Object();
                    var datas = [];
                    for (var i = 0,
                        l = records.length;i < l;i++) {
                        var data = records[i].data;
                        datas.push(data);
                    }
                    param['details'] = datas;
                    param['journal_date'] = journal_date;
                    param['batch_id'] = '${/model/batch_id/record/@batch_id}';
                    Aurora.request({
                        url: /*${/request/@context_path}/modules/expm/exp_report_accounts_create_control.svc*/
                        $('exp_report_accounts_create_control_link_1').getUrl(),
                        para: param,
                        success: refresh,
                        error: errorRefresh,
                        failure: errorRefresh,
                        scope: this
                    });
                }
            }
            
            function exchangeRateModify() {
                //    			
                var records = $('audit_result_ds').getJsonData(true);
                if (records.length < 1) {
                    Aurora.showWarningMessage('', '${l:PROMPT.PLEASE_SELECT}', null, 200, 100);
                    return;
                }
                var param = new Object();
                var datas = [];
                for (var i = 0,
                    l = records.length;i < l;i++) {
                    var data = records[i];
                    data['batch_id'] = '${/model/batch_id/record/@batch_id}';
                    datas.push(data);
                }
                param['details'] = datas;
                param['batch_id'] = '${/model/batch_id/record/@batch_id}';
                Aurora.request({
                    url: /*${/request/@context_path}/modules/expm/exp_report_audit_account_tmp_control.svc*/
                    $('exp_report_audit_account_tmp_control_link_1').getUrl(),
                    para: param,
                    success: modifySuccess,
                    scope: this
                });
            }
            
            function modifySuccess() {
                var journal_date = Aurora.formatDate($('input_date_ds').getAt(0).get('journal_date'));
                var url = /*${/request/@context_path}/modules/expm/exp_report_accounts.screen*/
                $('exp_report_accounts_link_1').getUrl() + '?batch_id=' + '${/model/batch_id/record/@batch_id}' + '&journal_date=' + journal_date;
                //window.open(url,'','fullscreen=no,resizable=yes,width=530,height=515');
                new Aurora.Window({
                    id: 'exp_report_accounts_screen',
                    url: url,
                    title: '',
                    height: 515,
                    width: 530
                });
            }
            
            function dateUpdate() {
                var journal_date = $('input_date_ds').getAt(0).get('journal_date');
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/expm.gld_get_period_name/query*/
                    $('gld_get_period_name_link_3').getUrl(),
                    para: {
                        p_date: journal_date
                    },
                    success: getPeriodName,
                    scope: this
                });
            }
            
            function getPeriodName(args) {
                var record = args.result.record;
                var red = $('input_date_ds').getAt(0);
                var period_name = '';
                if (record.length) {
                    period_name = record[0].period_name;
                } else {
                    period_name = record.period_name;
                }
                red.set('period_name', period_name);
                if (!period_name) {
                    Aurora.showWarningMessage('', '${l:EXP_REPORT_ACCOUNTS.CHECK1}', null, 200, 100);
                }
            }
            
            function seeLog() {
                var url = /*${/request/@context_path}/modules/expm/exp_expense_report_audit_log.screen*/
                $('exp_expense_report_audit_log_link_1').getUrl() + '?batch_id=' + '${/model/batch_id/record/@batch_id}';
                //window.open(url);
                  new Aurora.Window({
                    url: url,
                    title: '${l:LOGS_MESSAGE}',
                    id: 'exp_expense_report_audit_log_screen',
                    fullScreen:true
                });
            }
            
            function doHistory() {
                var myRecords = $('audit_result_ds').getSelected();
                if (myRecords.length != 1) {
                    Aurora.showWarningMessage('', '${l:PROMPT.PLEASE_SELECT_ONE}', null, 200, 100);
                    return;
                }
                var head_id = myRecords[0].get('exp_report_header_id');
                if (head_id) {
                    var url = /*${/request/@context_path}/modules/exp/exp_report_query_history.screen*/
                    $('exp_report_query_history_link_2').getUrl() + '?head_id=' + head_id;
                   // window.open(url);
                    new Aurora.Window({
                    url: url,
                    title: '${l:REC_REQUISITION_HISTORY}',
                    id: 'exp_report_history_window',
                    fullScreen:true
                });
                }
            }
            
            
            function doFlag() {
                var return_msg = '';
                var myRecords = $('audit_result_ds').getSelected();
                if (myRecords.length < 1) {
                    Aurora.showWarningMessage('', '${l:PROMPT.PLEASE_SELECT}', null, 200, 100);
                    return;
                }
                var cash_flow_code_null_flag_msg='';
                for (var i = 0;i < myRecords.length;i++) {
                    var cash_flow_code_null_flag = myRecords[i].get('cash_flow_code_null_flag');
                    if (cash_flow_code_null_flag == 'Y') {
                        if (cash_flow_code_null_flag_msg == '') {
                            cash_flow_code_null_flag_msg = myRecords[i].get('exp_report_number');
                        } else {         
                            cash_flow_code_null_flag_msg = cash_flow_code_null_flag_msg + '&nbsp;,&nbsp;' + myRecords[i].get('exp_report_number');
                        }
                    }
                }
            
                if(cash_flow_code_null_flag_msg != ''){
                      cash_flow_code_null_flag_msg = '<span style="word-wrap:break-word;overflow:hidden;"><pre>报销单' + cash_flow_code_null_flag_msg + '未填写现金流量项，请返回修改！</pre></span>';
                      Aurora.showWarningMessage('', cash_flow_code_null_flag_msg, null, 400, 200);
                       return;    
                }
               
            
                var datas = [];
                var journal_date = $('input_date_ds').getCurrentRecord().get('journal_date');
                for (var i = 0,l = myRecords.length;i < l;i++) {
                    myRecords[i].journal_date = journal_date;
                    var data = myRecords[i].data;
                    datas.push(data);
                }
                var params = new Object();
                params['details'] = datas;
                Aurora.request({
                    url: 'exp_expense_report_audit.svc',
                    para: params,
                    success: function(args) {
                        var records = args.result.details.record;
                          for (var i = 0;i < records.length;i++) {
                            var check_flag = records[i]['check_flag'];
                            if (check_flag == 'N') {
                                if (return_msg == '') {
                                    return_msg = records[i]['exp_report_number'];
                                } else {
                                    return_msg = return_msg + '&nbsp;,&nbsp;' + records[i]['exp_report_number'];
                                }
                            }
                        }
                        if (return_msg != '') {
                            // return_msg = '<span style="word-wrap:break-word;overflow:hidden;"><pre>报销单' + return_msg + '存在未核销的借款,是否审核通过？</pre></span>';
                            // Aurora.showConfirm('${l:PROMPT}', return_msg, function() {
                                Aurora.request({
                                    url: /*${/request/@context_path}/modules/expm/exp_report_audit_control.svc*/
                                    $('exp_report_audit_control_link_1').getUrl(),
                                    para: params,
                                    success: function() {
                                        doQuery();
                                    },
                                    scope: this
                                });
                            // }, null, 400, 200);
                        } else {
                            Aurora.request({
                                url: /*${/request/@context_path}/modules/expm/exp_report_audit_control.svc*/
                                $('exp_report_audit_control_link_1').getUrl(),
                                para: params,
                                success: function() {
                                    doQuery();
                                },
                                scope: this
                            });
                        }
                    },
                    scope: this
                });
            }
            
            function doReject() {
                var myRecords = $('audit_result_ds').getSelected();
                if (myRecords.length < 1) {
                    Aurora.showWarningMessage('', '${l:PROMPT.PLEASE_SELECT}', null, 200, 100);
                    return;
                }
                new Aurora.Window({
                    id: 'exp_report_reject_window',
                    url: $('exp_report_reject_link_1').getUrl(),
                    title: '',
                    height: 240,
                    width: 640
                });
            }
            
            function reset() {
                $('audit_query_ds').reset();
            }
            
            //子页面调用 刷新记录
            function refreshLine(){
                $('audit_result_ds').query();
            }
            
            // function financeSaveFunction() {
                // // $('audit_account_result').submit();
                // var records = $('audit_account_result').getJsonData(true);
                // for(var i=0;i<records.length;i++){
                    // records[i]._status = 'update';
                // }
                // Aurora.request({
                    // url: $('exp_report_audit_save_link').getUrl(),
                    // para: records,
                    // success: function() {
                        // refreshLine();
                    // },
                    // scope: this
                // });
            // }
            
             function financeSaveFunction(){
                $('audit_account_result').submit();
            }
            
        ]]></script>
        <a:dataSets>
            <a:dataSet id="exp_report_type_ds">
                <a:datas dataSource="/model/exp_report_type_list"/>
            </a:dataSet>
            <a:dataSet id="currency_ds">
                <a:datas dataSource="/model/currencylist"/>
            </a:dataSet>
            <a:dataSet id="input_date_ds" autoCreate="true">
                <a:fields>
                    <a:field name="journal_date" defaultValue="${/model/sysdate/record/@now}" prompt="EXP_REPORT_ACCOUNTS.JOURNAL_DATE" required="true"/>
                    <a:field name="period_name" defaultValue="${/model/default_period_name/record/@period_name}" readOnly="true"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="dateUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="audit_query_ds" model="expm.exp_expense_report_audit_query">
                <a:fields>
                    <a:field name="exp_reprot_type_display" autoComplete="true" autoCompleteField="description" lovGridHeight="320" lovHeight="450" lovService="expm.exp_expense_report_types_lov" lovWidth="500" title="EXP_REPORT_HEADERS.EXP_REPORT_TYPE_ID">
                        <a:mapping>
                            <a:map from="expense_report_type_id" to="exp_report_type_id"/>
                            <a:map from="description" to="exp_reprot_type_display"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="exp_report_type_id"/>
                    <a:field name="employee_display" autoComplete="true" autoCompleteField="name_code" lovGridHeight="320" lovHeight="450" lovService="exp.exp_company_employees_v" lovWidth="500" title="EXP_EMPLOYEES.QUERY">
                        <a:mapping>
                            <a:map from="name_code" to="employee_display"/>
                            <a:map from="employee_id" to="employee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="employee_id"/>
                    <a:field name="currency_display" displayField="currency_name" options="currency_ds" returnField="currency_code" valueField="currency_code"/>
                    <a:field name="currency_code"/>
                    <a:field name="chd_company_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="audit_result_ds" autoQuery="true" model="expm.exp_expense_report_audit_query" queryDataSet="audit_query_ds" selectable="true">
                <a:fields>
                    <a:field name="amortization_flag" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="je_creation_status" checkedValue="Y" defaultValue="Y" uncheckedValue="N"/>
                    <a:field name="exp_report_number"/>
                    <a:field name="cash_flow_code_null_flag" prompt="EXP_REPORT.CASH_FLOW_NULL"/>
                </a:fields>
                <a:events>
                    <a:event name="load" handler="audit_result_load"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="audit_account_result" model="expm.EXP5140.exp_report_audit_account_query_control" selectable="true" submitUrl="${/request/@context_path}/autocrud/expm.EXP5140.exp_report_audit_account_query_control/batch_update">
                <a:fields>
                    <a:field name="exp_report_je_line_id"/>
                    <a:field name="responsibility_center_code" lovGridHeight="300" lovHeight="450" lovService="expm.exp_expense_journal_adjust_center_lov" lovWidth="500" prompt="FND_RESPONSIBILITY_CENTERS.RESPONSIBILITY_CENTER_CODE" required="true" title=" ">
                        <a:mapping>
                            <a:map from="center_code" to="responsibility_center_code"/>
                            <a:map from="center_id" to="responsibility_center_id"/>
                            <a:map from="center_id_display" to="responsibility_center_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="responsibility_center_id"/>
                    <a:field name="responsibility_center_name"/>
                    <a:field name="account_code" lovGridHeight="300" lovHeight="450" lovService="expm.exp_expense_journal_adjust_account_lov" lovWidth="500" prompt="GLD_ACCOUNTS.ACCOUNT_CODE" required="true" title=" ">
                        <a:mapping>
                            <a:map from="account_code" to="account_code"/>
                            <a:map from="account_desc" to="account_desc"/>
                            <a:map from="account_id" to="account_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="account_id"/>
                    <a:field name="account_segment1" prompt="${/model/segment_descs/record/@segment1_desc}"/>
                    <a:field name="account_segment2" prompt="${/model/segment_descs/record/@segment2_desc}"/>
                    <a:field name="account_segment3" prompt="${/model/segment_descs/record/@segment3_desc}"/>
                    <a:field name="account_segment4" prompt="${/model/segment_descs/record/@segment4_desc}"/>
                    <a:field name="account_segment5" prompt="${/model/segment_descs/record/@segment5_desc}"/>
                    <a:field name="account_segment6" prompt="${/model/segment_descs/record/@segment6_desc}"/>
                    <a:field name="account_segment7" prompt="${/model/segment_descs/record/@segment7_desc}"/>
                    <a:field name="account_segment8" prompt="${/model/segment_descs/record/@segment8_desc}"/>
                    <a:field name="account_segment9" prompt="${/model/segment_descs/record/@segment9_desc}"/>
                    <a:field name="account_segment10" prompt="${/model/segment_descs/record/@segment10_desc}"/>
                    <a:field name="account_segment11" prompt="${/model/segment_descs/record/@segment11_desc}"/>
                    <a:field name="account_segment12" prompt="${/model/segment_descs/record/@segment12_desc}"/>
                    <a:field name="account_segment13" prompt="${/model/segment_descs/record/@segment13_desc}"/>
                    <a:field name="account_segment14" prompt="${/model/segment_descs/record/@segment14_desc}"/>
                    <a:field name="account_segment15" prompt="${/model/segment_descs/record/@segment15_desc}"/>
                    <a:field name="account_segment16" prompt="${/model/segment_descs/record/@segment16_desc}"/>
                    <a:field name="account_segment17" prompt="${/model/segment_descs/record/@segment17_desc}"/>
                    <a:field name="account_segment18" prompt="${/model/segment_descs/record/@segment18_desc}"/>
                    <a:field name="account_segment19" prompt="${/model/segment_descs/record/@segment19_desc}"/>
                    <a:field name="account_segment20" prompt="${/model/segment_descs/record/@segment20_desc}"/>
                </a:fields>
            </a:dataSet>
        </a:dataSets>
        <script><![CDATA[
        function loadInit() {
            
        }
        ]]></script>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton click="reset" text="HAP_RESET" width="80"/>
                <!-- <a:toolbarButton click="doCreate" text="PROMPT.CREATE_JE" width="80"/> -->
                <a:toolbarButton click="doFlag" text="PROMPT.AUDIT_FLAG" width="80"/>
                <a:toolbarButton click="doReject" text="PROMPT.REJECT" width="80"/>
                <!-- <a:toolbarButton click="exchangeRateModify" text="EXP_EXPENSE_REPORT.EXCHANGE_RATE_MODIFY" width="80"/> -->
                <!-- <a:toolbarButton click="seeLog" text="PROMPT.VIEW_LOG" width="80"/> -->
                <a:toolbarButton click="doHistory" text="PROMPT.HISTORY" width="80"/>
                <!-- <a:toolbarButton click="financeSaveFunction" icon="${/request/@context_path}/images/save.gif" text="PROMPT.SAVE"/> -->
            </a:screenTopToolbar>
            <a:queryForm bindTarget="audit_query_ds" resultTarget="audit_result_ds" style="width:100%;border:none">
                <a:formToolBar>
                    <a:textField name="exp_report_number" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.EXP_REPORT_NUMBER"/>
                    <a:lov name="exp_reprot_type_display" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.EXP_REPORT_TYPE_ID"/>
                    <a:lov name="employee_display" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.EMPLOYEE_NAME"/>
                    <a:checkBox name="chd_company_flag" bindTarget="audit_query_ds" prompt="包含子公司"/>
                </a:formToolBar>
                <a:formBody column="4">
                    <a:comboBox name="currency_display" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.CURRENCY_CODE"/>
                    <a:datePicker name="report_date_f" bindTarget="audit_query_ds" prompt="EXP_EXPENSE_REPORT_AUDIT.REPORT_DATE_F"/>
                    <a:datePicker name="report_date_t" bindTarget="audit_query_ds" prompt="EXP_EXPENSE_REPORT_AUDIT.REPORT_DATE_T"/>
                    <a:numberField name="requisition_amount_from" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.REQUISITION_AMOUNT_FROM"/>
                    <a:numberField name="requisition_amount_to" bindTarget="audit_query_ds" prompt="EXP_REPORT_HEADERS.REQUISITION_AMOUNT_TO"/>
                </a:formBody>
            </a:queryForm>
            <a:form id="exp_report_aduit_head_form" column="1" title="EXP_REPORT_ACCOUNTS.JOURNAL_DATE">
                <a:box column="4" style="width:100%;">
                    <a:datePicker name="journal_date" bindTarget="input_date_ds" renderer="Aurora.formatDate" width="120"/>
                </a:box>
            </a:form>
            <a:grid id="audit_result_ds_grid" bindTarget="audit_result_ds" marginHeight="400" navBar="true">
                <a:columns>
                    <a:column name="company_name" align="left" prompt="ACP_INVOICE_HEADERS.COMPANY_ID" width="100"/>
                    <a:column name="exp_report_number" align="center" prompt="EXP_REPORT_HEADERS.EXP_REPORT_NUMBER" renderer="seeDetail" width="120"/>
                    <!-- <a:column name="amortization_flag" align="left" editor="edt_cbx" prompt="PROMPT.AMORTIZATION_FLAG" width="55"/> -->
                    <a:column name="exp_report_type_desc" align="left" prompt="EXP_REPORT_HEADERS.EXP_REPORT_TYPE_ID" width="100"/>
                    <a:column name="employee_name" align="left" prompt="EXP_REPORT_HEADERS.EMPLOYEE_ID" width="60"/>
                    <a:column name="currency_name" align="left" prompt="EXP_REPORT_HEADERS.CURRENCY_CODE" width="60"/>
                    <a:column name="report_amount" align="right" prompt="EXP_REPORT_LINES.REPORT_AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="report_date" align="center" prompt="EXP_REPORT_HEADERS.REPORT_DATE" width="80"/>
                    <a:column name="report_status_desc" align="center" prompt="EXP_REPORT_HEADERS.REPORT_STATUS" width="80"/>
                    <a:column name="description" align="left" prompt="EXP_REPORT_HEADERS.DESCRIPTION" width="120"/>
                    <a:column name="je_creation_status" align="center" editor="" prompt="PROMPT.CREATE_JE" width="60"/>
                </a:columns>
                <a:editors>
                    <a:checkBox id="edt_cbx"/>
                </a:editors>
                <a:events>
                    <a:event name="rowclick" handler="selectChange"/>
                </a:events>
            </a:grid>
            <a:grid id="audit_account_result_grid" bindTarget="audit_account_result" height="230" navBar="true">
                <a:toolBar>
                    <a:button click="financeSaveFunction" icon="${/request/@context_path}/images/save.gif" text="PROMPT.SAVE"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="description" align="left" editor="textfield_finance" prompt="CSH_WRITE_OFF_ACCOUNTS.DESCRIPTION" width="120"/>
                    <a:column name="period_name" align="center" prompt="CSH_WRITE_OFF_ACCOUNTS.PERIOD_NAME" width="100"/>
                    <a:column name="company_short_name" align="left" prompt="CSH_WRITE_OFF_ACCOUNTS.COMPANY_ID" width="100"/>
                    <a:column name="responsibility_center_code" align="center" editor="lov_finance" prompt="成本中心代码" width="80"/>
                    <a:column name="responsibility_center_name" align="left" prompt="CSH_WRITE_OFF_ACCOUNTS.RESPONSIBILITY_CENTER_ID" width="120"/>
                    <a:column name="account_code" align="center" editor="lov_finance" prompt="CSH_WRITE_OFF_ACCOUNTS.ACCOUNT_ID" width="100"/>
                    <a:column name="account_desc" align="left" prompt="CSH_WRITE_OFF_ACCOUNTS.ACCOUNT_NAME" width="120"/>
                    <a:column name="entered_amount_dr" align="right" prompt="CSH_WRITE_OFF_ACCOUNTS.ENTERED_AMOUNT_DR" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="entered_amount_cr" align="right" prompt="CSH_WRITE_OFF_ACCOUNTS.ENTERED_AMOUNT_CR" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="functional_amount_dr" align="right" prompt="CSH_WRITE_OFF_ACCOUNTS.FUNCTIONAL_AMOUNT_DR" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="functional_amount_cr" align="right" prompt="CSH_WRITE_OFF_ACCOUNTS.FUNCTIONAL_AMOUNT_CR" renderer="Aurora.formatMoney" width="100"/>
                    <a:column name="account_segment1" align="center"/>
                    <a:column name="account_segment2" align="center"/>
                    <a:column name="account_segment3" align="center" prompt="核算科目"/>
                    <a:column name="account_segment4" align="center"/>
                    <a:column name="account_segment4_desc" align="center" prompt="承诺项目描述" width="100"/>
                    <a:column name="account_segment5" align="center"/>
                    <a:column name="account_segment6" align="center"/>
                    <a:column name="account_segment7" align="center"/>
                    <a:column name="account_segment8" align="center"/>
                    <a:column name="account_segment9" align="center"/>
                    <a:column name="account_segment10" align="center"/>
                    <a:column name="account_segment11" align="center"/>
                    <a:column name="account_segment12" align="center" prompt="基金中心"/>
                    <a:column name="account_segment13" align="center" prompt="渠道"/>
                    <a:column name="account_segment14" align="center" prompt="项目"/>
                    <a:column name="account_segment15" align="center" prompt="客商辅助段"/>
                    <!--<a:column name="account_segment16" align="center"/>
                    <a:column name="account_segment17" align="center"/>
                    <a:column name="account_segment18" align="center"/>
                    <a:column name="account_segment19" align="center"/>
                    <a:column name="account_segment20" align="center"/> -->
                </a:columns>
                <a:editors>
                    <a:textField id="textfield_finance"/>
                    <a:lov id="lov_finance"/>
                </a:editors>
            </a:grid>
        </a:screenBody>
        <script purpose="auto_resize"><![CDATA[
            function expReqDupInitSize() {
                //描述宽度
            　　    var labelWidth = 75;
            　　    //标签宽度,5 = 3padding + 2border-spacing
            　　    var tagWidth = 150 + 5;
            　　    //页面宽度、高度
            　　    var vw = $A.getViewportWidth();
            　　    var vh = $A.getViewportHeight();
            　　    //留白宽度
            　　    var marginWidth = 35;
            　　    //自适应宽度
            　　    var autoWidth = vw - marginWidth;
            　　    //Form内部宽度，-2border
            　　    var formInnerWidth = autoWidth - 2;
            　　    //所占列数
            　　    var colSpan = 4;
            　　    //设置组件的自适应宽度
            　　    Ext.get('exp_report_aduit_head_form').setWidth(autoWidth + 4);       
            	   $('audit_result_ds_grid').setWidth(autoWidth);
            	   $('audit_account_result_grid').setWidth(autoWidth);
            }
            //Ext.fly(window).on('resize', expReqDupInitSize);
            expReqDupInitSize();
        ]]></script>
    </a:view>
</a:screen>
