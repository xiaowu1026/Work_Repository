<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: zhangyi2652 $
    $Date: 2010/11/26 05:56:20 $
    $Revision: 1.2 $
    $Purpose: 申付查询页面 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query model="acp.com_flag_model" rootPath="com_flag"/>
        <a:model-query model="acp.mes_flag_model" rootPath="mes_flag"/>
    </a:init-procedure>
    <a:view>
        <a:link id="acp_req_maintain_submit_link_1" model="acp.acp_req_maintain_submit" modelaction="batch_update"/>
        <a:link id="exp_report_readonly_wfl_link_5" url="${/request/@context_path}/modules/expm/public/exp_report_readonly_wfl.screen"/>
        <a:link id="acp_acp_req_maintain_update_link_1" url="${/request/@context_path}/modules/acp/public/acp_acp_req_maintain_update.screen"/>
        <a:link id="acp_req_maintain_link" url="${/request/@context_path}/modules/acp/public/acp_req_maintain.screen"/>
        <a:link id="acp_acp_req_maintain_create_link" url="${/request/@context_path}/modules/acp/public/acp_acp_req_maintain_create.screen"/>
        <script><![CDATA[

            function initFun() {
                if ('${/model/com_flag/record/@judge_fg}' == 'N') {
                    Aurora.showMessage('${l:PROMPT}', '${/model/mes_flag/record/@message}');
                    $('del').disable();
                    $('newReq').disable();
                    $('submit').disable();
                }
            }
            
            function queryRequisitionquery() {
                $('acp_result_ds').query();
            }
            
            function newReq() {
                Aurora.post( /*acp_acp_req_maintain_create.screen*/
                $('acp_acp_req_maintain_create_link').getUrl());
            }
            
            function newWindowAssignComFunction(url) {
                new Aurora.Window({
                    title: '',
                    id: 'acp_acp_req_maintain_screen',
                    fullScreen: true,
                    url: url,
                    width: 960,
                    height: 600
                });
            }
            
            function requestNoRenderFunction(value, record, name) {
            
                // var url = '<a href="javascript:newWindowAssignComFunction(' + record.get('acp_requisition_header_id') + ')">' + value + '</a>';
                // return url;
                var url= $('acp_req_maintain_link').getUrl() + '?acp_requisition_header_id='+record.get('acp_requisition_header_id');
                return '<a href="javascript:newWindowAssignComFunction(\''+url+'\');">'+value+'</a>';
            }
            
            function expRepNumRenderer(value, record, name) {
                if (value == null) {
                    return '';
                } else {
                    var header_id = record.get('exp_report_header_id');
                    return '<a href="javascript:detailNewWindow(' + header_id + ');">' + value + '</a>';
                }
            }
            
            function detailNewWindow(header_id) {
                new Aurora.Window({
                    title: '',
                    id: 'exp_report_maintain_screen',
                    fullScreen: true,
                    url: /*${/request/@context_path}/modules/expm/exp_report_readonly_wfl.screen*/
                    $('exp_report_readonly_wfl_link_5').getUrl() + '?exp_report_header_id=' + header_id + '&canUploadFlag=false',
                    width: 950,
                    height: 600
                });
            }
            
            function submit() {
            
                Aurora.showConfirm('${l:EXIT_SYSTEM}', '${l:DOCUMNET_SUBMIT_CONFIRM}', function(cmp) {
                    var param = $('acp_result_ds').getJsonData(true);
            
                    Aurora.request({
                        url: /*${/request/@context_path}/autocrud/acp.acp_req_maintain_submit/batch_update*/
                        $('acp_req_maintain_submit_link_1').getUrl(),
                        para: param,
                        success: function() {
                            $('acp_result_ds').query();
                        },
                        scope: this
                    });
                    cmp.close();
                }, null, null, 80);
            
            
            }
            
            function resetFunction() {
                var dataSet = $('acp_query_ds');
                var record = dataSet.getCurrentRecord();
                dataSet.reset();
                record.getField('partner_name').setLovService('');
                record.getField('partner_name').setReadOnly(true);
            }            
            function dateValidator1(record, name, value) { //日期校验方法
              
                if (name == 'requisition_date_f' || name == 'requisition_date_t') {
                    var start_date = record.get('requisition_date_f');
                    var end_date = record.get('requisition_date_t');                
                    if ( !! end_date) { //由于结束日期非必填，只有在结束日期填了才进行比较
                        if (!compareDate(start_date, end_date)) {                       
                            return '${l:START_GREATER_THAN_END}'; //校验不通过返回字符串
                        }
                    }
                    return true; //校验通过返回true
                }              
                return true;
            }
            
            function compareDate(start, end) {
                if (start > end) {
                    return false;
                }
                return true;
            }
            
            function onUpdate(ds, record, name, value, oldvalue) {
                if (name == 'requisition_date_f' || name == 'requisition_date_t') {
                    record.validate((name == 'requisition_date_f') ? 'requisition_date_t' : 'requisition_date_f');
                }
                if (name == 'partner_category') {
                    if (value != null && value != '') {
                        record.getField('partner_name').setLovPara('partner_category', value);
                        record.getField('partner_name').setLovService('acp.acp_partner_name');
                        record.getField('partner_name').setReadOnly(false);
                    } else {
                        record.getField('partner_name').setLovService('');
                        record.getField('partner_name').setReadOnly(true);
                    }
                    record.set('partner_name', '');
                    record.set('partner_id', '');
                }
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="com_flag_ds">
                <a:datas dataSource="/model/com_flag"/>
            </a:dataSet>
            <a:dataSet id="mes_flag_ds">
                <a:datas dataSource="/model/mes_flag"/>
            </a:dataSet>
            <a:dataSet id="payment_object_ds" lookupcode="PAYMENT_OBJECT"/>
            <a:dataSet id="partner_name_ds" model="acp.acp_partner_name"/>
            <a:dataSet id="pay_req_type" loadData="true" model="acp.acp_pay_req_type">
                <a:fields>
                    <a:field name="description"/>
                    <a:field name="id"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="gld_set_of_currency_list_ds" loadData="true" model="exp.exp_currency_code"/>
            <a:dataSet id="gld_set_of_status_query_list_ds" loadData="true" lookupcode="PAYMENT_REQUISITION_STATUS"/>
            <a:dataSet id="acp_query_ds" model="acp.acp_requisition_query">
                <a:fields>
                    <a:field name="applicant" autoComplete="true" autoCompleteField="name_code" lovGridHeight="300" lovHeight="450" lovService="acp.acp_applicant" lovWidth="500" title="ACP_REQUISITION.APPLICANT_ONE">
                        <a:mapping>
                            <a:map from="name_code" to="applicant"/>
                            <a:map from="employee_id" to="employee_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="currency_name" displayField="currency_name" options="gld_set_of_currency_list_ds" returnField="currency_code" valueField="currency_code"/>
                    <a:field name="currency_code"/>
                    <a:field name="status_name" displayField="code_value_name" options="gld_set_of_status_query_list_ds" returnField="status" valueField="code_value"/>
                    <a:field name="status"/>
                    <a:field name="partner_category_display" displayfield="code_value_name" options="payment_object_ds" returnfield="partner_category" valuefield="code_value"/>
                    <a:field name="partner_name" autoComplete="true" autoCompleteField="name_code" lovGridHeight="300" lovHeight="450" lovWidth="500" readOnly="true" title="CSH_TRANSACTION_LINES.PARTNER_ID_ONE">
                        <a:mapping>
                            <a:map from="name_code" to="partner_name"/>
                            <a:map from="id" to="partner_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="partner_id"/>
                    <a:field name="csh_type" displayfield="description" options="pay_req_type" returnfield="csh_type_id" valuefield="type_id"/>
                    <a:field name="csh_type_id"/>
                    <a:field name="requisition_date_f" validator="dateValidator1"/>
                    <a:field name="requisition_date_t" validator="dateValidator1"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="onUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="acp_result_ds" autoPageSize="true" autoQuery="true" fetchAll="false" model="acp.acp_requisition_maintain_query" queryDataSet="acp_query_ds" selectable="true" submitUrl="${/request/@context_path}/autocrud/db.acp_requisition_pkg.delete_payment_requisition/batch_update"/>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar id="exp_rep_ro_travel_top_bar">
                <a:screenTitle/>
                <a:toolbarButton click="resetFunction" text="HAP_RESET" width="80"/>
                <a:gridButton bind="result_grid" type="delete" width="80"/>
            </a:screenTopToolbar>
            <a:queryForm id="acp5010_req_update_head_form" column="4" resultTarget="acp_result_ds" style="width:100%;border:none">
                <a:formToolBar>
                    <a:textField name="requisition_number" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.REQUISITION_NUMBER">
                        <a:events>
                            <a:event name="enterdown" handler="queryRequisitionquery"/>
                        </a:events>
                    </a:textField>
                    <a:comboBox name="csh_type" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.ACP_REQ_TYPE_ID"/>
                    <a:lov name="applicant" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.APPLICANT"/>
                </a:formToolBar>
                <a:formBody column="4">
                    <a:datePicker name="requisition_date_f" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.REQUISITION_DATE_F"/>
                    <a:datePicker name="requisition_date_t" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.REQUISITION_DATE_T"/>
                    <a:comboBox name="status_name" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.STATUS"/>
                    <a:textField name="amount_f" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.AMOUNT_F">
                        <a:events>
                            <a:event name="enterdown" handler="queryRequisitionquery"/>
                        </a:events>
                    </a:textField>
                    <a:textField name="amount_t" bindTarget="acp_query_ds" prompt="ACP_REQUISITION.AMOUNT_T">
                        <a:events>
                            <a:event name="enterdown" handler="queryRequisitionquery"/>
                        </a:events>
                    </a:textField>
                </a:formBody>
            </a:queryForm>
            <a:grid id="result_grid" bindTarget="acp_result_ds" marginHeight="122" navBar="true">
                <a:columns>
                    <a:column name="requisition_number" align="center" prompt="ACP_REQUISITION.REQUISITION_NUMBER" renderer="requestNoRenderFunction" sortable="true" width="200"/>
                    <a:column name="req_type" align="center" prompt="ACP_REQUISITION.REQ_TYPES" sortable="true" width="100"/>
                    <a:column name="requisition_date" align="center" prompt="ACP_REQUISITION.REQUISITION_DATE" sortable="true" width="90"/>
                    <a:column name="document_number" align="center" prompt="ACP_REQ_MAINTAIN.REF_REQ_NUM" renderer="expRepNumRenderer" width="180"/>
                    <a:column name="amount" align="right" prompt="ACP_REQUISITION.AMOUNT" renderer="Aurora.formatMoney" sortable="true" width="80"/>
                    <a:column name="employee" align="center" prompt="ACP_REQUISITION.APPLICANT" sortable="true" width="90"/>
                    <a:column name="status" align="center" prompt="ACP_REQUISITION.STATUS" sortable="true" width="80"/>
                    <a:column name="line_description" align="center" prompt="ACP_REQUISITION.DESCRIPTION" sortable="true" width="100"/>
                </a:columns>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[

            function acpreqMaintainInitSize() {
                //描述宽度
                　　
                var labelWidth = 75;　　 //标签宽度,5 = 3padding + 2border-spacing
                　　
                var tagWidth = 150 + 5;　　 //页面宽度、高度
                　　
                var vw = $A.getViewportWidth();　　
                var vh = $A.getViewportHeight();　　 //留白宽度
                　　
                var marginWidth = 35;　　 //自适应宽度
                　　
                var autoWidth = vw - marginWidth;　　 //Form内部宽度，-2border
                　　
                var formInnerWidth = autoWidth - 2;　　 //所占列数
                　　
                var colSpan = 4;　　 //设置组件的自适应宽度
                $('result_grid').setWidth(autoWidth);
            }
            //Ext.fly(window).on('resize', acpreqMaintainInitSize);
            acpreqMaintainInitSize();
            
            initFun();
        ]]></script>
    </a:view>
</a:screen>
