<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: zhuyanan 
    $Date: 2013-1-21 下午12:26:43  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:c="aurora.application.action" xmlns:p="uncertain.proc" xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
        <a:model-query model="acp.acp_req_update_init_header" rootpath="acp_requisition_header"/>
        <a:model-query autoCount="false" defaultWhereClause="t1.acp_req_type_id=(select acp_req_type_id from acp_acp_requisition_hds where acp_requisition_header_id = ${/parameter/@acp_requisition_header_id})" fetchAll="true" model="acp.ACP1135.acp_sys_acp_req_types" rootPath="acp_req_types_date"/>
        <a:model-query autoCount="false" fetchAll="true" model="expm.exp_report_head_show" rootPath="head_data"/>
        <a:model-query autoCount="false" defaultWhereClause="employee_id=(select employee_id from acp_acp_requisition_hds where acp_requisition_header_id = ${/parameter/@acp_requisition_header_id})" fetchAll="true" model="expm.exp_report_employeelist" rootPath="employee_list"/>
        <a:model-query autocount="false" defaultWhereClause="enabled_flag=&apos;Y&apos;" fetchall="true" model="csh.csh_payment_methods" rootpath="payment_method_list"/>
        <a:model-query autocount="false" defaultwhereclause="exists (select 1 from exp_employee_assigns eea         where eea.position_id=op.position_id    and eea.enabled_flag = &apos;Y&apos;   and   eea.employee_id= nvl((select employee_id from acp_acp_requisition_hds where acp_requisition_header_id = ${/parameter/@acp_requisition_header_id}),${/model/head_data/record/@employee_id}))  and company_id = ${/session/@company_id}" fetchall="true" model="exp.exp_org_position" rootpath="position_list"/>
        <a:model-query autoCount="false" defaultWhereClause="aa.acp_req_type_id = (select acp_req_type_id from acp_acp_requisition_hds where acp_requisition_header_id = ${/parameter/@acp_requisition_header_id})" fetchAll="true" model="acp.acp_acp_req_usedes_list" rootPath="usedes_name_list"/>
    </a:init-procedure>
    <a:view>
        <!-- <a:link id="acp_acp_req_query_link" url="${/request/@context_path}/modules/acp/public/acp_acp_req_maintain.screen"/> -->
        <a:link id="acp_acp_req_query_link" url="${/request/@context_path}/modules/acp/ACP3100/acp_requisition_query.screen"/>
        <a:link id="acp_acp_req_query_detail_readonly_link_1" url="${/request/@context_path}/modules/acp/public/acp_acp_req_query_detail_readonly.screen"/>
        <a:link id="uploadFile_link" url="${/request/@context_path}/uploadFile.screen"/>
        <a:link id="acp_acp_req_report_choice_link" url="${/request/@context_path}/modules/acp/public/acp_acp_req_report_choice.screen"/>
        <a:link id="exp_bank_assign_link" url="${/request/@context_path}/modules/exp/EXP1050/exp_bank_assign_pmt_schedule_readonly.screen"/>
        <script><![CDATA[

            function loadComplete() {
                var acpReqHeaderRecord = $('acp_req_header_ds').getAt(0);
            }
            var saveFlag = true;
            
            function line_number(value, record, name) {
                return $('pmtplan_schedules_ds').indexOf(record) * 10 + 10;
            }
            
            function pmtGridcellclick(grid, row, name, record) {
            
                var metadata = record.getMeta();
                if (name == 'account_number') {
                    var r = record.getMeta();
                    var f1 = r.getField('account_number');
                    var payee_category = record.get('partner_category_value');
                    var aa = record.get('payee_partner_name');
                    if (payee_category == null || payee_category == undefined || payee_category == '' || aa == null || aa == '' || aa == undefined) {
                        f1.setLovService('');
                    } else if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('expm.exp_employee_accounts');
                        record.getMeta().getField('account_number').setLovPara('employee_id', record.get('partner_id'));
                        var mapping1 = [{
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping1);
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('expm.pur_vender_accounts');
                        record.getMeta().getField('account_number').setLovPara('vender_id', record.get('partner_id'));
                        var mapping2 = [{
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping2);
                    } else {
                        f1.setLovService('expm.ord_customer_accounts');
                        record.getMeta().getField('account_number').setLovPara('customer_id', record.get('partner_id'));
                        var mapping3 = [{
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping3);
                    }
                }
                if (name == 'payee_partner_name') {
                    var f1 = metadata.getField('payee_partner_name');
                    var payee_category = record.get('partner_category_value');
                    if (payee_category == null || payee_category == undefined || payee_category == '') {
                        f1.setLovService('');
                    } else if (payee_category == 'EMPLOYEE') {
                        f1.setLovService('csh.csh_pay_req_emp_lov');
            
                        var mapping1 = [{
                            from: 'name',
                            to: 'payee_partner_name'
                        }, {
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'id',
                            to: 'partner_id'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location_name',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping1);
                    } else if (payee_category == 'VENDER') {
                        f1.setLovService('csh.csh_pay_req_ven_lov');
                        var mapping2 = [{
                            from: 'description',
                            to: 'payee_partner_name'
                        }, {
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'id',
                            to: 'partner_id'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location_name',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping2);
                    } else {
                        f1.setLovService('csh.csh_pay_req_cus_lov');
                        var mapping3 = [{
                            from: 'description',
                            to: 'payee_partner_name'
                        }, {
                            from: 'account_number',
                            to: 'account_number'
                        }, {
                            from: 'account_name',
                            to: 'account_name'
                        }, {
                            from: 'id',
                            to: 'partner_id'
                        }, {
                            from: 'bank_code',
                            to: 'bank_code'
                        }, {
                            from: 'province_code',
                            to: 'province_code'
                        }, {
                            from: 'bank_name',
                            to: 'bank_name'
                        }, {
                            from: 'bank_location_code',
                            to: 'bank_location_code'
                        }, {
                            from: 'bank_location_name',
                            to: 'bank_location_name'
                        }, {
                            from: 'province_name',
                            to: 'province_name'
                        }, {
                            from: 'city_code',
                            to: 'city_code'
                        }, {
                            from: 'city_name',
                            to: 'city_name'
                        }];
                        f1.setMapping(mapping3);
                    }
                }
                if (name == 'payment_schedule_line_number') {
                    var meta = record.getMeta();
                    var field = meta.getField('payment_schedule_line_number');
                    if (!record.get('contract_header_id') || record.get('contract_header_id') == '') {
                        field.setLovService('');
                    } else {
                        field.setLovService('csh.csh_payment_schedule_lov');
                        field.setLovPara('contract_header_id', record.get('contract_header_id') || '');
                        field.setLovPara('currency_code', record.get('currency'));
                        field.setLovPara('partner_id', record.get('partner_id') || '');
                        field.setLovPara('partner_category_name', record.get('partner_category_value') || '');
                    }
                }
                if (name == 'contract_number') {
                    var contractfield = record.getMeta().getField('contract_number');
                    var head_record = $('acp_req_head').getAt(0);
                    if (record.get('partner_category_name') == '' || record.get('payee_partner_name') == '') {
                        contractfield.setLovService('');
                    } else {
                        contractfield.setLovPara('currency_code', head_record.get('currency_code'));
                        contractfield.setLovPara('partner_category', record.get('partner_category_value') || '');
                        contractfield.setLovPara('partner_id', record.get('partner_id') || '');
                        contractfield.setLovPara('company_id', record.get('company_id') || '');
                    }
                }
            }
            
            function uploadFile() {
            
                var head_id = '${/parameter/@acp_requisition_header_id}';
                var url = $('uploadFile_link').getUrl() + '?table_name=ACP_ACP_REQUISITION_HDS&header_id=' + head_id
                new Aurora.Window({
                    url: url,
                    title: '${l:ATM.UPLOAD_ATTACHMENT}',
                    id: 'check_upload_file_screen',
                    width: 600,
                    height: 400
                });
            }
            
            function dateValidator(record, name, value) {
                if (name == 'requisition_date') {
                    var requisition_date = Aurora.formatDate(record.get('requisition_date'));
                    var sys_date = record.get('sys_date');
                    if (requisition_date > sys_date) {
                        return '${l:ACP_ACP_REQ_CREATE.REQ_DATE}';
                    } else {
                        return true;
                    }
                }
                if (name == 'plan_pay_date') {
                    var plan_pay_date = Aurora.formatDate(record.get('plan_pay_date'));
                    var head = $('acp_req_head').getAt(0);           
                    var sys_date = head.get('sys_date');
                    
                    if (plan_pay_date < sys_date) {
                        return '${l:ACP_ACP_REQ_CREATE.PLAN_PAY_DATE}'
            
                    } else {
                        return true;
                    }
                }
            }
            
            function resultUpdateFunction(dataSet, record, name, value, oldValue) {
                if (name == 'req_amount') {
                    var req_amount = record.get('req_amount');
                    var can_req_amount = record.get('can_req_amount');
                    if (req_amount > can_req_amount) {
                        Aurora.showInfoMessage('${l:PROMPT}', '${l:ACP_ACP_REQ_CREATE.REQ_AMOUNT}', function(cmp) {
                            record.set('req_amount', '');
                            cmp.close();
                        }, 250, 100);
                    }
                }
                if (name == 'partner_category_name') {
                    record.set('payee_partner_name', '');
                    record.set('account_number', '');
                    record.set('account_name', '');
                    record.set('contract_number', '');
                    record.set('payment_schedule_line_number', '');
            
            
                }
                if (name == 'payee_partner_name') {
                    record.set('account_number', '');
                    record.set('account_name', '');
                    record.set('contract_number', '');
                    record.set('payment_schedule_line_number', '');
                }
                if (name == 'account_number') {
                    record.set('account_name', '');
                }
                if (name == 'contract_number') {
                    record.set('payment_schedule_line_number', '');
                }
                saveFlag = false;
            }
            
            function dynamicUpdate() {
                saveFlag = false;
            }
            
            function backFunction_create() {
                var url = $('acp_acp_req_report_choice_link').getUrl();
                location.href = url;
            
            }
            
            function savereport() {
                // var report_refs_flag = '{/parameter/@report_refs_flag}';
                var line = $('pmtplan_schedules_ds');
                var record = line.getAt(0);
                if (!$('acp_req_head').validate()) {
            
                    return;
                }
                if (!$('pmtplan_schedules_ds').validate()) {
            
                    return;
                }
                var head = $('acp_req_head').getAt(0);
                // head.set('employee_id', '${/parameter/@employee_id}');
                head.set('acp_req_type_id', '/model/acp_req_types_date/record/@acp_req_type_id}');
                head.set('currency_code', '${/parameter/@currency_code}');
                $('acp_req_head').submit();
            }
            
            function setInitData(dataSet, record, index) {
            
                record.set('usedes_name', '${/parameter/@usedes_code}');
                record.set('partner_category_name', '')
            }
            
            function reloadres() {
                saveFlag = true;
            
            
            }
            
            function submitacp() {
                if (!saveFlag || $('pmtplan_schedules_ds').isModified() || ($('acp_req_head').isModified())) {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:PROMPT.SAVE_SUBMIT}', null, 250, 100);
                    return;
                }
                var head_id = '${/parameter/@acp_requisition_header_id}';
                var line_record = $('pmtplan_schedules_ds').getAll();
                
                if (line_record.length > 0) {
                    var length=line_record.length;
                    for(var i=0;i<length;i++){
                        if(line_record[i].get('req_amount')==0){
                            Aurora.showInfoMessage('${l:PROMPT}','存在付款行申请金额为0,不允许提交');
                            return;
                        }
                    }
                    Aurora.request({
                        url: '${/request/@context_path}/autocrud/acp.acp_req_submit/update',
                        para: {
                            'acp_requisition_header_id': head_id
                        },
                        success: function() {
                            var url = $('acp_acp_req_query_link').getUrl();
                            location.href = url;
                        }
                    });
                } else {
                    Aurora.showInfoMessage('${l:PROMPT}', '${l:ACP_REQUISITION.LINE_RECORD}', null, 250, 100);
                    return;
                }
            }
            
            function follow() {
            
                new Aurora.Window({
                    id: 'acp_acp_req_query_detail_readonly_screen',
                    url: /*acp_acp_req_query_detail_readonly.screen*/
                    $('acp_acp_req_query_detail_readonly_link_1').getUrl() + '?acp_requisition_header_id=' + '${/parameter/@acp_requisition_header_id}',
                    title: '${l:DOCUMENT_RECORD_QUERY}',
                    fullScreen: true,
                    height: 435,
                    width: 540
                });
            }
            
            function bankAssign(value, record, name) {
                var lineIndex = $('pmtplan_schedules_ds').indexOf(record);
                return '<a href="javascript:bankAssignInfo(' + lineIndex + ')">${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}</a>';
            }
            
            function bankAssignInfo(lineIndex) {
                new Aurora.Window({
                    id: 'exp_bank_assign_window',
                    url: $('exp_bank_assign_link').getUrl() + '?line_index=' + lineIndex + '&ds_name=pmtplan_schedules_ds',
                    title: '${l:CSH_PAYMENT.BANK_ACCOUNT_CODE}',
                    height: 240,
                    width: 540
                });
            }
            
            function getRecordsFromBankCode(record) {
                var lineIndex = record.get('line_index');
                var pmtplan_schedules_record = $('pmtplan_schedules_ds').getAt(lineIndex);
                pmtplan_schedules_record.set('account_number', record.get('account_number'));
                pmtplan_schedules_record.set('account_name', record.get('account_name'));
                pmtplan_schedules_record.set('bank_code', record.get('bank_code'));
                pmtplan_schedules_record.set('bank_name', record.get('bank_name'));
                pmtplan_schedules_record.set('bank_location_code', record.get('bank_location_code'));
                pmtplan_schedules_record.set('bank_location_name', record.get('bank_location_name'));
                pmtplan_schedules_record.set('province_code', record.get('province_code'));
                pmtplan_schedules_record.set('province_name', record.get('province_name'));
                pmtplan_schedules_record.set('city_code', record.get('city_code'));
                pmtplan_schedules_record.set('city_name', record.get('city_name'));
            }
        ]]></script>
        <a:dataSets>
            <!-- <a:dataSet id="gather_flag_ds" lookupCode="GATHER_FLAG"/> -->
            <a:dataSet id="acp_req_header_ds">
                <a:datas dataSource="/model/acp_requisition_header"/>
            </a:dataSet>
            <a:dataSet id="usedes_name_ds">
                <a:datas dataSource="/model/usedes_name_list"/>
            </a:dataSet>
            <a:dataSet id="pay_category_ds" lookupcode="PAYMENT_OBJECT"/>
            <a:dataSet id="payment_mehtod_ds">
                <a:datas datasource="/model/payment_method_list"/>
            </a:dataSet>
            <a:dataSet id="positionlist_ds">
                <a:datas datasource="/model/position_list"/>
            </a:dataSet>
            <a:dataSet id="acp_req_head" autoQuery="true" queryUrl="${/request/@context_path}/autocrud/acp.acp_requisition_hd_query/query?acp_requisition_header_id=${/parameter/@acp_requisition_header_id}" submitUrl="${/request/@context_path}/modules/acp/public/acp_acp_req_save.svc">
                <a:fields>
                    <a:field name="employee_id"/>
                    <a:field name="exp_report_type_name" prompt="ACP_REQUISITION.REQ_TYPES" readOnly="true"/>
                    <a:field name="requisition_number" prompt="ACP_REQUISITION.REQUISITION_NUMBER" readOnly="true"/>
                    <a:field name="requisition_date" prompt="ACP_REQUISITION.REQUISITION_DATE" readOnly="true" required="true" validator="dateValidator"/>
                    <a:field name="acp_ref_rpt_number" prompt="ACP_REQUISITION.REF_DOCUMENT_NUMBER" readOnly="true"/>
                    <a:field name="exp_report_header_id" defaultValue=""/>
                    <a:field name="sys_date"/>
                    <a:field name="req_name" prompt="ACP_REQUISITION.APPLICANT" readOnly="true"/>
                    <!--  <a:field name="plan_pay_date" prompt="ACP_ACP_REQ_CREATE.PLAN_PAYMENT_DATE" required="true" validator="dateValidator"/> -->
                    <a:field name="description" required="true"/>
                    <a:field name="position_display" displayfield="position_name" options="positionlist_ds" prompt="岗位" required="true" returnfield="position_id" valuefield="position_id"/>
                    <a:field name="position_id"/>
                </a:fields>
                <a:events>
                    <a:event name="submitsuccess" handler="reloadres"/>
                    <a:event name="update" handler="dynamicUpdate"/>
                </a:events>
            </a:dataSet>
            <a:dataSet id="pmtplan_schedules_ds" autoPageSize="true" autoQuery="true" bindName="line_ds" bindTarget="acp_req_head" fetchAll="true" model="db.acp_requisition_pkg.delete_acp_req_ln" queryUrl="${/request/@context_path}/autocrud/acp.acp_requisition_ln_query/query?acp_requisition_header_id=${/parameter/@acp_requisition_header_id}" selectable="true">
                <a:fields>
                    <a:field name="plan_pay_date" required="true" validator="dateValidator"/>
                    <a:field name="usedes_name" displayField="description" options="usedes_name_ds" required="true" returnField="usedes_id" valueField="usedes_id"/>
                    <a:field name="usedes_id"/>
                    <a:field name="partner_category_name" displayField="code_value_name" options="pay_category_ds" required="true" returnField="partner_category_value" valueField="code_value"/>
                    <a:field name="payee_partner_name" lovGridHeight="320" lovHeight="460" lovWidth="500" required="true" title="EXP_REPORT_LINES.PAYEE_ID"/>
                    <a:field name="due_amount"/>
                    <a:field name="partner_category_value"/>
                    <a:field name="frozen_flag" checkedValue="Y" readOnly="true" uncheckedValue="N"/>
                    <a:field name="payment_method" displayField="description" options="payment_mehtod_ds" prompt="ACP.DESCRIPTION_METHOD" required="true" returnField="payment_type_id" valueField="payment_method_id"/>
                    <a:field name="unpayment_amount"/>
                    <a:field name="payed_amount"/>
                    <a:field name="contract_number"/>
                    <a:field name="payment_schedule_line_number"/>
                    <a:field name="payment_sch_line_id"/>
                    <a:field name="can_req_amount"/>
                    <a:field name="req_amount" required="true"/>
                    <a:field name="account_number" autoComplete="true" autoCompleteField="account_name" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovWidth="500" required="true" title="CSH_BANK_BALANCES.BANK_ACCOUNT_ID">
                        <a:mapping>
                            <a:map from="account_number" to="account_number"/>
                            <a:map from="account_name" to="account_name"/>
                            <a:map from="bank_code" to="bank_code"/>
                            <a:map from="bank_name" to="bank_name"/>
                            <a:map from="bank_location" to="bank_location_name"/>
                            <a:map from="bank_location_code" to="bank_location_code"/>
                            <a:map from="bank_location" to="bank_location"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_number" autoComplete="true" autoCompleteField="contract_number" lovGridHeight="320" lovHeight="450" lovService="csh.csh_contract_lov" lovWidth="500" prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" title="CON_CONTRACT_HEADERS.CONTRACT_NUMBER">
                        <a:mapping>
                            <a:map from="contract_number" to="contract_number"/>
                            <a:map from="contract_header_id" to="contract_header_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="contract_header_id"/>
                    <a:field name="payment_schedule_line_number" autoComplete="true" autoCompleteField="payment_schedule_line_number" lovGridHeight="320" lovHeight="450" lovService="csh.csh_payment_schedule_lov" lovWidth="500" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" title="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER">
                        <a:mapping>
                            <a:map from="payment_schedule_line_number" to="payment_schedule_line_number"/>
                            <a:map from="payment_schedule_line_id" to="payment_sch_line_id"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="bank_code"/>
                    <a:field name="account_name"/>
                    <a:field name="bank_name"/>
                    <a:field name="bank_location_code"/>
                    <a:field name="bank_location"/>
                    <!-- <a:field name="gather_flag_desc" displayField="code_value_name" options="gather_flag_ds" required="true" returnField="gather_flag" valueField="code_value"/>
                    <a:field name="gather_flag" defaultValue="1"/> -->
                </a:fields>
                <a:events>
                    <a:event name="update" handler="resultUpdateFunction"/>
                    <a:event name="add" handler="setInitData"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar id="acp5010_req_mant_top_bar">
                <a:screenTitle/>
                <a:toolbarButton click="savereport" text="PROMPT.SAVE" width="80"/>
                <a:toolbarButton id="submitBtn" click="submitacp" text="PROMPT.SUBMIT" width="80"/>
                <a:toolbarButton id="uploadFileBtn" click="uploadFile" text="影像上传" width="80"/>
                <a:toolbarButton click="follow" text="PROMPT.HISTORY" width="80"/>
            </a:screenTopToolbar>
            <a:form id="acp5010_req_mant_head_form" column="1" title="PROMPT.PAYMENT_APPLY">
                <a:box column="4" style="width:100%">
                    <a:textField name="exp_report_type_name" bindTarget="acp_req_head"/>
                    <a:textField name="requisition_number" bindTarget="acp_req_head"/>
                    <a:datePicker name="requisition_date" bindTarget="acp_req_head"/>
                    <a:placeHolder id="acp_ref_rpt_number"/>
                    <a:textField name="req_name" bindTarget="acp_req_head"/>
                    <a:comboBox name="position_display" bindTarget="acp_req_head"/>
                    <!--  <a:datePicker name="plan_pay_date" bindTarget="acp_req_head"/> -->
                </a:box>
                <a:box id="acp5010_req_mant_desc_ta_bx" style="width:100%;">
                    <a:textArea name="description" id="acp5010_req_mant_desc_ta" bindTarget="acp_req_head" colspan="4" prompt="PROMPT.DESC"/>
                </a:box>
            </a:form>
            <a:placeHolder id="grid"/>
        </a:screenBody>
        <script><![CDATA[
        		loadComplete();
        ]]></script>
        <script purpose="auto_resize"><![CDATA[
            function acp5010updStandardInitSize() {
                //描述宽度
                　　
                var labelWidth = 75;　　 //标签宽度,5 = 3padding + 2border-spacing
                　　
                var tagWidth = 150 + 5;　　 //页面宽度、高度
                　　
                var vw = $A.getViewportWidth();　　
                var vh = $A.getViewportHeight();　　 //留白宽度
                　　
                var marginWidth = 35;　　 //自适应宽度
                　　
                var autoWidth = vw - marginWidth;　　 //Form内部宽度，-2border
                　　
                var formInnerWidth = autoWidth - 2;　　 //所占列数
                　　
                var colSpan = 4;　　 //设置组件的自适应宽度
                
                //设置Form的宽度自适应
                Ext.get('acp5010_req_mant_head_form').setWidth(autoWidth+4);
                $('acp_req_maintain_detail_grid').setWidth(autoWidth);
                Ext.get('acp5010_req_mant_desc_ta').setWidth(formInnerWidth - (formInnerWidth / colSpan - labelWidth - tagWidth) - labelWidth - 6);
            }
            //Ext.fly(window).on('resize', acp5010updStandardInitSize);
            acp5010updStandardInitSize();
        ]]></script>
    </a:view>
    <a:view-config>
        <c:create-config targetId="acp_ref_rpt_number">
            <p:switch test="/model/acp_req_types_date/record/@report_refs_flag">
                <p:case value="Y">
                    <c:process-config>
                        <a:textField name="acp_ref_rpt_number" bindTarget="acp_req_head"/>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
        <c:create-config targetId="grid">
            <p:switch test="/model/acp_req_types_date/record/@report_refs_flag">
                <p:case value="Y">
                    <c:process-config>
                        <a:grid id="acp_req_maintain_detail_grid" bindTarget="pmtplan_schedules_ds" marginHeight="268" marginWidth="25" navBar="true">
                            <a:toolBar>
                                <a:button type="delete"/>
                            </a:toolBar>
                            <a:columns>
                                <a:column name="line_num" align="center" prompt="ACP_ACP_REQ_CREATE.LINE_NUMBER" renderer="line_number" width="50"/>
                                <a:column name="usedes_name" align="left" prompt="CSH_PAYMENT_USEDS" width="120"/>
                                <a:column name="partner_category_name" align="left" prompt="ACP_REQUISITION.PARTNER_TARGET" width="120"/>
                                <a:column name="payee_partner_name" align="left" prompt="ACP_REQUISITION.PARTNER_NAMES" width="120"/>
                                <a:column name="due_amount" align="right" prompt="ACP_ACP_REQUISITION_LNS.AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="payment_method" align="left" editor="pmt_combox" prompt="CSH_PAYMENT_METHODS_VL.PAYMENT_METHOD_ID" width="120"/>
                                <!-- <a:column name="gather_flag_desc" align="center" prompt="TRAVEL_PLAN_TYPE.CENTRALIZED_CLEARING_FLAG" width="120"/> -->
                                <a:column name="plan_pay_date" align="center" editor="datepicker" prompt="ACP_ACP_REQ_CREATE.PLAN_PAYMENT_DATE" renderer="Aurora.formatDate" width="100"/>
                                <a:column name="unpayment_amount" align="right" prompt="ACP_REQUISITION.UNPAYMENT_AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="can_req_amount" align="right" prompt="ACP_REQUISITION.CAN_REQ_AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="req_amount" align="right" editor="numberField" prompt="ACP_REQUISITION.REQ_AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="account_number" align="left" editor="pmt_lov" prompt="CSH_BANK_ACCOUNT_AUTH_DETAIL_HCT.BANK_ACCOUNT_NUM" width="120"/>
                                <a:column name="account_name" align="left" editor="" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" width="120"/>
                                <a:column name="bank_name" align="left" prompt="CSH_BANKS.BANK_ALT_NAME" width="120"/>
                                <a:column name="bank_location_name" align="left" prompt="CON_CONTRACT_HEADERS.BANK_BRANCH_CODE" width="120"/>
                                <a:column name="contract_number" align="left" prompt="CON_CONTRACT_HEADERS.CONTRACT_NUMBER" width="120"/>
                                <a:column name="payment_schedule_line_number" align="left" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" width="120"/>
                                <!-- <a:column name="bank_id" align="center" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" renderer="bankAssign" width="80"/> -->
                            </a:columns>
                            <a:editors>
                                <a:datePicker id="datepicker"/>
                                <a:checkBox id="pmt_checkbox"/>
                                <a:textField id="textField"/>
                                <a:lov id="pmt_lov" lovGridHeight="320" lovHeight="440" lovWidth="500"/>
                                <a:comboBox id="pmt_combox"/>
                                <a:numberField id="numberField" allowFormat="true" allowNegative="false"/>
                            </a:editors>
                            <a:events>
                                <a:event name="cellclick" handler="pmtGridcellclick"/>
                            </a:events>
                        </a:grid>
                    </c:process-config>
                </p:case>
                <p:case>
                    <c:process-config>
                        <a:grid id="acp_req_maintain_detail_grid" bindTarget="pmtplan_schedules_ds" marginHeight="268" marginWidth="25" navBar="true">
                            <a:toolBar>
                                <a:button type="add"/>
                                <a:button type="delete"/>
                            </a:toolBar>
                            <a:columns>
                                <a:column name="line_num" align="center" prompt="ACP_ACP_REQ_CREATE.LINE_NUMBER" renderer="line_number" width="50"/>
                                <a:column name="usedes_name" align="left" editor="pmt_combox" prompt="CSH_PAYMENT_USEDS" width="120"/>
                                <a:column name="partner_category_name" align="left" editor="pmt_combox" prompt="ACP_REQUISITION.PARTNER_TARGET" width="120"/>
                                <a:column name="payee_partner_name" align="left" editor="pmt_lov" prompt="ACP_REQUISITION.PARTNER_NAMES" width="120"/>
                                <a:column name="payment_method" align="left" editor="pmt_combox" prompt="CSH_PAYMENT_METHODS_VL.PAYMENT_METHOD_ID" width="120"/>
                                <a:column name="plan_pay_date" align="center" editor="datepicker" prompt="ACP_ACP_REQ_CREATE.PLAN_PAYMENT_DATE" renderer="Aurora.formatDate" width="100"/>
                                <a:column name="req_amount" align="right" editor="numberField" prompt="ACP_REQUISITION.REQ_AMOUNT" renderer="Aurora.formatMoney" width="100"/>
                                <a:column name="account_number" align="left" editor="pmt_lov" prompt="CSH_BANK_ACCOUNT_AUTH_DETAIL_HCT.BANK_ACCOUNT_NUM" width="120"/>
                                <a:column name="account_name" align="left" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" width="120"/>
                                <a:column name="contract_number" align="left" editor="pmt_lov" prompt="ACP_REQUISITION.CONTRACT" width="120"/>
                                <a:column name="payment_schedule_line_number" align="left" editor="pmt_lov" prompt="CON_PAYMENT_SCHEDULES.PAYMENT_SCHEDULE_LINE_NUMBER" width="120"/>
                                <!-- <a:column name="bank_id" align="center" prompt="CSH_PAYMENT.BANK_ACCOUNT_CODE" renderer="bankAssign" width="80"/> -->
                            </a:columns>
                            <a:editors>
                                <a:datePicker id="datepicker"/>
                                <a:checkBox id="pmt_checkbox"/>
                                <a:textField id="textField"/>
                                <a:lov id="pmt_lov" lovGridHeight="320" lovHeight="440" lovWidth="500"/>
                                <a:comboBox id="pmt_combox"/>
                                <a:numberField id="numberField" allowFormat="true" allowNegative="false"/>
                            </a:editors>
                            <a:events>
                                <a:event name="cellclick" handler="pmtGridcellclick"/>
                            </a:events>
                        </a:grid>
                    </c:process-config>
                </p:case>
            </p:switch>
        </c:create-config>
    </a:view-config>
</a:screen>
