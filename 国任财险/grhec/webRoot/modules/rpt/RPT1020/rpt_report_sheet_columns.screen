<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: qwm  
    $Date: 2012-11-7 上午11:25:16  
    $Revision: 1.0  
    $Purpose: 
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application">
    <a:init-procedure/>
    <a:view>
        <a:link id="rpt_sheet_datasource_batch_link" url="${/request/@context_path}/modules/rpt/RPT1020/rpt_report_datasource_batch.screen"/>
        <a:link id="get_sheet_parent_link" model="rpt.RPT1020.rpt_report_sheet_parent" modelaction="query"/>
        <a:link id="report_sheet_columns_save_link" model="rpt.RPT1020.rpt_report_sheets_query" modelaction="save"/>
        <a:link id="delete_sheet_parent_link" modelaction="execute" url="${/request/@context_path}/autocrud/rpt.RPT1020.rpt_report_sheet_columns_delete/batch_update"/>
        <a:link id="delete_sheet_parent_link_1" modelaction="delete" url="${/request/@context_path}/autocrud/rpt.RPT1020.rpt_report_sheet_columns_delete/batch_update"/>
        <script><![CDATA[
            var temp_cond_delete_dates = new Array();
            
            function setinitdata(ds, record, index) {
                record.set('sheet_id', '${/parameter/@sheet_id}');
            }
            
            function init() {
                $('report_sheet_columns_result_ds').setQueryParameter('sheet_id', '${/parameter/@sheet_id}');
                $('report_sheet_columns_result_ds').query();
            }
            
            function backtype() {
                $('new_report_sheet_columns').close();
            }
            
            function lineNewFunction() {
                if (!$('report_sheet_columns_result_ds').validate()) {
                    return;
                }
                dataset = $('report_sheet_columns_result_ds');
            
                Aurora.request({
                    url: $('get_sheet_parent_link').getUrl(),
                    para: {},
                    success: function(args) { 
                        var parentcols = args.result.record;
                        if (!parentcols) {
                            Aurora.showWarningMessage('', '数据未返回', null, 200, 100);
                            return;
                        }
                        var parent_column_id = parentcols.parent_column_id;
                        dataset.add(new Aurora.Record({
                            column_id: parent_column_id
                        }));
                    },
                    scope: this
                });
            }
            
            function cellclickFun(grid, row, name, record) {
                $('parent_column_option').removeAll();
                var lineDataSet = $('report_sheet_columns_result_ds');
                var lineRecords = lineDataSet.getAll();
                for (var i = 0;i < lineRecords.length;i++) {
                    var lineRecord = lineRecords[i];
                    column_title = lineRecord.get('column_title');
                    column_id = lineRecord.get('column_id');
                    if (column_title && column_id && record.get('column_id') != column_id) {
                        $('parent_column_option').add(new Aurora.Record({
                            column_title: column_title,
                            parent_column_id: column_id
                        }));
                    }
            
                }
            }
            
            
            
            
            function columnTitleEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('column_title',null);
                    return '';
                } else {
                    return 'textfield_editor2';
                }
            }
            
            function columnTypeEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('column_type',null);
                    return '';
                } else {
                    return 'editor_cob';
                }
            
            }
            
            function columnContentEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('column_content',null);
                    //record.set('column_content_title',null);
                    return '';
                } else {
                    if (record.get('column_type') == 'content') {
                        return 'rpt_sheet_lov';
                    } else {
                        return 'textfield_editor2';
                    }
                }
            }
            
            function columnSeqEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('column_seq',null);
                    return '';
                } else {
                    return 'rpt_sheet_nf';
                }
            }
            
            function headerStyleEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('header_style',null);
                    //record.set('header_style_name',null);
                    return '';
                } else {
                    return 'rpt_sheet_lov';
                }
            }
            
            function cellStyleEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('cell_style',null);
                    //record.set('cell_style_name',null);
                    return '';
                } else {
                    return 'rpt_sheet_lov';
                }
            }
            
            function footnoteTypeEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('footnote_type',null);
                    return '';
                } else {
                    return 'textfield_editor2';
                }
            }
            
            function footnoteContentEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('footnote_content',null);
                    return '';
                } else {
                    return 'textfield_editor2';
                }
            }
            
            function groupLevelEdit(record, name) {
                if (record.get('parent_column_id')) {
                    //record.set('group_level',null);
                    return '';
                } else {
                    return 'rpt_sheet_nf';
                }
            }
            
            function onUpdate(ds, record, name, value) {
                if (record.get('parent_column_id')) {
                    //record.set('column_title','');
                    record.set('column_type', '');
                    record.set('column_title', '');
                    //record.set('column_seq','');
                    record.set('header_style', '');
                    //record.set('cell_style_name','');
                    record.set('footnote_type', '');
                    record.set('footnote_content', '');
                    //record.set('group_level','');
                    record.set('header_style_name', '');
            
                    record.set('header_style', '');
                    //record.set('cell_style','');
                    record.set('column_content', '');
                    /* record.getField('column_type').setReadOnly(true);
                     record.getField('column_content_title').setReadOnly(true);
                     record.getField('column_seq').setReadOnly(true);
                     record.getField('header_style').setReadOnly(true);
                     record.getField('cell_style_name').setReadOnly(true);
                     record.getField('footnote_type').setReadOnly(true);
                     record.getField('footnote_content').setReadOnly(true);
                     record.getField('group_level').setReadOnly(true);
                     record.getField('header_style_name').setReadOnly(true); */
            
                }
            }
            
            function add_to_array(array, json_datas) {
                var length = array.length;
                for (var i = 0;i < json_datas.length;i++) {
                    array.push(json_datas[i]);
                }
            }
            //将ds中删除的数据放入array中
            
            function remove_ds_to_temp(ds, array, pk) {
                var records = ds.getSelected();
                if (records.length < 1) {
                    Aurora.showMessage('${l:HAP_MESSAGE}', '请选择需要删除的记录');
                    return;
                }
                var json_datas = ds.getJsonData(true);
            
                for (var i = 0;i < json_datas.length;) {
            
                    if (json_datas[i]['_status'] == 'insert') {
                        json_datas.splice(i, 1);
                    } else {
                        json_datas[i]['_status'] = 'delete';
                        i++;
                    }
                }
            
                add_to_array(array, json_datas);
                for (var i = 0;i < records.length;) {
                    ds.removeLocal(records[0]);
                }
            }
            
            function remove_cond_ds_to_temp() {
                var ds = $('report_sheet_columns_result_ds');
                remove_ds_to_temp(ds, temp_cond_delete_dates);
            
            }
            
            
            function delete_report() {
                var ds = $('report_sheet_columns_result_ds');
                var records = ds.getSelected();
                if (records.length < 1) {
                    Aurora.showMessage('${l:HAP_MESSAGE}', '请选择需要删除的记录');
                    return;
                }
            
                /* var json_datas = ds.getJsonData(true);
                 for (var i = 0;i < json_datas.length;) {
                 if (json_datas[i]['_status'] == 'insert') {
                 json_datas.splice(i, 1);
                 } else {
                 json_datas[i]['_status'] = 'delete';
                 i++;
                 }
                 }   */
                var json_datas = [];
                var check_data;
                var delete_datas = [];
                for (var m = 0;m < records.length;m++) {
                    json_datas.add({
                        'column_id': records[m].get('column_id'),
                        '_status': 'execute'
                    });
                }
                for (var n = 0;n < records.length;n++) {
                    delete_datas.add({
                        'column_id': records[n].get('column_id'),
                        '_status': 'delete'
                    });
                }
            
                Aurora.request({
                    url: $('delete_sheet_parent_link').getUrl(),
                    para: json_datas,
                    success: function(argss) { 
                        //var count = argss.result.record.count_id;
                        //alert(argss.result.record.length);
                        //alert(argss.result.record[].count_id);
                        if (!argss.result.record.length) {
                            check_data = argss.result.record.count_id;
                        } else {
                            for (var i = 0;i < argss.result.record.length;i++) {
                                //alert(argss.result.record[i]['count_id']);
                                if (argss.result.record[i]['count_id'] == 1) {
                                    check_data = 1;
                                }
                            }
                        }
                        // alert(argss.result.record[0].count_id);
            
                        //alert(array[0]);
                        if (check_data == 1) {
                            Aurora.showMessage('${l:HAP_MESSAGE}', '有子节点未删除');
                            return;
                        } else {
                            for (var i = 0;i < records.length;) {
                                ds.removeLocal(records[0]);
                            }
                            Aurora.request({
                                url: $('delete_sheet_parent_link_1').getUrl(),
                                para: delete_datas,
                                success: function(args) {},
                                failure: function(response, options) {},
                                scope: this
                            });
                            //init();
                            //$('report_sheet_columns_result_ds').query();
                        }
                    },
                    failure: function(response, options) {
                        //alert('错误');
                    },
            
                    scope: this
                });
            }
            
            function batch_datasource() {
            
                var submiturl = $('rpt_sheet_datasource_batch_link').getUrl() + '?datasource_id=' + ${/parameter/@datasource_id} + '&sheet_id=' + ${/parameter/@sheet_id};
                new Aurora.Window({
                    id: 'new_rpt_sheet_datasource_batch',
                    url: submiturl,
                    title: '批量分配数据源',
                    width: 500,
                    height: 420
                });
            
            }
            
            function savetype() {
                var ds = $('report_sheet_columns_query_ds');
                ds.submit();
                /* var sheet_start_position = ds.getCurrentRecord().get('sheet_start_position');
                var sheet_start_cell = ds.getCurrentRecord().get('sheet_start_cell');
                Aurora.request({
                    url: $('report_sheet_columns_save_link').getUrl(),
                    params: {
                        sheet_start_cell: sheet_start_cell,
                        sheet_start_position :sheet_start_position,
                        _status: 'save'
                    },
                    opts: opts,
                    success: function(response, options) {
                        var result_cd = response.result.result_cd;
                        if (result_cd == 0) {
                            //业务逻辑上出错
                        } else {
                            //业务逻辑的成功
                        }
                    },
                    failure: function(response, options) {
            
                       },
                    scope: scope
                }); */
            
            }
        ]]></script>
        <a:dataSets>
            <a:dataSet id="sheet_group_formula_ds" lookupCode="RPT_REPORT_GROUP_FORMULA"/>
            <a:dataSet id="operator_ds">
                <a:datas>
                    <a:record name="数据源" value="content"/>
                    <a:record name="公式" value="formula"/>
                </a:datas>
            </a:dataSet>
            <a:dataSet id="parent_column_option" loadData="true" model="rpt.RPT1020.rpt_report_sheet_columns"/>
            <a:dataSet id="report_sheet_columns_delete_ds" model="rpt.RPT1020.rpt_report_sheet_columns_delete"/>
            <a:dataSet id="report_sheet_columns_query_ds" loadData="true" model="rpt.RPT1020.rpt_report_sheets_query">
                <a:fields>
                    <!-- <a:field name="sheet_start_cell" lovGridHeight="300" lovHeight="420" lovService="bgt.BGT1070.bgt_period_lov" lovWidth="500" prompt="报表页起始单元格" title="报表页起始单元格">
                        <a:mapping>
                            <a:map from="bgt_period_set_code" to="sheet_start_cell"/>
                        </a:mapping>
                    </a:field> -->
                    <a:field name="sheet_name" readOnly="true"/>
                    <a:field name="sheet_datasource" readOnly="true"/>
                    <a:field name="sheet_datasource_title" readOnly="true"/>
                    <a:field name="sheet_start_cell" required="true"/>
                    <a:field name="sheet_start_position" required="true"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="report_sheet_columns_result_ds" fetchAll="true" model="rpt.RPT1020.rpt_report_sheet_columns" queryDataSet="report_sheet_columns_query_ds" selectable="true">
                <a:fields>
                    <a:field name="column_id"/>
                    <a:field name="sheet_id"/>
                    <a:field name="parent_column_id"/>
                    <a:field name="parent_column_id_display" displayField="column_title" options="parent_column_option" returnField="parent_column_id" valueField="parent_column_id"/>
                    <a:field name="column_type"/>
                    <a:field name="column_type_display" displayField="name" options="operator_ds" required="true" returnField="column_type" valueField="value"/>
                    <!-- <a:field name="group_formula_display" displayField="code_value_name" options="sheet_group_formula_ds" returnField="group_formula" valueField="code_value"/> -->
                    <!--  <a:field name="column_content"/> -->
                    <a:field name="column_title" required="true"/>
                    <a:field name="column_seq" required="true"/>
                    <a:field name="header_style"/>
                    <a:field name="cell_style"/>
                    <a:field name="footnote_type"/>
                    <a:field name="footnote_content"/>
                    <a:field name="group_level"/>
                    <a:field name="name"/>
                    <a:field name="header_style" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovService="rpt.rpt_report_color_style_lov" lovWidth="400" prompt="RPT_REPORT_SHEET_COLUMNS.HEADER_STYLE" title="RPT_REPORT_SHEET_COLUMNS.HEADER_STYLE">
                        <a:mapping>
                            <a:map from="value" to="header_style"/>
                            <!-- <a:map from="name" to="header_style_name"/> -->
                        </a:mapping>
                    </a:field>
                    <a:field name="cell_style" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovService="rpt.rpt_report_color_style_lov" lovWidth="400" prompt="RPT_REPORT_SHEET_COLUMNS.CELL_STYLE" title="RPT_REPORT_SHEET_COLUMNS.CELL_STYLE">
                        <a:mapping>
                            <a:map from="value" to="cell_style"/>
                            <!-- <a:map from="name" to="cell_style_name"/> -->
                        </a:mapping>
                    </a:field>
                    <a:field name="column_content" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovService="rpt.RPT1020.rpt_datasource_field_lov?datasource_id=${/parameter/@datasource_id}" lovWidth="400" prompt="RPT_REPORT_SHEET_COLUMNS.COLUMN_CONTENT" required="true" title="RPT_REPORT_SHEET_COLUMNS.COLUMN_CONTENT">
                        <a:mapping>
                            <a:map from="field_name" to="column_content"/>
                            <a:map from="field_title" to="column_title"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="group_field" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovService="rpt.RPT1020.rpt_datasource_field_lov?datasource_id=${/parameter/@datasource_id}" lovWidth="400" prompt="RPT_REPORT_SHEET_COLUMNS.GROUP_FIELD" title="RPT_REPORT_SHEET_COLUMNS.GROUP_FIELD">
                        <a:mapping>
                            <a:map from="field_name" to="group_field"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="group_formula_display" lovAutoQuery="true" lovGridHeight="320" lovHeight="450" lovService="rpt.RPT1020.rpt_report_sheet_group_lov" lovWidth="400" prompt="RPT_REPORT_SHEET_COLUMNS.GROUP_FORMULA" title="RPT_REPORT_SHEET_COLUMNS.GROUP_FORMULA">
                        <a:mapping>
                            <a:map from="code" to="group_formula"/>
                            <a:map from="formula" to="group_formula_display"/>
                            <a:map from="group_desc" to="group_desc"/>
                            <a:map from="total_desc" to="total_desc"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="group_formula"/>
                    <a:field name="group_desc" readOnly="true"/>
                    <a:field name="total_desc" readOnly="true"/>
                </a:fields>
                <a:events>
                    <a:event name="add" handler="setinitdata"/>
                    <a:event name="update" handler="onUpdate"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:form title="RPT_REPORT_SHEET_COLUMNS.TITLE" width="600">
                <a:box column="2" labelWidth="110" row="3">
                    <a:textField name="sheet_name" bindTarget="report_sheet_columns_query_ds" prompt="RPT_REPORT_SHEETS.SHEET_NAME"><![CDATA[
                ]]></a:textField>
                    <a:textField name="sheet_datasource_title" bindTarget="report_sheet_columns_query_ds" prompt="RPT_REPORT_SHEETS.SHEET_DATASOURCE"><![CDATA[
                ]]></a:textField>
                    <a:textField name="sheet_start_cell" bindTarget="report_sheet_columns_query_ds" prompt="RPT_REPORT_SHEETS.SHEET_START_CELL"/>
                    <!-- <a:lov name="sheet_start_cell" bindTarget="report_sheet_columns_query_ds" prompt="报表页起始单元格"/> -->
                    <a:numberField name="sheet_start_position" allowDecimals="false" bindTarget="report_sheet_columns_query_ds" prompt="RPT_REPORT_SHEETS.SHEET_START_POSITION"/>
                    <!-- <a:textField name="sheet_group_desc" bindTarget="report_sheet_columns_query_ds" prompt="RPT_REPORT_SHEETS.SHEET_GROUP_DESC"/> -->
                </a:box>
                <a:button click="savetype" text="PROMPT.SAVE"/>
            </a:form>
            <!-- <a:hBox>
                <a:button click="backtype" text="PROMPT.RETURN"/>
            </a:hBox> -->
            <a:hBox>
                <!-- <a:button click="delete_report" text="删除"/> -->
                <a:button click="batch_datasource" text="RPT_REPORT_SHEETS.BATCH_DISTRIBUTION"/>
            </a:hBox>
            <a:grid id="grid" bindTarget="report_sheet_columns_result_ds" height="340" navBar="true" width="930">
                <a:toolBar>
                    <a:button click="lineNewFunction" icon="${/request/@context_path}/images/add.gif" text="PROMPT.NEW"/>
                    <a:button click="delete_report" icon="${/request/@context_path}/images/remove.gif" text="PROMPT.DELETE"/>
                    <!-- <a:button type="delete"/> -->
                    <a:button type="save"/>
                </a:toolBar>
                <a:columns>
                    <a:column name="column_seq" editor="rpt_sheet_nf" width="80"/>
                    <!-- <a:column name="parent_column_id_display" editor="editor_cob" prompt="RPT_REPORT_SHEET_COLUMNS.PARENT_COLUMN" width="80"/> -->
                    <a:column name="column_type_display" editor="editor_cob" editorFunction="columnTypeEdit" prompt="RPT_REPORT_SHEET_COLUMNS.COLUMN_TYPE" width="80"/>
                    <a:column name="column_content" editor="rpt_sheet_lov" editorFunction="columnContentEdit" width="80"/>
                    <a:column name="column_title" editor="textfield_editor2" width="80"/>
                    <a:column name="header_style" editor="rpt_sheet_lov" editorFunction="headerStyleEdit" width="80"/>
                    <a:column name="cell_style" editor="rpt_sheet_lov" width="80"/>
                    <!-- <a:column name="footnote_type" editor="textfield_editor2" editorFunction="footnoteTypeEdit" width="80"/>
                    <a:column name="footnote_content" editor="textfield_editor2" editorFunction="footnoteContentEdit" width="80"/> -->
                    <a:column name="group_level" editor="rpt_sheet_nf" width="100"/>
                    <!-- <a:column name="group_formula_display" editor="editor_cob" prompt="RPT_REPORT_SHEET_COLUMNS.GROUP_FORMULA" width="80"/> -->
                    <a:column name="group_formula_display" editor="rpt_sheet_lov" prompt="RPT_REPORT_SHEET_COLUMNS.GROUP_FORMULA" width="80"/>
                    <a:column name="group_desc" editor="textfield_editor2" prompt="RPT_REPORT_SHEETS.SHEET_GROUP_DESC" width="80"/>
                    <a:column name="group_field" editor="rpt_sheet_lov" width="80"/>
                    <a:column name="total_desc" editor="textfield_editor2" prompt="RPT_REPORT_SHEET_COLUMNS.TOTAL_DESC" width="80"/>
                    <a:column name="locked_cell" editor="textfield_editor2" prompt="RPT_REPORT_SHEET_COLUMNS.LOCKED_CELL" width="80"/>
                    <a:column name="field_width" editor="textfield_editor2" prompt="RPT_REPORT_SHEET_COLUMNS.FIELD_WIDTH" width="80"/>
                    <a:column name="field_type" editor="textfield_editor2" prompt="RPT_REPORT_SHEET_COLUMNS.FIELD_TYPE" width="80"/>
                </a:columns>
                <a:editors>
                    <a:textField id="textfield_editor2"/>
                    <a:comboBox id="editor_cob"/>
                    <a:lov id="rpt_sheet_lov"/>
                    <a:numberField id="rpt_sheet_nf" allowDecimals="false" allowNegative="false"/>
                </a:editors>
                <a:events>
                    <a:event name="cellclick" handler="cellclickFun"/>
                </a:events>
            </a:grid>
        </a:screenBody>
        <script><![CDATA[
           init();
        ]]></script>
    </a:view>
</a:screen>
