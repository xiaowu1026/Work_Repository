<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: machao1505 $
    $Date: 2010/12/21 09:04:27 $
    $Revision: 1.12 $
    $Purpose: 功能定义
-->
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure/>
    <a:view>
        <a:link id="sys_function_getcontainsbm_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_getcontainsbm.svc"/>
        <a:link id="bm_accesscheck_link" model="sys.SYS8010.bm_accesscheck" modelaction="query"/>
        <a:link id="sys_function_service_link_1" model="sys.SYS8010.sys_function_service" modelaction="query"/>
        <a:link id="sys_function_autobm_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_autobm.svc"/>
        <a:link id="sys_function_makezip_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_makezip.svc"/>
        <a:link id="sys_function_tree_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_tree.screen"/>
        <a:link id="sys_function_bm_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_bm.screen"/>
        <a:link id="sys_function_service_link" url="${/request/@context_path}/modules/sys/SYS8010/sys_function_service.screen"/>
        <script><![CDATA[
            //onerror = function(m, u, l) {
            //    alert("msg:"+m + "\nurl:" + u + "\nlin:" + l);
            //};
            
            function queryFunction() {
                $('sys_function_result_ds').query();
            }
            
            function resetFunction() {
                $('sys_function_query_ds').reset();
            }
            
            function assignPageRenderer(value, record, name) {
                var f_id = record.get('function_id');
                var f_type = record.get('function_type');
                if (!f_id || f_type == 'G') {
                    return '';
                }
                return '<a href="javascript:openAssignPage(' + f_id + ')">${l:ACP_SYS_ACP_REQ_TYPES.ASSIGN_PAGE}</a>';
            }
            
            function openAssignPage(id) {
                new Aurora.Window({
                    id: 'sys_function_service_assign_window',
                    url: /*sys_function_service.screen*/$('sys_function_service_link').getUrl()+'?function_id=' + id,
                    title: '${l:ACP_SYS_ACP_REQ_TYPES.ASSIGN_PAGE}',
                    fullScreen: true
                });
            }
            
            function assignBmRenderer(value, record, name) {
                var f_id = record.get('function_id');
                var f_type = record.get('function_type');
                if (!f_id || f_type == 'G') {
                    return '';
                }
                return '<a href="javascript:openAssignBM(' + f_id + ')">${l:HEC_ASSIGN}BM</a>';
            }
            
            function openAssignBM(id) {
                new Aurora.Window({
                    id: 'sys_function_bm_window',
                    url: /*sys_function_bm.screen*/$('sys_function_bm_link').getUrl()+'?function_id=' + id,
                    title: '${l:HEC_ASSIGN}BM',
                    fullScreen: true
                });
            }
            
            function parentFunctionRenderer(value, record, name) {
                return ( !! value) ? value : '<font color="red">${l:ROOT}</font>';
            }
            
            function commandLineEditor(record) {
                var sal = record.get('function_type');
                return sal == 'F' ? 'sys_function_result_grid_lv' : '';
            }
            
            function onUpdate(ds, record, name, value) {
                if (name == 'function_type') {
                    if (value == 'G') {
                        record.set('command_line', '');
                    }
                    if(value!='F'){
                        record.set('service_name','');
                        record.set('service_id','');
                    }
                    record.getMeta().getField('service_name').setRequired(value == 'F');
                }
            }
            
            function viewFunctionTree() {
                new Aurora.Window({
                    id: 'sys_function_tree_window',
                    url: /*sys_function_tree.screen*/$('sys_function_tree_link').getUrl(),
                    title: '${l:FUNCTION_TREE}',
                    height: 450,
                    width: 500
                });
            }
            
            function canedit(record, name) {
                return record.isNew ? 'sys_function_result_grid_tf' : '';
            }
            
            function downloadRenderer(value, record, name) {
                var f_id = record.get('function_id');
                var f_type = record.get('function_type');
                var f_code = "'"+record.get('function_code')+"'";
                if (!f_id || f_type == 'G') {
                    return '';
                }
                return "<a href=\"javascript:downloadsrc(" + f_id+","+f_code + ")\" title='${l:SYS_FUNCTION.DOWNLOADSRC}'><img src='${/request/@context_path}/images/download.png'></img></a>";
            }
            
            function downloadsrc(f_id,fn) {
                Aurora.request({
                    url:/*sys_function_makezip.svc*/$('sys_function_makezip_link').getUrl(),
                    para:{
                        'function_id':f_id,
                        'filename':fn
                    },
                    success:function(args){
                        location.pathname = "${/request/@context_path}/"+fn+".zip";
                    }
                });
            }
            
            Array.prototype.indexOf = function(ele) {
                for (var i = 0;i < this.length;i++) {
                    if (this[i] == ele) {
                        return i;
                    }
                }
                return -1;
            };
            
            //在不重复的情况下添加新数据
            Array.prototype.union = function(ele) {
                if (this.indexOf(ele) == -1) {
                    this.add(ele);
                }
            };
            
            function retrivebm() {
                var ds = $('sys_function_result_ds');
                var recs = ds.getSelected(); //取得选定的所有行
                if (!recs.length) {
                    Aurora.showWarningMessage("${l:PROMPT.WARN}", "${l:SYS_FUNCTION.NO_SELECTION}");
                    return;
                }
            
                var nrecs = [];
                ///////取得所有需要插入的数据
                for (var i = 0;i < recs.length;i++) {
                    var f_id = recs[i].get('function_id');
                    if (!f_id || recs[i].get('function_type') != 'F' || !recs[i].validateRecord()) {
                        continue; //过滤未保存的新行,过滤不是"功能"的行,过滤没有主页面的行
                    }
                    var bma = fetchBM(f_id)[0];
                    for (var m = 0;m < bma.length;m++) {
                        nrecs.add({
                            'function_id': f_id,
                            'bm_name': bma[m],
                            'insert_option': 'Y',
                            'update_option': 'Y',
                            'delete_option': 'Y',
                            'query_option': 'Y',
                            'execute_option': 'Y',
                            '_status': 'insert'
                        });
                    }
                }
                /////
                Aurora.request({
                    url: /*sys_function_autobm.svc*/$('sys_function_autobm_link').getUrl(),
                    para: nrecs,
                    //success: function(args3) {
                    //    alert(Ext.util.JSON.encode(args3));
                    //},
                    scope: this
                });
            }
            
            
            function getRegisteredPage(function_id) {
                var pages = [];
                Aurora.request({ //取得当前功能所分配的页面
                    url: /*${/request/@context_path}/autocrud/sys.sys_function_service/query*/$('sys_function_service_link_1').getUrl()+'?function_id=' + function_id,
                    success: function(args0) {
                        if (!args0.result.record) {
                            return;
                        }
                        pages = [].concat(args0.result.record);
                    },
                    scope: this,
                    sync: true
                });
                return pages;
            }
            
            //取得页面已经注册过的BM,数组
            
            function getRegisteredBM(function_id) {
                var bmArrayo = [];
                Aurora.request({
                    url: /*${/request/@context_path}/autocrud/sys.bm_accesscheck/query*/$('bm_accesscheck_link').getUrl()+'?function_id=' + function_id,
                    success: function(args2) {
                        if (!args2.result.record) {
                            return;
                        }
                        var recs = [].concat(args2.result.record);
                        for (var i = 0;i < recs.length;i++) {
                            var sn = recs[i].bm_name.trim();
                            if (sn.length > 0) { //去掉空的,以及重复的
                                bmArrayo.union(sn);
                            }
                        }
                    },
                    scope: this,
                    sync: true
                });
                return bmArrayo;
            }
            
            //取得所有应该注册但还没有注册bm,和已经注册过的bm
            
            function fetchBM(function_id) {
                var bmArray = []; //页面中引用了但还没有注册的bm
                var bmArrayo = getRegisteredBM(function_id);
            
                var pages = getRegisteredPage(function_id);
                for (var i = 0;i < pages.length;i++) { //对于每个页面...
                    Aurora.request({ //对于每个页面,取得其关联的bm
                        url: /*sys_function_getcontainsbm.svc*/$('sys_function_getcontainsbm_link').getUrl(),
                        para: {
                            'scrpath': pages[i].service_name
                        },
                        success: function(args1) {
                            var bmrs = args1.result.record;
                            if (!bmrs) {
                                return;
                            }
                            bmrs = [].concat(bmrs);
                            for (var j = 0;j < bmrs.length;j++) {
                                if (bmrs[j].bm.length > 0) {
                                    if (bmArrayo.indexOf(bmrs[j].bm) == -1) {
                                        bmArray.union(bmrs[j].bm);
                                    }
                                }
                            }
                        },
                        scope: this,
                        sync: true
                    });
                }
                //Aurora.showMessage("",bmArrayo.length+" "+bmArray.length+"\n"+bmArray.join('\r'));
                return [bmArray, bmArrayo];
            }
            
           ]]></script>
        <a:dataSets>
            <a:dataSet id="sys_function_type_ds" lookupCode="FUNCTION_TYPE"/>
            <a:dataSet id="sys_function_query_ds">
                <a:fields>
                    <a:field name="parent_function_name" autoComplete="true" autoCompleteField="function_name" lovGridHeight="300" lovHeight="460" lovService="sys.SYS8010.sys_function" lovWidth="480" title="PARENT_CODE_SELECT">
                        <a:mapping>
                            <a:map from="function_id" to="parent_function_id"/>
                            <a:map from="function_name" to="parent_function_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="function_type_display" displayField="code_value_name" options="sys_function_type_ds" returnField="function_type" valueField="code_value"/>
                    <a:field name="weixin_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                </a:fields>
            </a:dataSet>
            <a:dataSet id="sys_function_result_ds" autoPageSize="true" autoQuery="true" model="sys.SYS8010.sys_function" queryDataSet="sys_function_query_ds" queryUrl="${/request/@context_path}/autocrud/sys.SYS8010.sys_function/query?ORDER_FIELD=function_code" selectable="true">
                <a:fields>
                    <a:field name="function_code" required="true"/>
                    <a:field name="function_name" required="true"/>
                    <a:field name="parent_function_name" autoComplete="true" autoCompleteField="function_name" lovGridHeight="320" lovHeight="450" lovService="sys.SYS8010.sys_function" lovWidth="500" title="PARENT_CODE_SELECT">
                        <a:mapping>
                            <a:map from="function_id" to="parent_function_id"/>
                            <a:map from="function_name" to="parent_function_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="service_name" autoComplete="true" autoCompleteField="service_name" lovGridHeight="320" lovHeight="450" lovService="sys.sys_service" lovWidth="500" title="PAGE_SELECT">
                        <a:mapping>
                            <a:map from="service_id" to="service_id"/>
                            <a:map from="service_name" to="service_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="function_type_display" displayField="code_value_name" options="sys_function_type_ds" required="true" returnField="function_type" valueField="code_value"/>
                    <a:field name="weixin_flag" checkedValue="Y" defaultValue="N" uncheckedValue="N"/>
                    <a:field name="icon_count_query_url" autoQuery="false" lovGridHeight="330" lovHeight="460" lovService="sys.sys_weixin_service_lov" lovWidth="450" model="sys.sys_weixin_service_lov" queryDataSet="sys_service_weixin_lov_query_ds" title="PAGE_SELECT">
                        <a:mapping>
                            <a:map from="service_id" to="service_id"/>
                            <a:map from="service_name" to="service_name"/>
                        </a:mapping>
                    </a:field>
                    <a:field name="icon_count_query_url"/>
                </a:fields>
                <a:events>
                    <a:event name="update" handler="onUpdate"/>
                </a:events>
            </a:dataSet>
        </a:dataSets>
        <a:screenBody>
            <a:screenTopToolbar>
                <a:screenTitle/>
                <a:toolbarButton click="resetFunction" text="HAP_RESET" width="80"/>
                <a:toolbarButton click="viewFunctionTree" text="VIEW_FUNCTION_TREE" width="80"/>
                <a:gridButton bind="grid" type="add" width="80"/>
                <a:gridButton bind="grid" type="delete" width="80"/>
                <a:gridButton bind="grid" type="save" width="80"/>
                <a:toolbarButton click="retrivebm" text="FetchBM" width="80"/>
            </a:screenTopToolbar>
            <a:queryForm bindTarget="sys_function_query_ds" resultTarget="sys_function_result_ds" style="width:100%;border:none">
                <a:formToolBar>
                    <a:textField name="function_code" bindTarget="sys_function_query_ds" prompt="FND_FUNCTION.FUNCTION_CODE" typeCase="upper"/>
                    <a:textField name="function_name" bindTarget="sys_function_query_ds" prompt="FND_FUNCTION.FUNCTION_NAME"/>
                    <a:lov name="parent_function_name" bindTarget="sys_function_query_ds" prompt="PARENT_CODE"/>
                </a:formToolBar>
                <a:formBody column="4">
                    <a:comboBox name="function_type_display" bindTarget="sys_function_query_ds" prompt="FUNCTION_TYPE"/>
                    <a:checkBox name="weixin_flag" bindTarget="sys_function_query_ds" prompt="SYS_FUNCTION.WEIXIN_FLAG" width="100"/>
                </a:formBody>
            </a:queryForm>
            <a:grid id="grid" bindTarget="sys_function_result_ds" marginHeight="134" marginWidth="45" navBar="true">
                <a:columns>
                    <a:column name="function_code" align="center" editorFunction="canedit" lock="true" sortable="true" width="80"/>
                    <a:column name="function_name" editor="sys_function_result_grid_name" lock="true" width="150"/>
                    <a:column name="parent_function_name" editor="sys_function_result_grid_lv" prompt="PARENT_CODE" renderer="parentFunctionRenderer" width="150"/>
                    <a:column name="function_type_display" align="center" editor="sys_function_result_grid_cb" prompt="FUNCTION_TYPE" width="80"/>
                    <a:column name="sequence" align="center" editor="sys_function_result_grid_nf" prompt="SORT_NUM" sortable="true" width="50"/>
                    <a:column name="service_name" editor="sys_function_result_grid_lv" prompt="PAGE" width="250"/>
                    <a:column name="icon" editor="sys_function_result_grid_name" prompt="ICON_PATH" width="80"/>
                    <a:column name="icon_count_query_url" editor="sys_function_result_grid_lv" width="150"/>
                    <a:column name="asignPage" align="center" prompt="ACP_SYS_ACP_REQ_TYPES.ASSIGN_PAGE" renderer="assignPageRenderer" width="80"/>
                    <a:column name="asignBm" align="center" prompt="HEC_ASSIGN_BM" renderer="assignBmRenderer" width="80"/>
                    <a:column name="downsrc" align="center" prompt="PROMPT.DOWNLOAD" renderer="downloadRenderer" width="50"/>
                    <a:column name="weixin_flag" align="center" checkedValue="Y" editor="sys_function_result_grid_ckb" prompt="SYS_FUNCTION.WEIXIN_FLAG" uncheckedValue="N" width="100"/>
                </a:columns>
                <a:editors>
                    <a:textField id="sys_function_result_grid_tf" typeCase="upper"/>
                    <a:textField id="sys_function_result_grid_name"/>
                    <a:numberField id="sys_function_result_grid_nf" allowdecimals="false"/>
                    <a:comboBox id="sys_function_result_grid_cb"/>
                    <a:lov id="sys_function_result_grid_lv"/>
                    <a:textArea id="sys_function_ta"/>
                    <a:checkBox id="sys_function_result_grid_ckb"/>
                </a:editors>
                <a:events>
                    <a:event name="update" handler="commandLineEditor"/>
                </a:events>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
