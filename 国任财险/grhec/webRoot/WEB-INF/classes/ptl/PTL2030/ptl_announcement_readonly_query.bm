<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Zealot  
    $Date: 2015-4-28 下午2:40:44  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            select * from (
			select a.announcement_id,
			       a.doc_id,
			       a.announcement_type_id,
			       (select tv.type_name
			          from ptl_announcement_types_vl tv
			         where tv.announcement_type_id = a.announcement_type_id) as announcement_type_desc,
			       a.employee_id,
			       (select e.name
			          from exp_employees e
			         where e.employee_id = a.employee_id) as employee_name,
			       a.announce_employee_id,
			       (select e.name
			          from exp_employees e
			         where e.employee_id = a.announce_employee_id) as announce_employee_name,
			       to_char(a.announce_date,'YYYY-MM-DD') as announce_date,
			       a.importance_level,
			       (select v.code_value_name
			          from sys_codes_vl c, sys_code_values_vl v
			         where c.code_id = v.code_id
			           and c.code = 'PTL_ANNOUNCEMENT_IMPORTANCE_LEVEL'
			           and v.code_value = a.importance_level) as importance_level_desc,
			       a.deadline,
			       a.version,
			       a.status,
			       (select scv.code_value_name
			          from sys_codes c, sys_code_values_vl scv
			         where c.code_id = scv.code_id
			           and c.code = 'PTL_ANNOUNCEMENT_STATUS'
			           and scv.code_value = a.status) as status_desc,
			       a.read_count,
			       a.mark_count,
			       a.up_count,
			       a.down_count,
			       a.reply_count,
			       d.doc_category,
			       (select v.code_value_name
			          from sys_codes_vl c, sys_code_values_vl v
			         where c.code_id = v.code_id
			           and c.code = 'PTL_DOC_CATEGORY'
			           and v.code_value = d.doc_category) as doc_category_desc,
			       d.doc_title,
			       d.doc_subtitle,
			       d.doc_summarize,
			       d.author_name,
			       d.ref_url,
			       (select to_char(wm_concat(t.tag_desc))
	                  from ptl_doc_tags t
	                 where exists (select 1
	                          from ptl_doc_tag_ref r
	                         where r.tag_id = t.tag_id
	                           and r.doc_id = d.doc_id)) as tags,
	               p.portal_id,
	               p.portal_title,
               	   pe.element_title,
	               ptl_announcement_pkg.ptl_resource_prv_new_check('ANNOUNCEMENT',
                                                                 a.announcement_id,
                                                                 'DELETE',
                                                                 ${/session/@user_id}) as delete_flag
			  from ptl_documents             d,
	               ptl_announcements         a,
	               ptl_portals_vl            p,
	               ptl_elements              pe,
	               ptl_ele_announce_type_ref tr
	         where d.doc_id = a.doc_id
	           and p.portal_id = pe.portal_id
	           and pe.element_id = tr.element_id
	           and a.created_by = ${/session/@user_id}
	           and tr.announcement_type_id (+)= a.announcement_type_id
			 	   and ptl_announcement_pkg.ptl_resource_prv_new_check('ANNOUNCEMENT',
                                                                 a.announcement_id,
                                                                 'READ',
                                                                 ${/session/@user_id}) = 'Y'
				order by decode(a.importance_level,'TOP',1,'ESSENCE',2,'NORMAL',3,4) asc,a.announce_date desc                                                                  
                                                                 )
			 v #WHERE_CLAUSE#
			 #ORDER_BY_CLAUSE#
		]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="announcement_id" queryExpression="v.announcement_id = ${@announcement_id}"/>
        <bm:query-field name="doc_id" queryExpression="v.doc_id = ${@doc_id}"/>
        <bm:query-field name="announcement_type_id" queryExpression="v.announcement_type_id = ${@announcement_type_id}"/>
        <!-- <bm:query-field name="sticky_flag" queryExpression="v.sticky_flag = ${@sticky_flag}"/> -->
        <bm:query-field name="doc_category" queryExpression="v.doc_category = ${@doc_category}"/>
        <bm:query-field name="doc_title" queryExpression="v.doc_title like &apos;%&apos;|| ${@doc_title} || &apos;%&apos;"/>
        <bm:query-field name="doc_subtitle" queryExpression="v.doc_subtitle like &apos;%&apos;|| ${@doc_subtitle} || &apos;%&apos;"/>
        <bm:query-field name="doc_summarize" queryExpression="v.doc_summarize like &apos;%&apos;|| ${@doc_summarize} || &apos;%&apos;"/>
        <bm:query-field name="status" queryExpression="v.status = ${@status}"/>
        <bm:query-field name="portal_id" queryExpression="v.portal_id = ${@portal_id}"/>
        <bm:query-field name="announce_date_from" queryExpression="v.announce_date &gt;= ${@announce_date_from}"/>
        <bm:query-field name="announce_date_to" queryExpression="v.announce_date &lt;= ${@announce_date_to}"/>
        <bm:query-field name="announce_employee_id" queryExpression="v.announce_employee_id = ${@announce_employee_id}"/>
        <bm:query-field name="employee_id" queryExpression="v.employee_id = ${@employee_id}"/>
        <bm:query-field name="author_name" queryExpression="v.author_name like &apos;%&apos;|| ${@author_name} || &apos;%&apos;"/>
    </bm:query-fields>
</bm:model>
