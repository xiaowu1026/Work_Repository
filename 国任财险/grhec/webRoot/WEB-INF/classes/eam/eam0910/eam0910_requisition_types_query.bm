<?xml version="1.0" encoding="UTF-8"?>
<ns1:model xmlns:ns1="http://www.aurora-framework.org/schema/bm" xmlns:f="aurora.database.features" alias="t1" extend="eam.eam_requisition_types_base" extendMode="reference">
    <ns1:fields>
        <ns1:field name="ast_requisition_type_id"/>
        <ns1:field name="asset_book_id"/>
        <ns1:field name="ast_requisition_type_code"/>
        <ns1:field name="description_id" multiLanguage="true" multiLanguageDescField="description"/>
        <ns1:field name="page_service"/>
        <ns1:field name="base_trx_category"/>
        <ns1:field name="default_trx_type_id"/>
        <ns1:field name="auto_approve_flag"/>
        <ns1:field name="enabled_flag"/>
        <ns1:field name="description"/>
    </ns1:fields>
    <ns1:features>
        <f:multi-language-storage/>
    </ns1:features>
    <ns1:query-fields>
        <ns1:query-field field="asset_book_id" queryOperator="="/>
        <ns1:query-field name="ast_requisition_type_id" queryExpression="exists(select 1 from eam_req_type_ref_user_groups g, exp_user_group_lines l WHERE l.expense_user_group_id = g.user_group_id AND g.ast_requisition_type_id = t1.ast_requisition_type_id AND l.employee_id = ${@employee_id})"/>
    </ns1:query-fields>
    <ns1:data-filters>
        <ns1:data-filter expression="t1.enabled_flag=&apos;Y&apos; and exists (select 1    from fnd_companies fc, eam_asset_books b   where fc.set_of_books_id = b.set_of_book_id     and b.asset_book_id = t1.asset_book_id     and fc.company_id = nvl(${/parameter/@company_id},${/session/@company_id}))"/>
    </ns1:data-filters>
</ns1:model>
