<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: hp  
    $Date: 2015-12-4 上午10:01:49  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
       SELECT t.*
  FROM (SELECT h.asset_book_id,
               a.asset_book_code,
               a.description asset_book_desc,
               h.asset_id,
               h.responsibility_company_id,
               (SELECT fvl.company_code
                  FROM fnd_companies_vl fvl
                 WHERE fvl.company_id = h.responsibility_company_id) responsibility_company_code,
               (SELECT fvl.company_short_name
                  FROM fnd_companies_vl fvl
                 WHERE fvl.company_id = h.responsibility_company_id) responsibility_company_desc,
               h.using_unit_id,
               (SELECT v.unit_code
                  FROM exp_org_unit_vl v
                 WHERE v.unit_id = h.using_unit_id) AS using_unit_code,
               (SELECT v.description
                  FROM exp_org_unit_vl v
                 WHERE v.unit_id = h.using_unit_id) AS using_unit_desc,
               h.tag_number,
               h.asset_name,
               h.category_id,
               (SELECT MAX(v.category_code)
                  FROM eam_asset_categories_vl v
                 WHERE v.category_id = h.category_id) AS category_code,
               (SELECT MAX(v.description)
                  FROM eam_asset_categories_vl v
                 WHERE v.category_id = h.category_id) AS category_desc,
               h.fin_class_id,
               (SELECT v.description
                  FROM eam_asset_fin_classes_vl v
                 WHERE v.class_id = h.fin_class_id) AS fin_class_desc,
               (SELECT v.class_code
                  FROM eam_asset_fin_classes_vl v
                 WHERE v.class_id = h.fin_class_id) AS fin_class_code,
               h.entity_class_id,
               (SELECT cvl.class_code
                  FROM eam_asset_entity_classes_vl cvl
                 WHERE cvl.class_id = h.entity_class_id) entity_class_code,
               (SELECT cvl.description
                  FROM eam_asset_entity_classes_vl cvl
                 WHERE cvl.class_id = h.entity_class_id) entity_class_desc,
               h.entity_sub_classes_id,
               (SELECT cvl.entity_sub_class_code 
                  FROM EAM_ASSET_ENTITY_CLASSES_SUB cvl
                 WHERE cvl.entity_sub_class_id = h.entity_sub_classes_id) entity_sub_classes_code,
               (SELECT cvl.description 
                  FROM EAM_ASSET_ENTITY_CLASSES_SUB cvl
                 WHERE cvl.entity_sub_class_id  = h.entity_sub_classes_id) entity_sub_classes_desc,
               -- (SELECT cvl.class_code
                  -- FROM eam_asset_entity_classes_vl cvl
                 -- WHERE cvl.class_id = h.entity_sub_classes_id) entity_sub_classes_code,
               -- (SELECT cvl.description
                  -- FROM eam_asset_entity_classes_vl cvl
                 -- WHERE cvl.class_id = h.entity_sub_classes_id) entity_sub_classes_desc,
               h.entity_unit_id,
               (SELECT v.description
                  FROM exp_org_unit_vl v
                 WHERE v.unit_id = h.entity_unit_id) AS entity_unit_desc,
               f.life_in_month,
               (f.life_in_month - d.remaining_life_in_month) deprned_month,
               d.remaining_life_in_month,
               d.period_name,
               d.dep_amount,
               d.accumulated_dep_amt,
               (SELECT t.period_name
                  FROM eam_asset_dep_details t
                 WHERE t.period_name =
                       to_char(add_months(to_date(d.period_name, 'yyyy-MM'),
                                          -1),
                               'yyyy-MM')
                   AND t.asset_id = d.asset_id) period_name_before,
               (SELECT t.dep_amount
                  FROM eam_asset_dep_details t
                 WHERE t.period_name =
                       to_char(add_months(to_date(d.period_name, 'yyyy-MM'),
                                          -1),
                               'yyyy-MM')
                   AND t.asset_id = d.asset_id) dep_amount_before,
               (SELECT t.accumulated_dep_amt
                  FROM eam_asset_dep_details t
                 WHERE t.period_name =
                       to_char(add_months(to_date(d.period_name, 'yyyy-MM'),
                                          -1),
                               'yyyy-MM')
                   AND t.asset_id = d.asset_id) accumulated_dep_amt_before,
                   f.original_cost
          FROM eam_asset_headers_vl   h,
               eam_asset_finance_info f,
               eam_asset_dep_details  d,
               eam_asset_books_vl     a
         WHERE a.asset_book_id = h.asset_book_id
           AND a.enabled_flag = 'Y'
           AND h.asset_id = d.asset_id
           AND h.asset_id = f.asset_id) t
	#WHERE_CLAUSE# 
			   order by  t.asset_id ,t.period_name
   ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="asset_book_id"/>
        <bm:field name="asset_book_desc"/>
        <bm:field name="responsibility_company_id"/>
        <bm:field name="responsibility_company_desc" prompt="EAM_LOCATIONS.RESPONSIBILITY_COMPANY_DESC"/>
        <bm:field name="asset_id" prompt="EAM_ASSET_HEADERS.ASSET_ID"/>
        <bm:field name="using_unit_id"/>
        <bm:field name="using_unit_desc"/>
        <bm:field name="tag_number" prompt="EAM_ASSET_HEADERS.TAG_NUMBER"/>
        <bm:field name="asset_name"/>
        <bm:field name="category_id"/>
        <bm:field name="category_desc" prompt="EAM_ASSET_HEADERS.CATEGORY_ID"/>
        <bm:field name="fin_class_id"/>
        <bm:field name="fin_class_desc" prompt="EAM_ASSET_HEADERS.FIN_CLASS_ID"/>
        <bm:field name="entity_class_id"/>
        <bm:field name="entity_class_desc" prompt="EAM_ASSET_HEADERS.ENTITY_CLASS_ID"/>
        <bm:field name="entity_sub_classes_id"/>
        <bm:field name="entity_sub_classes_desc" prompt="EAM_ASSET_HEADERS.ENTITY_SUB_CLASSES_ID"/>
        <bm:field name="entity_unit_id"/>
        <bm:field name="entity_unit_desc"/>
        <bm:field name="life_in_month" prompt="EAM_ASSET_FINANCE_INFO.LIFE_IN_MONTH"/>
        <bm:field name="deprned_month"/>
        <bm:field name="remaining_life_in_month" prompt="EAM_ASSET_FINANCE_INFO.REMAINING_LIFE_IN_MONTH"/>
        <bm:field name="period_name" prompt="GLD_PERIODS.PERIOD_NAME"/>
        <bm:field name="dep_amount" prompt="EAM_ASSET_DEP_DETAILS.DEP_AMOUNT"/>
        <bm:field name="accumulated_dep_amt" prompt="EAM_ASSET_DEP_DETAILS.ACCUMULATED_DEP_AMT"/>
        <bm:field name="period_name_before"/>
        <bm:field name="dep_amount_before"/>
        <bm:field name="accumulated_dep_amt_before"/>
        <bm:field name="original_cost"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field field="asset_book_id" queryOperator="="/>
        <bm:query-field name="period_name_from" queryExpression="t.period_name &gt;= ${@period_name_from}"/>
        <bm:query-field name="period_name_to" queryExpression="t.period_name &lt;= ${@period_name_to}"/>
        <bm:query-field field="tag_number" queryOperator="like"/>
        <bm:query-field field="asset_name" queryOperator="like"/>
        <bm:query-field field="category_id" queryOperator="="/>
        <bm:query-field field="fin_class_id" queryOperator="="/>
        <bm:query-field field="entity_class_id" queryOperator="="/>
        <!-- <bm:query-field field="entity_sub_classes_id" queryOperator="="/> -->
        <!-- t.responsibility_company_id in (SELECT eacv.company_id  FROM  eam_asset_companies_vl eacv WHERE  eacv.parent_company_id = ${@responsibility_company_id} ) -->
        <bm:query-field field="responsibility_company_id" queryExpression="( (t.responsibility_company_id=${@responsibility_company_id} and ${@child_flag}=&apos;N&apos;) or ( EXISTS (SELECT 1 FROM  eam_asset_companies_vl eacv  WHERE eacv.parent_company_id = ${@responsibility_company_id} AND t.responsibility_company_id = eacv.company_id ) and${@child_flag}=&apos;Y&apos;  ) )"/>
        <bm:query-field field="using_unit_id" queryOperator="="/>
        <!-- <bm:query-field field="entity_unit_id" queryOperator="="/> -->
        <bm:query-field name="child_flag" queryExpression="1=1"/>
    </bm:query-fields>
</bm:model>
