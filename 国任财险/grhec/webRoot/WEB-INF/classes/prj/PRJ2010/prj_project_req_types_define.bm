<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="a.project_req_type_code,a.enabled_flag">
    <bm:fields>
        <bm:field name="project_req_type_id" databaseType="NUMBER" datatype="java.lang.Integer" physicalName="PROJECT_REQ_TYPE_ID"/> 
        <bm:field name="project_req_type_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_REQ_TYPE_CODE"  />
        <bm:field name="description" databaseType="VARCHAR2" forDisplay="true" forQuery="true"  datatype="java.lang.String" physicalName="DESCRIPTION"  />
        <bm:field name="currency_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CURRENCY_CODE"  />
        <bm:field name="currency_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CURRENCY_NAME"  />
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String"  physicalName="ENABLED_FLAG"  />  
        <bm:field name="auto_approve_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="AUTO_APPROVE_FLAG"  />  
        <bm:field name="report_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="REPORT_NAME"  /> 
        <bm:field name="project_category_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PROJECT_CATEGORY_CODE"  />
        <bm:field name="belong_templates" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BELONG_TEMPLATES"/>  
        <bm:field name="description_id"  />  
    </bm:fields>
    <bm:query-fields>
        <bm:query-field field="project_req_type_id" queryExpression="project_req_type_id like ${@project_req_type_id}"/>
        <bm:query-field field="project_req_type_code" queryExpression="project_req_type_code like ${@project_req_type_code}"/>
        <bm:query-field field="description" queryExpression="description like ${@description}"/>
    </bm:query-fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            	select *
  from (select t.PROJECT_REQ_TYPE_ID,
               t.PROJECT_REQ_TYPE_CODE,
               t.description,
               t.currency_code,
               (select currency_name
                  from gld_currency_vl
                 where currency_code = t.currency_code) currency_name,
               t.DESCRIPTION_ID,
               t.PROJECT_CATEGORY_CODE,
               sv.code_value_name as PROJECT_CATEGORY,
               t.enabled_flag,
               t.auto_approve_flag,
               t.BELONG_TEMPLATES,
               t.report_name
          from prj_project_req_types_vl t,
               (select v.code_value, v.code_value_name, v.code_value_id
                  from sys_codes_vl s, sys_code_values_vl v
                 where s.code_id = v.code_id
                   and s.code = 'PROJECT_CATEGORY') sv
         where t.PROJECT_CATEGORY_CODE = sv.code_value(+)) a
				 #WHERE_CLAUSE#
				 #ORDER_BY_CLAUSE#
				 
    		]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
            	begin
            		prj_project_req_types_pkg.insert_prj_req_types( p_project_req_type_code  =>${@project_req_type_code},
								                                           p_description            =>${@description}, 
								                                           p_currency_code          =>${@currency_code}, 
								                                           p_project_category_code  =>${@project_category_code},
								                                           p_enabled_flag           =>${@enabled_flag},
								                                           p_auto_approve_flag      =>${@auto_approve_flag}, 
								                                           p_report_name            =>${@report_name}, 
								                                           p_belong_templates       =>${@belong_templates},
								                                           p_user_id                =>${/session/@user_id}, 
								                                           p_project_req_type_id    =>${@project_req_type_id});
            	end;
        	]]></bm:update-sql>
            <bm:parameters>
                <bm:parameter name="project_req_type_id" dataType="java.lang.Integer" input="false" output="true" outputPath="@project_req_type_id"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
            	begin
            		prj_project_req_types_pkg.update_prj_req_types(p_project_req_type_id    =>${@project_req_type_id},
								                                           p_project_req_type_code 	=>${@project_req_type_code},
								                                           p_description            =>${@description},
								                                           p_currency_code          =>${@currency_code},
								                                           p_project_category_code =>${@project_category_code}, 
								                                           p_enabled_flag           =>${@enabled_flag},
								                                           p_auto_approve_flag      =>${@auto_approve_flag},  
								                                           p_report_name            =>${@report_name},  
								                                           p_belong_templates       =>${@belong_templates},  
								                                           p_user_id                =>${/session/@user_id});
            	end;
        	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
