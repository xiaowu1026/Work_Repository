<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[select *
		  from (select t.*,
					   t.amount - t.paid_amount payment_amount,
					   t.amount - t.paid_amount unpaid_amount
				  from (select h.payment_requisition_header_id,
							   l.payment_requisition_line_id,
							   h.requisition_number,
							   to_char(h.requisition_date, 'YYYY-MM-DD') requisition_date,
							   l.partner_category,
							   (select a.code_value_name
								  from sys_code_values_v a
								 where a.code = 'PAYMENT_OBJECT'
								   and a.code_value = l.partner_category) p_partner_category,
							   l.partner_id,
							   decode(l.partner_category,
									  'EMPLOYEE',
									  (select ee.employee_code || '-' || ee.name
										 from exp_employees ee
										where ee.employee_id = l.partner_id),
									  'VENDER',
									  (select svv.vender_code || '-' || svv.description
										 from pur_system_venders_vl svv
										where svv.vender_id = l.partner_id),
									  'CUSTOMER',
									  (select scv.customer_code || '-' || scv.description
										 from ord_system_customers_vl scv
										where scv.customer_id = l.partner_id)) partner_name,
							   h.payment_method_id,
							   (select m.description from csh_payment_methods_vl m where m.payment_method_id = h.payment_method_id) payment_method,
							   h.currency_code,
                               gld.currency_name,
							   (select b.description
								  from csh_transaction_classes_vl b
								 where b.csh_transaction_class_code =
									   l.csh_transaction_class_code
								   and b.csh_transaction_type_code = 'PREPAYMENT') transaction_class_desc,
							   (select a.code_value_name
								  from sys_code_values_v a
								 where a.code = 'PAYMENT_REQ_DOC_CATEGORY'
								   and a.code_value = l.payment_requisition_line_type) payment_requisition_line_type,
							   (select erh.exp_requisition_number
								  from exp_requisition_headers erh
								 where erh.exp_requisition_header_id = l.ref_document_id) ref_document_number,
							   l.amount,
							   (select nvl(sum(r.amount), 0)
								  from csh_payment_requisition_refs r
								 where r.payment_requisition_line_id =
									   l.payment_requisition_line_id) paid_amount,
							   h.employee_id,
							   h.company_id  RPT_COMP_ID,
							   ( select fv.COMPANY_CODE||'-'||fv.COMPANY_SHORT_NAME from fnd_companies_vl fv where fv.COMPANY_ID=h.company_id) REPORT_COMPANY
							   
						  from csh_payment_requisition_hds h,
							   csh_payment_requisition_lns l,
							   csh_doc_payment_company     c,
							   gld_currency_vl gld
						 where h.payment_requisition_header_id =
							   l.payment_requisition_header_id
						   and sys_user_secure_exit_pkg.csh_payment_req_payment(h.payment_requisition_header_id,${/session/@session_id})='Y'
						   and c.document_id = h.payment_requisition_header_id
						   and c.document_line_id = l.payment_requisition_line_id
						   and c.document_type = 'PAYMENT_REQUISITION'
						   and c.payment_status in ('ALLOWED', 'PAID')
						   and h.reversed_flag is null
						   and h.status ='APPROVED'
						   and c.payment_company_id = ${/session/@company_id} and h.currency_code=gld.currency_code(+)) t
				 where (t.amount - t.paid_amount) > 0) x
			where payment_requisition_header_id = ${@header_id}]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter inputPath="/session/@session_id"/>
                <bm:parameter inputPath="/session/@company_id"/>
            </bm:parameters>
        </bm:operation>
    </bm:operations>
</bm:model>
