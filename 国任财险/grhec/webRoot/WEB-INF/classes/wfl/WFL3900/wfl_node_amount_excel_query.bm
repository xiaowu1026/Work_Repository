<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: Dream  
    $Date: 2011-9-8 下午04:25:17  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[select *
  from (select fc.company_code,
               a.*,
               fc.COMPANY_SHORT_NAME,
               n.sequence_num        node_sequence,
               n.name                node_name,
               na.amount
          from (select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       E1.EXPENSE_REQUISITION_TYPE_CODE AS TYPE_CODE,
                       F.DESCRIPTION_TEXT,
                       e1.company_id,
                       w.workflow_id
                  from WFL_WORKFLOW_TRANSACTION T,
                       EXP_EXPENSE_REQ_TYPES    E1,
                       FND_DESCRIPTIONS         F,
                        WFL_WORKFLOW_VL               W
                 where T.TRANSACTION_TYPE_ID =
                       E1.EXPENSE_REQUISITION_TYPE_ID(+)
                   AND T.TRANSACTION_CATEGORY = 'EXP_REQUISITION'
                   AND E1.DESCRIPTION_ID = F.DESCRIPTION_ID(+)
                   AND F.LANGUAGE(+) = USERENV('LANG')
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and e1.enabled_flag = 'Y'
                UNION
                select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       E2.EXPENSE_REPORT_TYPE_CODE AS TYPE_CODE,
                       F.DESCRIPTION_TEXT,
                       e2.company_id,
                       w.workflow_id
                  from  WFL_WORKFLOW_TRANSACTION T,
                       EXP_EXPENSE_REPORT_TYPES E2,
                       FND_DESCRIPTIONS         F,
                        WFL_WORKFLOW_VL               W
                 where T.TRANSACTION_TYPE_ID = E2.EXPENSE_REPORT_TYPE_ID(+)
                   AND T.TRANSACTION_CATEGORY = 'EXP_REPORT'
                   AND E2.DESCRIPTION_ID = F.DESCRIPTION_ID(+)
                   AND F.LANGUAGE(+) = USERENV('LANG')
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and e2.enabled_flag = 'Y'
                UNION
                select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       E3.BGT_CHANGE_REQ_TYPE_CODE AS TYPE_CODE,
                       E3.DESCRIPTION,
                       e3.company_id,
                       w.workflow_id
                  from  WFL_WORKFLOW_TRANSACTION  T,
                        BGT_CHANGE_REQ_TYPES E3,
                        WFL_WORKFLOW_VL                W
                 where T.TRANSACTION_TYPE_ID = E3.BGT_CHANGE_REQ_TYPE_ID(+)
                   AND T.TRANSACTION_CATEGORY = 'BGT_CHANGE_REQ'
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and e3.enabled_flag = 'Y'
                union
                select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       E4.Bgt_Import_Type_Code AS TYPE_CODE,
                       E4.DESCRIPTION,
                       e4.company_id,
                       w.workflow_id
                  from  WFL_WORKFLOW_TRANSACTION T,
                       bgt_import_type     E4,
                        WFL_WORKFLOW_VL               W
                 where T.TRANSACTION_TYPE_ID = E4.Bgt_Import_Type_Id(+)
                   AND T.TRANSACTION_CATEGORY = 'BGT_PREPARE'
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and e4.enable_flag = 'Y'
                union
                select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       E4.Bgt_ver_Type_Code AS TYPE_CODE,
                       E4.DESCRIPTION,
                       e4.company_id,
                       w.workflow_id
                  from  WFL_WORKFLOW_TRANSACTION T,
                       bgt_ver_types       E4,
                        WFL_WORKFLOW_VL               W
                 where T.TRANSACTION_TYPE_ID = E4.Bgt_ver_Type_Id(+)
                   AND T.TRANSACTION_CATEGORY = 'BGT_CER_REQ'
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and e4.enable_flag = 'Y'
                UNION
                select T.TRANSACTION_CATEGORY,
                       T.TRANSACTION_TYPE_ID,
                       T.WORKFLOW_CODE,
                       W.NAME,
                       T.RECORD_ID,
                       CPRT.type_code AS TYPE_CODE,
                       F.DESCRIPTION_TEXT,
                       CPRT.company_id,
                       w.workflow_id
                  from  WFL_WORKFLOW_TRANSACTION T,
                       CSH_PAY_REQ_TYPES        CPRT,
                       FND_DESCRIPTIONS         F,
                        WFL_WORKFLOW_VL               W
                 where T.TRANSACTION_TYPE_ID = CPRT.TYPE_ID(+)
                   AND T.TRANSACTION_CATEGORY = 'PAYMENT_REQUISITION'
                   AND CPRT.DESCRIPTION_ID = F.DESCRIPTION_ID(+)
                   AND F.LANGUAGE(+) = USERENV('LANG')
                   AND T.WORKFLOW_CODE = W.WORKFLOW_CODE
                   and cprt.enabled_flag = 'Y') a,
               fnd_companies_vl fc,
               wfl_node_amount na,
                WFL_WORKFLOW_node_vl n
         where a.company_id = fc.company_id(+)
           and na.workflow_id = a.workflow_id
           and na.transaction_type_id = a.transaction_type_id
           and na.transaction_category = a.transaction_category
           and na.node_id = n.node_id)
       
       
	#WHERE_CLAUSE# order by company_code, workflow_code, type_code, node_sequence
	]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="company_code"/>
        <bm:field name="company_short_name"/>
        <bm:field name="workflow_code"/>
        <bm:field name="name"/>
        <bm:field name="type_code"/>
        <bm:field name="description_text"/>
        <bm:field name="node_sequence"/>
        <bm:field name="node_name"/>
        <bm:field name="amount"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field field="company_code" queryOperator="like"/>
        <bm:query-field field="workflow_code" queryOperator="like"/>
        <bm:query-field field="name" queryOperator="like"/>
        <bm:query-field field="type_code" queryOperator="like"/>
        <bm:query-field field="description_text" queryOperator="like"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression=" amount is not null and amount &gt; 0"/>
    </bm:data-filters>
</bm:model>
