<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:e="aurora.service.exception" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" baseTable="EXP_EMPLOYEES">
    <bm:fields>
        <bm:field name="employee_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EMPLOYEE_ID" prompt="FND_PRV_LOGIN_ACC.EMPLOYEE_CODE"/>
        <bm:field name="employee_code" databaseType="VARCHAR2" datatype="java.lang.String" forDisplay="true" forQuery="true" physicalName="EMPLOYEE_CODE" prompt="EXP_EMPLOYEE.EMPLOYEE_CODE"/>
        <bm:field name="name" databaseType="VARCHAR2" datatype="java.lang.String" forDisplay="true" forQuery="true" physicalName="NAME" prompt="EXP_EMPLOYEE.EMPLOYEE_NAME"/>
        <bm:field name="email" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EMAIL" prompt="EXP_EMPLOYEE.EMAIL"/>
        <bm:field name="mobil" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="MOBIL" prompt="EXP_EMPLOYEE.MOBIL"/>
        <bm:field name="phone" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="PHONE" prompt="EXP_EMPLOYEE.PHONE"/>
        <bm:field name="bank_of_deposit" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BANK_OF_DEPOSIT" prompt="EXP_EMPLOYEE.BANK_OF_DEPOSIT"/>
        <bm:field name="bank_account" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BANK_ACCOUNT" prompt="EXP_EMPLOYEE.BANK_ACCOUNT"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ENABLED_FLAG" prompt="EXP_EMPLOYEE.ENABLED_FLAG"/>
        <bm:field name="employee_type_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EMPLOYEE_TYPE_ID" prompt="EXP_EMPLOYEE.EMPLOYEE_TYPE"/>
        <bm:field name="id_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ID_TYPE" prompt="EXP_EMPLOYEE.ID_TYPE"/>
        <bm:field name="id_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ID_CODE" prompt="EXP_EMPLOYEE.ID_CODE"/>
        <bm:field name="notes" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="NOTES" prompt="EXP_EMPLOYEE.NOTES"/>
        <bm:field name="national_identifier" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="NATIONAL_IDENTIFIER" prompt="EXP_EMPLOYEE.NATIONAL_IDENTIFIER"/>
        <bm:field name="namecode" expression="(employee_code||&apos; - &apos;||name)" forInsert="false" forUpdate="false"/>
        <bm:field name="city_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CITY_NAME" prompt="EXP_EMPLOYEE.CITY_NAME"/>
        <bm:field name="approve_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="APPROVE_CODE" prompt="EXP_EMPLOYEE.APPROVE_CODE"/>
        <bm:field name="approve_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="APPROVE_NAME" prompt="EXP_EMPLOYEE.APPROVE_NAME"/>
        <bm:field name="edit_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EDIT_FLAG" prompt="EXP_EMPLOYEE.EDIT_FLAG"/>
        <bm:field name="sex" databaseType="VARCHAR2" datatype="java.lang.String"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="insert">
            <bm:parameters>
                <bm:parameter name="employee_id" dataType="java.lang.Long" output="true" outputPath="@employee_id"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
    		
    		begin
	          exp_employees_pkg.insert_employees_with_check(
	                             p_employee_code    =>  ${@employee_code},
	                             p_name             =>  ${@name},
	                             p_email            =>  ${@email},
	                             p_mobil            =>  ${@mobil},
	                             p_phone            =>  ${@phone},
	                             p_enabled_flag     =>  ${@enabled_flag},
	                             p_created_by       =>  ${/session/@user_id},
	                             p_bank_of_deposit  =>  ${@bank_of_deposit},
	                             p_bank_account     =>  ${@bank_account},
	                             p_employee_type_id =>  ${@employee_type_id},
	                             p_id_type          =>  ${@id_type},
	                             p_id_code          =>  ${@id_code},
	                             p_notes            =>  ${@notes},
	                             p_city_name        =>  ${@city_name},
	                             p_approve_code     =>  ${@approve_code},
	                             p_approve_name     =>  ${@approve_name},
	                             p_employee_id      =>  ${@employee_id},
	                             p_sex              =>  ${@sex},
	                             p_edit_flag		=>  ${@edit_flag}
	          ); 
        end;
    		
    		
    		
    		
    		
    		]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="employee_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field name="employee_code" queryExpression="employee_code like &apos;%&apos;||${@employee_code}||&apos;%&apos;"/>
        <bm:query-field name="name" queryExpression="name like &apos;%&apos;||${@name}||&apos;%&apos;"/>
        <bm:query-field field="employee_id" queryOperator="="/>
        <bm:query-field name="namcode" queryExpression="(employee_code||&apos; - &apos;||name) like &apos;%&apos;||${@namcode}||&apos;%&apos;"/>
        <bm:query-field name="code_name" queryExpression="(t1.employee_code like ${@code_name}||&apos;%&apos; or t1.name like &apos;%&apos;||${@code_name}||&apos;%&apos;)"/>
    </bm:query-fields>
    <bm:relations>
        <bm:relation name="r1" joinType="inner" refAlias="r1" refModel="exp.exp_employee_types_vl">
            <bm:reference foreignField="employee_type_id" localField="employee_type_id"/>
        </bm:relation>
    </bm:relations>
    <bm:ref-fields>
        <bm:ref-field name="description" relationName="r1" sourceField="description"/>
    </bm:ref-fields>
    <e:exception-descriptor-config>
        <e:exception-descriptor exception="java.sql.SQLException" handleClass="aurora.database.SQLExceptionDescriptor">
            <e:error-message code="1" message="EXP_EMPLOYEES.EMPLOYEE_CODE_DISTINCT"/>
        </e:exception-descriptor>
    </e:exception-descriptor-config>
</bm:model>
