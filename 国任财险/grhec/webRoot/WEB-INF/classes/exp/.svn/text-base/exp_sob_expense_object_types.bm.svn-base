<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:e="aurora.service.exception" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            select * from (
                select
                    t1.expense_object_type_id,
                    t1.set_of_books_id,
                    t1.expense_object_type_code,
                    t1.description_id,
                    (select
                        description_text
                    from
                        fnd_descriptions
                    where
                        description_id=t1.description_id and
                        language      =${/session/@lang}
                    ) as expense_object_type_name,
                    t1.system_flag,
                    decode(expense_object_method,'Y','系统对象','N','用户对象') as system_flag_display,
                    t1.expense_object_method,
                    t1.sql_query,
                    t1.sql_validate,
                    t1.enabled_flag
                from
                    exp_sob_expense_object_types t1 
                order by
                    expense_object_type_code
            )v
            #WHERE_CLAUSE#
             ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[ 
            begin
             exp_sob_exp_obj_types_pkg.insert_exp_obj_types( p_set_of_books_id           =>${@set_of_books_id},
					                                         p_expense_object_type_code  =>${@expense_object_type_code},
					                                         p_expense_object_type_name  =>${@expense_object_type_name},
					                                         p_system_flag               =>${@system_flag},
					                                         p_expense_object_method     =>${@expense_object_method},
					                                         p_sql_query                 =>${@sql_query},
					                                         p_sql_validate              =>${@sql_validate},
					                                         p_enabled_flag              =>${@enabled_flag},
					                                         p_user_id                   =>${/session/@user_id},
					                                         p_language_code             =>${/session/@lang} ,
					                                         p_expense_object_type_id    =>${@expense_object_type_id});
            end;
     ]]></bm:update-sql>
            <bm:parameters>
                <bm:parameter name="expense_type_id" input="false" output="true" outputPath="/parameter/@expense_type_id"/>
            </bm:parameters>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
             begin
                exp_sob_exp_obj_types_pkg.update_exp_obj_types(
						                 p_expense_object_type_id    =>${@expense_object_type_id},
						                 p_set_of_books_id           =>${@set_of_books_id},
                                         p_expense_object_type_code  =>${@expense_object_type_code},
                                         p_expense_object_type_name  =>${@expense_object_type_name},
                                         p_system_flag               =>${@system_flag},
                                         p_expense_object_method     =>${@expense_object_method},
                                         p_sql_query                 =>${@sql_query},
                                         p_sql_validate              =>${@sql_validate},
                                         p_enabled_flag              =>${@enabled_flag},
                                         p_user_id                   =>${/session/@user_id},
                                         p_language_code             =>${/session/@lang} 
                                         );  
                                         
                                         
                                       
                
            end;
         ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="expense_object_type_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EXPENSE_OBJECT_TYPE_ID"/>
        <bm:field name="set_of_books_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="SET_OF_BOOKS_ID"/>
        <bm:field name="expense_object_type_code" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.EXPENSE_OBJECT_TYPE_CODE"/>
        <bm:field name="description_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="DESCRIPTION_ID"/>
        <bm:field name="expense_object_type_name" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.EXPENSE_OBJECT_TYPE_NAME"/>
        <bm:field name="system_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="SYSTEM_FLAG"/>
        <bm:field name="system_flag_display" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.SYSTEM_FLAG"/>
        <bm:field name="expense_object_method" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EXPENSE_OBJECT_METHOD" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.EXPENSE_OBJECT_METHOD"/>
        <bm:field name="sql_query" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.SQL_QUERY"/>
        <bm:field name="sql_validate" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.SQL_VALIDATE"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" prompt="EXP_SOB_EXPENSE_OBJECT_TYPES.ENABLED_FLAG"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field name="expense_object_type_code" queryexpression="v.expense_object_type_code=${@expense_object_type_code}"/>
        <bm:query-field name="system_flag" datatype="java.lang.String" queryexpression="v.system_flag=${@system_flag}"/>
        <bm:query-field name="expense_object_type_name" datatype="java.lang.String" queryexpression="exists (select 1 from fnd_descriptions f where f.description_id = v.description_id and f.description_text like ${@expense_object_type_name})"/>
        <!-- <bm:query-field name="description" datatype="java.lang.String" queryexpression="upper(description) like '%'||upper(${@description})||'%'"/> -->
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="query" enforceOperations="query" expression="v.set_of_books_id=${/parameter/@set_of_books_id}"/>
    </bm:data-filters>
    <e:exception-descriptor-config>
        <e:exception-descriptor exception="java.sql.SQLException" handleClass="aurora.database.SQLExceptionDescriptor">
            <e:error-message code="1" message="EXP_OBJECT_CODE_DUPLICATED"/>
        </e:exception-descriptor>
    </e:exception-descriptor-config>
</bm:model>
