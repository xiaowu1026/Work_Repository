<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[        
	            select v.bank_account_id,          
	            v.bank_account_code,          
	            v.bank_account_name,
	            v.bank_account_code || '-' || v.bank_account_name bank_account_display,          
	            v.bank_account_num,          
	            v.currency_code,          
	            bv.bank_name,          
	            bbv.branch_name,          
	            bbv.address,
	            (select m.description
				  from CSH_PAYMENT_METHODS_VL m
				 where m.payment_method_code = v.bank_account_code) payment_method       
	            from csh_banks_vl bv, 
	            csh_bank_branches_vl bbv, 
	            csh_bank_accounts_vl v        
	            #WHERE_CLAUSE#       
	            order by v.enabled_flag desc,          
	            bv.bank_code,          
	            bbv.bank_branch_code,          
	            v.currency_code,          
	            v.bank_account_code 
            ]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[        		
        			begin
						CSH_PAYMENT_REQ_PAYMENT_PKG.get_pay_method_code(p_bank_code=>${@bank_account_code},
                                p_pay_method_name=>${@pay_method_name},
                                p_pay_method_code=>${@pay_method_code},
                                p_pay_method_id=>${@pay_method_id});                           
        			end;        		
        	]]></bm:update-sql>
            <bm:parameters>
                <bm:parameter name="pay_method_name" output="true" outputPath="@pay_method_name"/>
                <bm:parameter name="pay_method_code" output="true" outputPath="@pay_method_code"/>
                <bm:parameter name="pay_method_id" output="true" outputPath="@pay_method_id"/>
            </bm:parameters>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="bank_account_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="BANK_ACCOUNT_ID"/>
        <bm:field name="bank_account_name" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="240" forDisplay="true" forQuery="true" physicalName="BANK_ACCOUNT_NAME" prompt="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NAME_ID"/>
        <bm:field name="bank_account_code" databaseType="VARCHAR2" datatype="java.lang.String" forQuery="true" physicalName="BANK_ACCOUNT_CODE" prompt="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_ID"/>
        <bm:field name="payment_method" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="80" forDisplay="true" prompt="CSH_TRANSACTION_HEADERS.PAYMENT_METHOD_ID"/>
        <bm:field name="bank_account_num" databaseType="VARCHAR2" datatype="java.lang.String" displayWidth="200" forDisplay="true" forQuery="true" physicalName="BANK_ACCOUNT_NUM" prompt="CSH_BANK_ACCOUNTS.BANK_ACCOUNT_NUM"/>
        <bm:field name="currency_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="CURRENCY_CODE" prompt="CSH_BANK_ACCOUNTS.CURRENCY_CODE"/>
        <bm:field name="bank_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BANK_NAME"/>
        <bm:field name="branch_name" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BRANCH_NAME"/>
        <bm:field name="address" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ADDRESS"/>
        <bm:field name="bank_account_display" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="BANK_ACCOUNT_DISPLAY"/>
    </bm:fields>
    <bm:data-filters>
        <bm:data-filter enforceOperations="query" expression="bv.bank_code = bbv.bank_code         and bbv.bank_branch_id = v.bank_branch_id         and bv.enabled_flag = &apos;Y&apos;         and bbv.enabled_flag = &apos;Y&apos;         and v.enabled_flag = &apos;Y&apos;         and v.account_type = &apos;COMPANY_BANK_ACCOUNT&apos;         and v.company_id in (                   SELECT eea.company_id           FROM exp_employee_assigns eea          WHERE eea.employee_id =                (SELECT su.employee_id FROM sys_user su WHERE su.user_id = ${/session/@user_id})                  )         and exists (select 1          from csh_bank_account_auth a, exp_employee_assigns ea         where a.bank_account_id = v.bank_account_id           and a.authorize_position_id = ea.position_id   and ea.enabled_flag = &apos;Y&apos;           and a.enabled_flag = &apos;Y&apos;    and ea.employee_id=(select employee_id from sys_user u where u.user_id=${/session/@user_id})  and (a.authorize_date_from is null or a.authorize_date_from &lt;= nvl(to_date(${@payment_date},&apos;yyyy-mm-dd&apos;),trunc(sysdate))) and (a.authorize_date_to is null or a.authorize_date_to &gt; nvl(to_date(${@payment_date},&apos;yyyy-mm-dd&apos;),trunc(sysdate))))"/>
        <bm:data-filter enforceOperations="query" expression="v.bank_account_code = (select m.payment_method_code from CSH_PAYMENT_METHODS_VL m where m.payment_method_id= ${@payment_method_id} ) "/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field field="bank_account_name" queryOperator="like"/>
        <bm:query-field field="bank_account_num" queryOperator="like"/>
        <bm:query-field field="bank_account_code" queryOperator="like"/>
        <bm:query-field name="bank_account_display" queryExpression="(v.bank_account_code || &apos;-&apos; || v.bank_account_name) like ${@bank_account_display}"/>
        <bm:query-field name="exp_flag" queryExpression="v.company_id in (select nvl(h.pay_company_id,h.company_id) from exp_report_headers h where h.exp_report_header_id in ( select p.exp_report_header_id from exp_report_pmt_schedules p where p.payment_schedule_line_id  in (select t.payment_schedule_line_id  from    exp_report_payment_tmp t where t.session_id = ${/session/@session_id})))"/>
    </bm:query-fields>
</bm:model>
