<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    v.*,
                    (
                        CASE
                            WHEN v.payed_amount = v.total_amount
                            THEN '已支付'
                            WHEN v.payed_amount < v.total_amount AND
                                v.payed_amount  > 0
                            THEN '部分支付'
                            ELSE '未支付'
                        END ) pay_status
                FROM
                    (SELECT
                        s.exp_report_header_id,
                        (SELECT
                            cch.contract_number
                        FROM
                            con_contract_headers cch,
                            con_document_flows s
                        WHERE
                            contract_header_id     = s.document_id AND
                            s.document_type        = 'CON_CONTRACT_HEADERS' AND
                            s.source_document_type = 'EXP_REPORT_HEADERS' AND
                            s.source_document_id   = s.exp_report_header_id
                        ) contact_number,
                        'No.'
                        ||s.exp_report_number exp_requisition_number,
                        s.employee_id,
                        s.audit_flag,
                        TO_CHAR(s.audit_date, 'yyyy-mm-dd') audit_date,
                        
                        (SELECT
                            employee_code
                        FROM
                            exp_employees es
                        WHERE
                            es.employee_id = s.employee_id
                        ) employee_code,
                        (SELECT name FROM exp_employees es WHERE es.employee_id = s.employee_id
                        ) employee_name,
                        s.payee_category,
                        (SELECT
                            code_value_name
                        FROM
                            sys_code_values_vl b,
                            sys_codes a
                        WHERE
                            b.code_id  = a.code_id AND
                            a.code     = 'PAYMENT_OBJECT' AND
                            code_value = s.payee_category
                        ) payee_category_name,
                        s.payee_id,
                        DECODE(s.payee_category, 'EMPLOYEE',
                        (SELECT
                            employee_code
                            || '-'
                            || name
                        FROM
                            exp_employees ee
                        WHERE
                            ee.employee_id = s.payee_id
                        ), 'CUSTOMER',
                        (SELECT
                            vc.customer_code
                            || '-'
                            || vc.description
                        FROM
                            ord_system_customers_vl vc
                        WHERE
                            vc.customer_id = s.payee_id
                        ),
                        (SELECT
                            vv.vender_code
                            || '-'
                            || vv.description
                        FROM
                            pur_system_venders_vl vv
                        WHERE
                            vv.vender_id = s.payee_id
                        )) payee_name,
                        s.currency_code,
                        (SELECT
                            currency_name
                        FROM
                            gld_currency_vl gcv
                        WHERE
                            gcv.currency_code = s.currency_code
                        ) currency_name,
                        s.exchange_rate_type,
                        s.exchange_rate_quotation,
                        (SELECT
                            SUM(t.report_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num,
                        (SELECT
                            SUM(t.report_functional_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num_fun,
                        s.period_name,
                        s.je_creation_status,
                        s.gld_interface_flag,
                        s.created_by,
                        s.last_updated_by,
                        s.last_update_date,
                        TO_CHAR(s.report_date, 'YYYY-MM-DD') requisition_date,
                        s.exp_report_type_id exp_requisition_type_id,
                        (SELECT
                            erpv.description
                        FROM
                            exp_expense_report_types_vl erpv
                        WHERE
                            erpv.expense_report_type_id = s.exp_report_type_id
                        ) type_description,
                        (SELECT
                            erpv.expense_requisition_type_code
                        FROM
                            exp_expense_req_types_vl erpv
                        WHERE
                            erpv.expense_requisition_type_id = s.exp_report_type_id
                        ) type_code,
                        s.description,
                        s.report_status requisition_status_value,
                        DECODE(
                        (SELECT
                            b.code_value_name FROM sys_codes_vl a,
                            sys_code_values_vl b WHERE a.code_id = b.code_id AND
                            a.code                               = 'EXP_EXPENSE_REPORT_STATUS' AND
                            b.code_value                         = s.report_status
                        ),'审批','审批完成','提交','领导审批',
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       = 'EXP_EXPENSE_REPORT_STATUS' AND
                            b.code_value = s.report_status
                        )) REQUISITION_STATUS,
                        s.creation_date,
                        TO_CHAR(s.creation_date, 'yyyy-mm-dd') creation_date1,
                        (SELECT
                            NVL(SUM(w.csh_write_off_amount), 0)
                        FROM
                            csh_write_off w
                        WHERE
                            w.document_source    = 'EXPENSE_REPORT' AND
                            w.document_header_id = s.exp_report_header_id
                        ) payed_amount,
                        (SELECT
                            SUM(erps.due_amount)
                        FROM
                            exp_report_pmt_schedules erps
                        WHERE
                            erps.exp_report_header_id = s.exp_report_header_id
                        ) -
                        (SELECT
                            NVL(SUM(w.csh_write_off_amount), 0)
                        FROM
                            csh_write_off w
                        WHERE
                            w.document_source    = 'EXPENSE_REPORT' AND
                            w.document_header_id = s.exp_report_header_id
                        ) unpayment_amount,
                        (SELECT
                            tv.report_name
                        FROM
                            exp_expense_report_types_vl tv
                        WHERE
                            tv.expense_report_type_id = s.exp_report_type_id
                        ) report_name,
                        (SELECT
                            sr.param_name
                        FROM
                            exp_expense_report_types_vl tv,
                            sys_reports sr
                        WHERE
                            tv.expense_report_type_id = s.exp_report_type_id AND
                            tv.report_name            = sr.report_name AND
                            rownum                    = 1
                        ) report_param_name,
                        NVL(s.reversed_flag,'N') reversed_flag,
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       ='CSH_REVERSE_SELECT' AND
                            b.code_value = NVL(s.reversed_flag,'N')
                        ) reversed_flag_name,
                        DECODE(s.reversed_flag, 'W',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.source_exp_rep_header_id = s.exp_report_header_id
                        ), '') reverse_number,
                        DECODE(s.reversed_flag, 'R',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.exp_report_header_id = s.source_exp_rep_header_id
                        ), '') reversed_number,
                        pv.page_name,
                        (SELECT
                            '当前审批人:'
                            ||wfl_common_pkg.get_current_node(wwi.workflow_id, wwi.instance_id, wwi.current_node)
                        FROM
                            wfl_workflow_instance wwi
                        WHERE
                            wwi.document_number = s.exp_report_number AND
                            wwi.status          = 1
                        ) curr_approve_name,
                        (SELECT
                            wwi.instance_id
                        FROM
                            wfl_workflow_instance wwi
                        WHERE
                            wwi.document_number = s.exp_report_number AND
                            wwi.status          = 1
                        ) instance_id,
                        NVL(
                        (SELECT
                            SUM(nvl(l.report_amount,0))
                        FROM
                            exp_report_lines l
                        WHERE
                            l.exp_report_header_id = s.exp_report_header_id
                        ),0)total_amount,
                        NVL(
                        (SELECT
                            ss.user_name
                        FROM
                            wfl_approve_record r,
                            sys_user ss
                        WHERE
                            ss.user_id  = r.created_by AND
                            r.record_id =
                            (SELECT
                                MAX(record_id)
                            FROM
                                wfl_approve_record war,
                                wfl_workflow_instance wwi
                            WHERE
                                war.instance_id     = wwi.instance_id AND
                                wwi.document_number = s.exp_report_number AND
                                wwi.status          = 1
                            )
                        ),'null') last_approve_name,
                        NVL(s.create_type,'null') create_type
                    FROM
                        exp_report_headers s,
                        exp_expense_report_types ert,
                        exp_report_type_pages_v pv,
                        (SELECT DISTINCT
                            t2.employee_id
                        FROM
                            exp_document_authorities a,
                            exp_employee_assigns t,
                            exp_employee_assigns t2,
                            exp_org_position p,
                            exp_org_unit u,
                            sys_user su
                        WHERE
                            su.user_id      = ${@user_id} AND
                            a.document_type = '02' AND
                            (
                                a.granted_position_id IS NULL OR
                                a.granted_position_id  = t.position_id AND
                                t.enabled_flag         = 'Y' AND
                                t.company_id           = a.company_id AND
                                t.employee_id          = su.employee_id
                            )
                            AND
                            NVL(a.granted_employee_id, su.employee_id ) = su.employee_id AND
                            t2.enabled_flag                             = 'Y' AND
                            p.enabled_flag                              = 'Y' AND
                            u.enabled_flag                              = 'Y' AND
                            p.position_id                               = t2.position_id AND
                            u.unit_id                                   = p.unit_id AND
                            a.start_date                               <= sysdate AND
                            (
                                a.end_date     IS NULL OR
                                a.end_date + 1 >= sysdate
                            )
                            AND
                            a.query_authority = 'Y' AND
                            t2.company_id     = a.company_id AND
                            (
                                a.org_unit_id IS NULL OR
                                a.org_unit_id  = u.unit_id
                            )
                            AND
                            (
                                a.position_id IS NULL OR
                                a.position_id  = p.position_id
                            )
                            AND
                            (
                                a.employee_id IS NULL OR
                                a.employee_id  = t2.employee_id
                            )
                        UNION
                        SELECT su2.employee_id FROM sys_user su2 WHERE su2.user_id = ${@user_id}
                        ) x
                    WHERE
                        (
                            (
                                ${@status}       = 'new' AND
                                s.report_status IN ('GENERATE','REJECTED','TAKEN_BACK')
                            )
                            OR
                            (
                                ${@status}       = 'submit'AND
                                s.report_status IN ('SUBMITTED')
                            )
                            OR
                            (
                                ${@status}       = 'pass'AND
                                s.report_status IN ('COMPLETELY_APPROVED')
                            )
                        )
                        AND
                        ert.mobile_fill                   = 'Y' AND
                        ert.expense_report_type_id        = s.exp_report_type_id AND
                        ert.document_page_type            = pv.page_type AND
                        pv.page_usage                     = 'QUERY' AND
                        DECODE(${@authority}, NULL, 0, 1) = DECODE(${@authority}, NULL, 0, DECODE(report_status, 'GENERATE', 1, 'REJECTED', 1, 'TAKEN_BACK', 1, 0)) AND
                        (s.employee_id=x.employee_id and s.employee_id!=(select employee_id from sys_user s where s.user_id=${/session/@user_id}) and
                        s.created_by=${/session/@user_id} or s.employee_id=(select employee_id from sys_user s where s.user_id=${/session/@user_id}))
                    ) v #WHERE_CLAUSE#
                ORDER BY
                    creation_date1 DESC
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
