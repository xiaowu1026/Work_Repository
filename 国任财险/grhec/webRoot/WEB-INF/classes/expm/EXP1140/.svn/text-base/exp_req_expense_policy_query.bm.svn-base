<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        t.expense_req_policies_id,
                        t.priority,
                        t.company_level_id,
                        f.company_level_code,
                        f.description company_level_desc,
                        t.req_item_id,
                        v.req_item_code,
                        v.description req_item_desc,
                        v.set_of_books_id,
                        t.expense_address,
                        t.job_id,
                        e.employee_job_code,
                        e.employee_job_id,
                        e.employee_job_code
                        ||DECODE(e.description,NULL,NULL,'-'
                        ||e.description) job_desc,
                        t.position_id,
                        eo.position_code,
                        eo.description
                        ||' '
                        ||eo.position_code
                        ||' '
                        ||
                        (SELECT
                            c.company_short_name
                        FROM
                            fnd_companies_vl c
                        WHERE
                            c.company_id=eo.company_id
                        ) position_desc,
                        t.employee_levels_id,
                        ee.employee_levels_code,
                        ee.employee_levels_code
                        ||DECODE(ee.description,NULL,NULL,'-'
                        ||ee.description) employee_levels_desc,
                        t.default_flag default_flag_code,
                        DECODE(t.default_flag,'Y','是','否') default_flag,
                        t.currency_code currency_code_id,
                        (SELECT
                            v.currency_name name
                        FROM
                            gld_currency_vl v
                        WHERE
                            v.currency_code=t.currency_code
                        ) currency_code,
                        t.expense_standard,
                        t.upper_limit,
                        t.lower_limit,
                        t.changeable_flag AS yes_no_code,
                        DECODE(t.changeable_flag,'Y','是','否') yes_no,
                        t.start_date,
                        t.end_date,
                        t.commit_flag commit_flag_code,
                        DECODE(t.commit_flag,'Y','是','否') commit_flag,
                        t.event_name event_name_code,
                        t.upper_std_event_name upper_std_event_name_code,
                        (SELECT
                            et.event_desc
                        FROM
                            evt_event et
                        WHERE
                            et.event_name = t.upper_std_event_name
                        ) upper_std_event_name,
                        (SELECT et.event_desc FROM evt_event et WHERE et.event_name = t.event_name
                        ) event_name,
                        t.place_type_id,
                        (SELECT
                            pt.description
                        FROM
                            exp_policy_place_types_vl pt
                        WHERE
                            pt.place_type_id = t.place_type_id
                        ) place_type,
                        t.place_id,
                        (SELECT
                            p.place_desc
                        FROM
                            exp_policy_places_vl p
                        WHERE
                            p.place_id = t.place_id
                        ) place,
                        t.transportation,
                        (SELECT
                            vt.code_value_name
                        FROM
                            sys_code_values_vl vt,
                            sys_codes sc
                        WHERE
                            sc.code       = 'TRANSPORTATION' AND
                            vt.code_id    = sc.code_id AND
                            vt.code_value = t.transportation
                        ) transportation_desc
                    FROM
                        exp_req_expense_policies t,
                        fnd_company_levels_vl f,
                        exp_req_items_vl v,
                        exp_employee_jobs_vl e,
                        exp_employee_levels_vl ee,
                        exp_org_position_vl eo
                    WHERE
                        t.company_level_id        = f.company_level_id(+) AND
                        t.req_item_id             = v.req_item_id(+) AND
                        t.job_id                  = e.employee_job_id(+) AND
                        t.position_id             = eo.position_id(+) AND
                        t.employee_levels_id      = ee.employee_levels_id(+) AND
                        t.expense_req_policies_id = NVL(${@p_id}, t.expense_req_policies_id)
                    ) a #WHERE_CLAUSE#
            ]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter name="p_id"/>
            </bm:parameters>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="company_level_id" dataType="java.lang.Long" queryExpression="company_level_id = ${@company_level_id}"/>
        <bm:query-field name="req_item_id" dataType="java.lang.Long" queryExpression="req_item_id = ${@req_item_id}"/>
        <bm:query-field name="employee_job_id" dataType="java.lang.Long" queryExpression="employee_job_id = ${@employee_job_id}"/>
        <bm:query-field name="currency_code" dataType="java.lang.String" queryExpression="currency_code_id = ${@currency_code}"/>
        <bm:query-field name="employee_levels_id" dataType="java.lang.Long" queryExpression="employee_levels_id = ${@employee_levels_id}"/>
        <bm:query-field name="position_id" dataType="java.lang.Long" queryExpression="position_id = ${@position_id}"/>
        <bm:query-field name="event_name" dataType="java.lang.String" queryExpression="event_name_code = ${@event_name}"/>
        <bm:query-field name="upper_std_event_name_code" dataType="java.lang.Long" queryExpression="upper_std_event_name_code = ${@upper_std_event_name_code}"/>
        <bm:query-field name="upper_limit" dataType="java.lang.String" queryExpression="upper_limit = ${@upper_limit}"/>
        <bm:query-field name="lower_limit" dataType="java.lang.String" queryExpression="lower_limit = ${@lower_limit}"/>
        <bm:query-field name="set_of_books_id" dataType="java.lang.Long" queryExpression="a.set_of_books_id=${@set_of_books_id}"/>
    </bm:query-fields>
</bm:model>
