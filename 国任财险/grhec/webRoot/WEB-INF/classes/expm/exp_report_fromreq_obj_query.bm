<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: mouse  
    $Date: 2013-7-18 上午10:12:04  
    $Revision: 1.0  
    $Purpose: 
-->
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
select eol.expense_object_type_id,
       ero.expense_object_id,
       exp_expense_object_types_pkg.get_object_code(eol.expense_object_type_id,
                                                    ero.expense_object_id) expense_object_code,
       nvl(exp_expense_object_types_pkg.get_object_description(eol.expense_object_type_id,
                                                               ero.expense_object_id),
           ero.expense_object_desc) expense_object_description,
       '#' || eol.expense_object_type_id as forname,
       v.description,
       l.exp_requisition_line_id,
       eol.expense_object_type_id,
       '^#' || v.expense_object_type_id as expense_object_type_code
  from exp_req_objects_layouts     eol,
       exp_requisition_objects     ero,
       exp_expense_object_types_vl v,
       exp_requisition_lines       l
 where eol.layout_position = 'DOCUMENTS_LINE'
   and eol.expense_object_type_id = ero.expense_object_type_id
   and eol.expense_requisition_header_id = l.exp_requisition_header_id
   and ero.expense_requisition_line_id = l.exp_requisition_line_id
   and v.expense_object_type_id = ero.expense_object_type_id
   AND eol.expense_requisition_header_id in (
		   	select l.exp_requisition_header_id
			  from exp_requisition_lines l,
			       exp_requisition_headers h,
			       exp_expense_req_types rt,
		       (select t2.employee_id
		          from exp_document_authorities a,
		               exp_employee_assigns     t,
		               exp_employee_assigns     t2,
		               exp_org_position         p,
		               exp_org_unit             u,
		               sys_user                 su
		         where su.user_id = ${/session/@user_id}
		           and a.document_type = '01'
		           and (a.granted_position_id is null or
		               a.granted_position_id = t.position_id and
		               t.enabled_flag = 'Y' and t.company_id = a.company_id and
		               t.employee_id = su.employee_id)
		           and nvl(a.granted_employee_id, su.employee_id) = su.employee_id
		           and t2.enabled_flag = 'Y'
		           and p.enabled_flag = 'Y'
		           and u.enabled_flag = 'Y'
		           and p.position_id = t2.position_id
		           and u.unit_id = p.unit_id
		           and a.start_date <= sysdate
		           and (a.end_date is null or a.end_date + 1 >= sysdate)
		           and ((${@authority} = 'MAINTENANCE' and
		               a.maintenance_authority = 'Y') or
		               (${@authority} is null and a.query_authority = 'Y'))
		           and t2.company_id = a.company_id
		           and (a.org_unit_id is null or a.org_unit_id = u.unit_id)
		           and (a.position_id is null or a.position_id = p.position_id)
		           and (a.employee_id is null or a.employee_id = t2.employee_id)
		         group by t2.employee_id
		        union
		        select su2.employee_id
		          from sys_user su2
		         where su2.user_id = ${/session/@user_id}) x
		   where l.exp_requisition_header_id = h.exp_requisition_header_id
		   and h.exp_requisition_type_id = rt.expense_requisition_type_id
		   and rt.expense_report_type_id = ${@exp_report_type_id}
		   and h.employee_id = x.employee_id
		   and h.company_id = ${/session/@company_id}
		   and h.currency_code = ${@currency_code}
		   and not exists  (select 1
					          from exp_requisition_headers eh,
					               exp_requisition_lines   el,
					               exp_requisition_dists   ed
					         where eh.exp_requisition_header_id = el.exp_requisition_header_id
					           and el.exp_requisition_line_id = ed.exp_requisition_line_id
					           and ed.close_flag = 'Y'
					           and eh.exp_requisition_header_id = l.exp_requisition_header_id)
   )
 order by l.exp_requisition_line_id, eol.layout_priority
 
 ]]></bm:query-sql>
            <bm:parameters>
                <bm:parameter inputPath="/parameter/@exp_req_head_id"/>
            </bm:parameters>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="expense_object_type_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EXPENSE_OBJECT_TYPE_ID" required="true"/>
        <bm:field name="expense_object_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EXPENSE_OBJECT_ID"/>
        <bm:field name="expense_object_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EXPENSE_OBJECT_CODE"/>
        <bm:field name="expense_object_description" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EXPENSE_OBJECT_DESCRIPTION"/>
        <bm:field name="forname" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="FORNAME"/>
        <bm:field name="description" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="DESCRIPTION"/>
        <bm:field name="exp_requisition_line_id" databaseType="NUMBER" datatype="java.lang.Long" physicalName="EXP_REQ_TRAVEL_LINE_ID" required="true"/>
        <bm:field name="expense_object_type_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EXPENSE_OBJECT_TYPE_CODE"/>
    </bm:fields>
</bm:model>
