<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:o="aurora.database.local.oracle" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" baseTable="WFL_WORKFLOW_TRANSACTION">
    <bm:fields>
        <bm:field name="transaction_category" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="TRANSACTION_CATEGORY" prompt="WFL_WORKFLOW_TRANSACTION.TRANSACTION_CATEGORY"/>
        <bm:field name="transaction_category_code" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_CATEGORY" prompt="WFL_WORKFLOW_TRANSACTION.TRANSACTION_CATEGORY"/>
        <bm:field name="transaction_type_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="TRANSACTION_TYPE_ID" prompt="WFL_WORKFLOW_TRANSACTION.TRANSACTION_TYPE_ID"/>
        <bm:field name="type_code" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_TYPE_ID" prompt="CSH_CASH_PLAN_TYPES.TYPE_CODE"/>
        <bm:field name="workflow_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="WORKFLOW_CODE" prompt="WFL_WORKFLOW_TRANSFER.WORKFLOW_ID"/>
        <bm:field name="record_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="RECORD_ID" prompt="WFL_WORKFLOW_TRANSACTION.RECORD_ID"/>
        <bm:field name="description_text" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_TYPE_ID" prompt="CSH_CASH_PLAN_TYPES.DESCRIPTION_TEXT"/>
        <bm:field name="company_code" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_TYPE_ID" prompt="FND_COMPANIES.COMPANY_CODE"/>
        <bm:field name="company_short_name" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_TYPE_ID" prompt="BGT_COMPANY_PERIOD_SETS.COMPANY_FULL_NAME"/>
        <bm:field name="name" databaseType="VARCHAR2" datatype="java.lang.String" forInsert="false" forUpdate="false" physicalName="TRANSACTION_TYPE_ID" prompt="EXP_WFL_TRANSACTION.NAME"/>
    </bm:fields>
    <bm:features>
        <f:standard-who/>
        <o:sequence-pk/>
    </bm:features>
    <bm:primary-key>
        <bm:pk-field name="record_id"/>
    </bm:primary-key>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
           
            select v.*,(select sv.code_value_name from sys_code_values_vl sv,sys_codes sc
where sc.code= 'WFL_WORKFLOW_CATEGORY'
and sc.code_id=sv.code_id
and sv.code_value=v.transaction_category ) transaction_category_code
  from (select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e1.expense_requisition_type_code as type_code,
               f.description_text,
               e1.company_id,
               fc.company_code,
               fc.company_short_name
          from wfl_workflow_transaction t,
               exp_expense_req_types    e1,
               fnd_descriptions         f,
               wfl_workflow_vl          w,
               fnd_companies_vl         fc
         where t.transaction_type_id = e1.expense_requisition_type_id(+)
           and t.transaction_category = 'EXP_REQUISITION'
           and e1.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
           and e1.company_id = fc.company_id(+)
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e2.expense_report_type_code as type_code,
               f.description_text,
               e2.company_id,
               fc.company_code,
               fc.company_short_name
          from wfl_workflow_transaction t,
               exp_expense_report_types e2,
               fnd_descriptions         f,
               wfl_workflow_vl          w,
               fnd_companies_vl         fc
         where t.transaction_type_id = e2.expense_report_type_id(+)
           and t.transaction_category = 'EXP_REPORT'
           and e2.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
           and e2.company_id = fc.company_id(+)
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e3.type_code,
               f.description_text,
               e3.company_id,
               fc.company_code,
               fc.company_short_name
          from wfl_workflow_transaction t,
               csh_pay_req_types_vl     e3,
               fnd_descriptions         f,
               wfl_workflow_vl          w,
               fnd_companies_vl         fc
         where t.transaction_type_id = e3.type_id(+)
           and t.transaction_category = 'PAYMENT_REQUISITION'
           and e3.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
           and e3.company_id = fc.company_id(+)
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e3.cash_plan_type_code type_code,
               f.description_text,
               to_number(''),
               '',
               ''
          from wfl_workflow_transaction t,
               csh_cash_plan_types      e3,
               fnd_descriptions         f,
               wfl_workflow_vl          w
         where t.transaction_type_id = e3.cash_plan_type_id(+)
           and t.transaction_category = 'CASH_PLAN'
           and e3.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e3.acp_req_type_code type_code,
               f.description_text,
               to_number(''),
               '',
               ''
          from wfl_workflow_transaction t,
               acp_sys_acp_req_types    e3,
               fnd_descriptions         f,
               wfl_workflow_vl          w
         where t.transaction_type_id = e3.acp_req_type_id(+)
           and t.transaction_category = 'ACP_REQUISITION'
           and e3.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               e3.bank_treasurer_req_type_code type_code,
               f.description_text,
               to_number(''),
               '',
               ''
          from wfl_workflow_transaction     t,
               csh_bank_treasurer_req_types e3,
               fnd_descriptions             f,
               wfl_workflow_vl              w
         where t.transaction_type_id = e3.bank_treasurer_req_type_id(+)
           and t.transaction_category = 'BANK_TREASURER_REQ'
           and e3.description_id = f.description_id(+)
           and f.language(+) = userenv('LANG')
           and t.workflow_code = w.workflow_code
        union
		select t.transaction_category,
			   t.transaction_type_id,
			   t.workflow_code,
			   w.name,
			   t.record_id,
			   bjt.bgt_journal_type_code as type_code,
			   bjt.description,
			   fc.company_id,
			   fc.company_code,
			   fc.company_short_name
		  from wfl_workflow_transaction t,
			   wfl_workflow_vl          w,
			   bgt_jour_t_ref_com       brc,
			   fnd_companies_vl         fc,
			   bgt_journal_types_vl     bjt
		 where t.transaction_type_id = brc.ref_id
		   and t.transaction_category = 'BUDGET_JOURNAL'
		   and t.workflow_code = w.workflow_code
		   and bjt.bgt_journal_type_id = brc.bgt_journal_type_id
		   and brc.company_id = fc.company_id       
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               ert.ast_requisition_type_code as type_code,
               ert.ast_requisition_type_name,
               null,
               bv.asset_book_code,
               bv.description
          from wfl_workflow_transaction t,
               eam_requisition_types_vl ert,
               eam_asset_books_vl       bv,
               wfl_workflow_vl          w
         where t.transaction_type_id = ert.AST_REQUISITION_TYPE_ID(+)
           and t.transaction_category = 'EAM_REQUISITION'
           and t.workflow_code = w.workflow_code
           and ert.asset_book_id = bv.asset_book_id
        union
         select t.transaction_category,
                t.transaction_type_id,
                t.workflow_code,
                w.name,
                t.record_id,
                c.contract_type_code as type_code,
                c.description,
                fcv.company_id,
                fcv.company_code,
                fcv.company_short_name
           from wfl_workflow_transaction t,
                con_contract_types_vl    c,
                con_contract_type_dists  d,
                wfl_workflow_vl          w,
                fnd_companies_vl         fcv
          where t.transaction_type_id = d.contract_type_dist_id(+)
                and t.transaction_category = 'CON_CONTRACT'
                and t.workflow_code = w.workflow_code
                and d.contract_type_id = c.contract_type_id(+)
                and d.company_id= fcv.company_id(+)
        union all
        select t.transaction_category,
		       t.transaction_type_id,
		       t.workflow_code,
		       w.name,
		       t.record_id,
		       p.portal_title as type_code,
		       p.portal_title,
		       fcv.company_id,
		       fcv.company_code,
		       fcv.company_short_name
		  from wfl_workflow_transaction t,
		       ptl_portals_vl           p,
		       wfl_workflow_vl          w,
		       fnd_companies_vl         fcv
		 where t.transaction_type_id = p.portal_id
		   and t.transaction_category = 'PTL_ANNOUNCEMENT'
		   and t.workflow_code = w.workflow_code
		   and p.company_id = fcv.company_id(+)
		union 
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               g.work_order_type_code as type_code,
               g.work_order_type_desc as description_text,
               fcv.company_id,
               fcv.company_code,
               fcv.company_short_name
          from wfl_workflow_transaction    t,
               gld_sob_work_order_types    g,
               gld_sob_wo_type_assign_comp c,
               wfl_workflow_vl             w,
               fnd_companies_vl            fcv
         where t.transaction_type_id = c.company_wo_type_id
               and c.work_order_type_id = g.work_order_type_id
               and t.transaction_category = 'WORK_ORDER'
               and t.workflow_code = w.workflow_code
               and c.company_id = fcv.company_id(+)
        --调拨
        union
            select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               g.adjust_type_code as type_code,
               g.Description as description_text,
               fcv.company_id,
               fcv.company_code,
               fcv.company_short_name
          from wfl_workflow_transaction    t,
               cp_capital_adjust_types    g,
               cp_adjust_types_comp_assign c,
               wfl_workflow_vl             w,
               fnd_companies_vl            fcv
         where t.transaction_type_id = c.cp_adjust_types_comp_assign_id
               and c.cp_capital_adjust_types_id = g.cp_capital_adjust_types_id
               and t.transaction_category = 'CP_ADJUST'
               and t.workflow_code = w.workflow_code
               and c.company_id = fcv.company_id(+)
        union
        select t.transaction_category,
               t.transaction_type_id,
               t.workflow_code,
               w.name,
               t.record_id,
               null,
               null,
               null,
               null,
               null
          from wfl_workflow_transaction t,
               wfl_workflow_vl          w
         where t.transaction_category not in ('EXP_REQUISITION',
                                              'EXP_REPORT',
                                              'PAYMENT_REQUISITION',
                                              'CASH_PLAN',
                                              'ACP_REQUISITION',
                                              'BANK_TREASURER_REQ',
                                              'BUDGET_JOURNAL',
                                              'EAM_REQUISITION',
                                              'CON_CONTRACT',
                                              'PTL_ANNOUNCEMENT',
                                              'WORK_ORDER',
                                              'CP_ADJUST')
           and t.workflow_code = w.workflow_code) v
             #WHERE_CLAUSE#
         ORDER BY v.TRANSACTION_CATEGORY,
                  v.TYPE_CODE
           ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="transaction_category" queryExpression="transaction_category =${@transaction_category}"/>
        <bm:query-field name="company_id" queryExpression="company_id = ${@company_id}"/>
        <bm:query-field name="type_code" queryExpression="type_code like ${@type_code}"/>
        <bm:query-field name="workflow_code" queryExpression="workflow_code like ${@workflow_code}"/>
    </bm:query-fields>
</bm:model>
