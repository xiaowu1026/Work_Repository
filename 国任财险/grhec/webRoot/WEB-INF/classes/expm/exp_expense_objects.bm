<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Author: jane.wang2439 $
    $Date:  2011/02/14 16:05:39 $
    $Revision: 1.1 $
    $Purpose: 费用对象定义bm
-->
<bm:model xmlns:ns2="aurora.database.local.oracle" xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t" baseTable="exp_expense_object_types" defaultOrderBy="expense_object_type_code">
    <bm:fields>
        <bm:field name="expense_object_type_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="company_id" databaseType="NUMBER" datatype="java.lang.Long"/>
        <bm:field name="expense_object_type_code" databaseType="VARCHAR2" datatype="java.lang.String" forDisplay="true" prompt="EXP_EXPENSE_OBJECT_TYPES.EXPENSE_OBJECT_TYPE_CODE"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR" datatype="java.lang.String" prompt="EXP_EXPENSE_OBJECT_TYPES.ENABLED_FLAG"/>
        <bm:field name="description_id" databaseType="BIGINT" datatype="java.lang.Long" multiLanguage="true" multiLanguageDescField="description"/>
        <bm:field name="description" databaseType="VARCHAR" datatype="java.lang.String" forDisplay="true" forInsert="false" forUpdate="false" prompt="EXP_EXPENSE_OBJECT_TYPES.OBJ_DESC"/>
        <bm:field name="expense_object_method" databaseType="VARCHAR2" datatype="java.lang.String" lookupCode="EXPENSE_OBJECT_METHOD" lookupField="expense_object_method_desc"/>
        <bm:field name="sql_validate" databaseType="VARCHAR" datatype="java.lang.String"/>
        <bm:field name="sql_query" databaseType="VARCHAR" datatype="java.lang.String"/>
        <bm:field name="system_flag" databaseType="VARCHAR" datatype="java.lang.String"/>
        <bm:field name="system_flag_desc" databaseType="VARCHAR" datatype="java.lang.String" expression="(decode(t.system_flag,&apos;N&apos;,&apos;用户对象&apos;,&apos;Y&apos;,&apos;系统对象&apos;))" forInsert="false" forUpdate="false" prompt="EXP_EXPENSE_OBJ.OBJ_TYPE"/>
        <bm:field name="used_flag" databaseType="VARCHAR" datatype="java.lang.String" expression="(select &apos;Y&apos; as used_flag     from dual    where exists (select *             from dual            where t.expense_object_type_id not in                  (select *                     from (select *                             from (select *                                     from (select v.expense_object_type_id                                             from exp_expense_object_types_vl v                                            where v.expense_object_type_id not in                                                  (select e1.expense_object_type_id                                                     from exp_report_ref_object_types e1)) v1                                    where v1.expense_object_type_id not in                                          (select e2.expense_object_type_id                                             from exp_req_ref_object_types e2)) v2                            where v2.expense_object_type_id not in                                  (select e3.expense_object_type_id                                     from pur_po_ref_object_types e3)) v3                    where v3.expense_object_type_id not in                          (select e4.expense_object_type_id                             from pur_req_ref_object_types e4)))   UNION   select &apos;N&apos; as used_flag     from dual    where not exists    (select *             from dual            where t.expense_object_type_id not in                  (select *                     from (select *                             from (select *                                     from (select v.expense_object_type_id                                             from exp_expense_object_types_vl v                                            where v.expense_object_type_id not in                                                  (select e1.expense_object_type_id                                                     from exp_report_ref_object_types e1)) v1                                    where v1.expense_object_type_id not in                                          (select e2.expense_object_type_id                                             from exp_req_ref_object_types e2)) v2                            where v2.expense_object_type_id not in                                  (select e3.expense_object_type_id                                     from pur_po_ref_object_types e3)) v3                    where v3.expense_object_type_id not in                          (select e4.expense_object_type_id                             from pur_req_ref_object_types e4)))  )" forInsert="false" forUpdate="false"/>
    </bm:fields>
    <bm:primary-key>
        <bm:pk-field name="expense_object_type_id"/>
    </bm:primary-key>
    <bm:query-fields>
        <bm:query-field field="expense_object_type_code" queryOperator="like"/>
        <bm:query-field name="expense_object_type_id" queryExpression="expense_object_type_id=${@expense_object_type_id}"/>
        <bm:query-field field="description" queryExpression="exists (select 1 from fnd_descriptions fd where t.description_id=fd.description_id and fd.description_text like ${@description} and fd.language = ${/session/@lang})"/>
        <bm:query-field name="system_flag_value" queryExpression="t.system_flag = ${@system_flag_value}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="query" enforceOperations="query" expression="company_id=${/session/@company_id}"/>
    </bm:data-filters>
    <bm:features>
        <ns2:sequence-pk/>
        <f:standard-who/>
        <f:multi-language-storage/>
    </bm:features>
</bm:model>
