<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm" defaultOrderBy="v.exp_report_number desc,v.line_number">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[select * from (
          select l.exp_report_header_id,
                 l.exp_report_line_id,
                 (select erh.exp_report_number
                    from exp_report_headers erh
                   where erh.exp_report_header_id = l.exp_report_header_id) exp_report_number,
                 (select erh.exp_report_type_id
                    from exp_report_headers erh
                   where erh.exp_report_header_id = l.exp_report_header_id) exp_report_type_id,
                 (SELECT tv.expense_report_type_code
                  		   FROM exp_expense_report_types_vl tv
                          WHERE tv.expense_report_type_id = (
                          	SELECT
                                	erh.exp_report_type_id
                           	  FROM
                                    exp_report_headers erh
                             WHERE
                                    erh.exp_report_header_id = l.exp_report_header_id
                        )) exp_report_type_code,
                 (select ert.description
                    from exp_expense_report_types_vl ert
                   where ert.expense_report_type_id =
                         (select erh.exp_report_type_id
                            from exp_report_headers erh
                           where erh.exp_report_header_id = l.exp_report_header_id)) exp_report_type_desc,
                 l.line_number,
                 l.company_id,
                 (select fc.company_short_name
                    from fnd_companies_vl fc
                   where fc.company_id = l.company_id) company_name,
                 l.report_amount,
                 l.tax_amount,
                 l.sale_amount,
                 l.invoice_code,
                 l.invoice_number,
                 l.invoice_type,
                 (select yit.type_name
                    from exp_ygz_invoice_types yit
                   where yit.type_code = l.invoice_type) invoice_type_desc,
                 (select yit.special_invoice
                    from exp_ygz_invoice_types yit
                   where yit.type_code = l.invoice_type) special_invoice,
                 l.usage_type,
                 (select yut.type_name
                    from exp_ygz_usage_types yut
                   where yut.type_code = l.usage_type
                     and yut.enabled_flag = 'Y') usage_type_desc,
                 (select to_char(h.report_date,'yyyy-mm-dd')
                 from exp_report_headers h
                 where h.exp_report_header_id = l.exp_report_header_id) report_date,
                 l.invoice_status,
                 (select scv.code_value_name
                    from sys_codes sc, sys_code_values_vl scv
                   where sc.code_id = scv.code_id
                     and sc.code = 'VMS_INVOICE_STATUS'
                     and scv.code_value = l.invoice_status) invoice_status_desc,
                 (select erh.audit_flag
                    from exp_report_headers erh
                   where erh.exp_report_header_id = l.exp_report_header_id) audit_flag,
              (l.roll_out_amount / l.tax_amount) roll_out_per,
              l.roll_out_amount,
              to_char(l.invoice_date,'yyyy-mm-dd') invoice_date,
              l.invoice_amount,
              l.invoice_tax_amount,
              l.tax_rate * 100 tax_rate,
              l.adjusted_full_deductions,
              l.adjusted_partial_deductions,
              l.adjustable_tax_deductible,
              l.input_tax_structure_detail,
              l.report_status,
              (select TO_CHAR(h.audit_date, 'yyyy-mm-dd')
                        	from exp_report_headers h
                        	where h.exp_report_header_id = l.exp_report_header_id) audit_date,
              l.deductions_remark,
              (select h.company_id
               from exp_report_headers h
              where h.exp_report_header_id = l.exp_report_header_id) header_company_id
            from exp_report_lines l
           where l.usage_status = 'P'
           and l.confirm_deductions='Y'
          ) v
					#WHERE_CLAUSE# #ORDER_BY_CLAUSE#
					]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="execute">
            <bm:update-sql><![CDATA[
                begin
                    EXP_REPORT_PKG.EXP_REPORT_ROLL_OUT_RECHECK
                    (
                        p_exp_report_line_id=>${@exp_report_line_id},
                        p_roll_out_status=>${@roll_out_status},
                        p_user_id=>${/session/@user_id}
                    );
                end;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:data-filters>
        <bm:data-filter name="header_company_id" expression="v.header_company_id = ${/session/@company_id}"/>
    </bm:data-filters>
    <bm:query-fields>
        <bm:query-field name="exp_report_number" queryExpression="v.exp_report_number like &apos;%&apos;||trim(${@exp_report_number})||&apos;%&apos;"/>
        <bm:query-field name="invoice_number" queryExpression="v.invoice_number like &apos;%&apos;||trim(${@invoice_number})||&apos;%&apos;"/>
        <!-- <bm:query-field name="exp_report_type_id" queryExpression="v.exp_report_type_id=${@exp_report_type_id}"/> -->
        <bm:query-field name="exp_report_type_code" datatype="java.lang.String" queryExpression="exp_report_type_code like ${@exp_report_type_code}"/>
        <bm:query-field name="invoice_type" queryExpression="v.invoice_type like ${@invoice_type}"/>
        <bm:query-field name="invoice_status" queryExpression="v.invoice_status like ${@invoice_status}"/>
        <bm:query-field name="usage_type" queryExpression="v.usage_type=${@usage_type}"/>
        <!--  <bm:query-field name="create_date_from" queryExpression="to_date(v.creation_date,&apos;yyyy-mm-dd&apos;) &gt; to_date(${@create_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="create_date_to" queryExpression="to_date(v.creation_date,&apos;yyyy-mm-dd&apos;) &lt; to_date(${@create_date_to},&apos;yyyy-mm-dd&apos;)"/> -->
        <bm:query-field name="roll_out_per_from" queryExpression="v.roll_out_per &gt;= ${@roll_out_per_from} / 100"/>
        <bm:query-field name="roll_out_per_to" queryExpression="v.roll_out_per &lt;= ${@roll_out_per_to} / 100"/>
        <bm:query-field name="roll_out_amount_from" queryExpression="v.roll_out_amount &gt; ${@roll_out_amount_from}"/>
        <bm:query-field name="roll_out_amount_to" queryExpression="v.roll_out_amount &lt; ${@roll_out_amount_to}"/>
        <bm:query-field name="invoice_code" datatype="java.lang.String" queryExpression="v.invoice_code like ${@invoice_code}"/>
        <bm:query-field name="invoice_date_from" datatype="java.lang.String" queryExpression="v.invoice_date &gt;= ${@invoice_date_from}"/>
        <bm:query-field name="invoice_date_to" datatype="java.lang.String" queryExpression="v.invoice_date &lt;= ${@invoice_date_to}"/>
        <bm:query-field name="audit_date_from" datatype="java.lang.String" queryExpression="v.audit_date &gt;= ${@audit_date_from}"/>
        <bm:query-field name="audit_date_to" datatype="java.lang.String" queryExpression="v.audit_date &lt;= ${@audit_date_to}"/>
        <bm:query-field name="report_date_from" datatype="java.lang.String" queryExpression="v.report_date &gt;= ${@report_date_from}"/>
        <bm:query-field name="report_date_to" datatype="java.lang.String" queryExpression="v.report_date &lt;= ${@report_date_to}"/>
        <bm:query-field name="input_tax_structure_detail" datatype="java.lang.String" queryExpression="v.input_tax_structure_detail like ${@input_tax_structure_detail}"/>
        <bm:query-field name="invoice_amount" datatype="java.lang.Double" queryExpression="v.invoice_amount = ${@invoice_amount}"/>
        <bm:query-field name="invoice_tax_amount" datatype="java.lang.Double" queryExpression="v.invoice_tax_amount = ${@invoice_tax_amount}"/>
        <bm:query-field name="report_amount_from" datatype="java.lang.Double" queryExpression="v.report_amount &gt;= ${@report_amount_from}"/>
        <bm:query-field name="report_amount_to" datatype="java.lang.Double" queryExpression="v.report_amount &lt;= ${@report_amount_to}"/>
        <bm:query-field name="tax_rate" datatype="java.lang.Double" queryExpression="v.tax_rate = ${@tax_rate}"/>
        <bm:query-field name="tax_amount_from" datatype="java.lang.Double" queryExpression="v.tax_amount &gt;= ${@tax_amount_from}"/>
        <bm:query-field name="tax_amount_to" datatype="java.lang.Double" queryExpression="v.tax_amount &lt;= ${@tax_amount_to}"/>
        <bm:query-field name="sale_amount_from" datatype="java.lang.Double" queryExpression="v.sale_amount &gt;= ${@sale_amount_from}"/>
        <bm:query-field name="sale_amount_to" datatype="java.lang.Double" queryExpression="v.sale_amount &lt;= ${@sale_amount_to}"/>
        <bm:query-field name="adjusted_full_deductions_from" datatype="java.lang.Double" queryExpression="v.adjusted_full_deductions &gt;= ${@adjusted_full_deductions_from}"/>
        <bm:query-field name="adjusted_full_deductions_to" datatype="java.lang.Double" queryExpression="v.adjusted_full_deductions &lt;= ${@adjusted_full_deductions_to}"/>
        <bm:query-field name="adjusted_partial_deductions_from" datatype="java.lang.Double" queryExpression="v.adjusted_partial_deductions &gt;= ${@adjusted_partial_deductions_from}"/>
        <bm:query-field name="adjusted_partial_deductions_to" datatype="java.lang.Double" queryExpression="v.adjusted_partial_deductions &lt;= ${@adjusted_partial_deductions_to}"/>
        <bm:query-field name="adjustable_tax_deductible_from" datatype="java.lang.Double" queryExpression="v.adjustable_tax_deductible &gt;= ${@adjustable_tax_deductible_from}"/>
        <bm:query-field name="adjustable_tax_deductible_to" datatype="java.lang.Double" queryExpression="v.adjustable_tax_deductible &lt;= ${@adjustable_tax_deductible_to}"/>
        <bm:query-field name="report_status" datatype="java.lang.String" queryExpression="v.report_status like ${@report_status}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter expression="v.audit_flag = &apos;Y&apos;"/>
        <bm:data-filter expression="v.special_invoice = &apos;Y&apos;"/>
    </bm:data-filters>
</bm:model>
