<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:fields>
        <bm:field name="expense_report_ref_type_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="EXPENSE_REPORT_REF_TYPE_ID"/>
        <bm:field name="expense_report_type_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="EXPENSE_REPORT_TYPE_ID"/>
        <bm:field name="expense_type_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="EXPENSE_TYPE_ID"/>
        <bm:field name="expense_type_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="EXPENSE_TYPE_CODE" prompt="EXP_EXPENSE_TYPES.EXPENSE_TYPE_ID"/>
        <bm:field name="description" databaseType="VARCHAR" datatype="java.lang.String" physicalName="DESCRIPTION" prompt="EXP_REPORT_REF_TYPE.DESCRIPTION"/>
        <bm:field name="default_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="DEFAULT_FLAG"/>
        <bm:field name="unit_dim_flag" databaseType="VARCHAR2" datatype="java.lang.String"/>
    </bm:fields>
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
    			select t.expense_report_ref_type_id,
				       t.expense_report_type_id,
				       t.expense_type_id,
				       v.expense_type_code,
				       v.description,
				       t.default_flag,
				       t.unit_dim_flag
				  from exp_report_ref_types t, exp_expense_types_vl v
				 where t.expense_type_id = v.expense_type_id
				   and t.expense_report_type_id = ${@expense_report_type_id}
				 order by expense_type_code
    		]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
        		begin
        			exp_expense_report_types_pkg.insert_exp_report_ref_types(p_expense_report_type_id =>${@expense_report_type_id},
									                                         p_expense_type_id        =>${@expense_type_id},
									                                         p_created_by             =>${/session/@user_id},
									                                         p_default_flag			  =>${@default_flag},
									                                         p_unit_dim_flag          =>${@unit_dim_flag});
        		end;
        	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
            	begin
            		exp_expense_report_types_pkg.update_exp_report_ref_types(p_expense_report_ref_type_id =>${@expense_report_ref_type_id},
									                                         p_expense_report_type_id     =>${@expense_report_type_id},
									                                         p_expense_type_id            =>${@expense_type_id},
									                                         p_last_updated_by            =>${/session/@user_id},
									                                         p_default_flag				  =>${@default_flag},
									                                         p_unit_dim_flag              =>${@unit_dim_flag});
            	end;
        	]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="delete">
            <bm:update-sql><![CDATA[
            	begin
            		exp_expense_report_types_pkg.delete_exp_report_ref_types(p_expense_report_ref_type_id =>${@expense_report_ref_type_id});
            	end;
        	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
