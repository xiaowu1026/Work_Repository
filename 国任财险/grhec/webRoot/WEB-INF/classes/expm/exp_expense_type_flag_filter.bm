<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:f="aurora.database.features" xmlns:bm="http://www.aurora-framework.org/schema/bm" alias="t1" defaultOrderBy="expense_type_code" extend="expm.exp_expense_type" extendMode="reference">
    <bm:fields>
        <bm:field name="expense_type_id"/>
        <bm:field name="company_id"/>
        <bm:field name="expense_type_code"/>
        <bm:field name="description_id"/>
        <bm:field name="expense_type_description"/>
        <bm:field name="enabled_flag"/>
        <bm:field name="meetting_flag"/>
        <bm:field name="line_desc_flag"/>
        <bm:field name="default_trans_item" expression="(SELECT (SELECT eriv.EXPENSE_ITEM_ID FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;TRAVEL_ROUTE&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <bm:field name="default_trans_item_desc" expression="(SELECT (SELECT eriv.description FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;TRAVEL_ROUTE&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <bm:field name="default_accomm_item" expression="(SELECT (SELECT eriv.EXPENSE_ITEM_ID FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;QUARTER&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <bm:field name="default_accomm_item_desc" expression="(SELECT (SELECT eriv.description FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;QUARTER&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <bm:field name="default_others_item" expression="(SELECT (SELECT eriv.EXPENSE_ITEM_ID FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;OTHERS&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <bm:field name="default_others_item_desc" expression="(SELECT (SELECT eriv.description FROM EXP_EXPENSE_ITEMS_VL eriv WHERE eriv.EXPENSE_ITEM_CODE=ectri.EXPENSE_ITEM_CODE) FROM EXP_COM_TYPE_REF_ITEM ectri WHERE ectri.EXPENSE_TYPE_REF_ID=(SELECT errt.EXPENSE_REPORT_REF_TYPE_ID FROM  exp_report_ref_types errt WHERE errt.EXPENSE_REPORT_TYPE_ID=NVL(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})) AND errt.EXPENSE_TYPE_ID=t1.expense_type_id) AND ectri.ITEM_CATEGORY=&apos;OTHERS&apos; AND ectri.DEFAULT_FLAG=&apos;Y&apos;)"/>
        <!--根据报销单类型码和公司id,公司级报销单类型id,在公司级报销单关联报销类型表中，找到报销类型的unit_dim_flag-->
        <bm:field name="unit_dim_flag" expression="nvl((select eert.unit_dim_flag from exp_report_ref_types eert where eert.expense_report_type_id=(select e.expense_report_type_id from exp_expense_report_types e where e.company_id=${@company_id} and e.expense_report_type_code=(select er.expense_report_type_code from exp_expense_report_types er where er.expense_report_type_id=nvl(${/parameter/@expense_report_type_id},(SELECT eh.EXP_REPORT_TYPE_ID FROM EXP_REPORT_HEADERS eh WHERE eh.EXP_REPORT_HEADER_ID=${/parameter/@exp_report_header_id})))) and eert.expense_type_id=t1.expense_type_id),&apos;N&apos;)"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field field="expense_type_id" queryOperator="like"/>
        <bm:query-field field="company_id" queryOperator="="/>
        <bm:query-field field="expense_type_code" queryOperator="like"/>
        <bm:query-field field="description_id" queryOperator="like"/>
        <bm:query-field field="expense_type_description" queryOperator="like"/>
        <bm:query-field field="enabled_flag" queryOperator="like"/>
        <bm:query-field name="report_flag" queryExpression="(${@company_id} is not null and ${@company_id} = ${/session/@company_id} and exists         (select 1            from exp_report_ref_types ef           where ef.expense_report_type_id =                 nvl(${/parameter/@expense_report_type_id},                     (select hh.exp_report_type_id                        from exp_report_headers hh                       where hh.exp_report_header_id = ${/parameter/@exp_report_header_id}))             and t1.expense_type_id = ef.expense_type_id))     or (${@company_id} is not null and ${@company_id} != ${/session/@company_id} and        (exists (select 1                    from exp_report_ref_types t                   where t.expense_type_id = t1.expense_type_id                     and t.expense_report_type_id =                         (select et.expense_report_type_id                            from exp_expense_report_types et                           where et.company_id = ${@company_id}                             and et.enabled_flag = &apos;Y&apos;                             and et.expense_report_type_code =                                 (select ett.expense_report_type_code                                    from exp_expense_report_types ett                                   where ett.expense_report_type_id = nvl(${/parameter/@expense_report_type_id},(select hh.exp_report_type_id   from exp_report_headers hh    where hh.exp_report_header_id = ${/parameter/@exp_report_header_id})) and ett.enabled_flag = &apos;Y&apos;))) or         (select et.expense_report_type_id                    from exp_expense_report_types et                   where et.company_id = ${@company_id}                     and et.enabled_flag = &apos;Y&apos;                     and et.expense_report_type_code =                         (select ett.expense_report_type_code                            from exp_expense_report_types ett                           where ett.expense_report_type_id = nvl(${/parameter/@expense_report_type_id},    (select hh.exp_report_type_id                        from exp_report_headers hh                       where hh.exp_report_header_id = ${/parameter/@exp_report_header_id})  )                             and ett.enabled_flag = &apos;Y&apos;)) is null and         t1.company_id = ${@company_id}))"/>
        <bm:query-field name="requisition_flag" queryexpression="((${@company_id} is not null and ${@company_id} = ${/session/@company_id} and exists         (select 1             from exp_req_ref_types er            where er.expense_requisition_type_id =                  nvl(${/parameter/@exp_requisition_type_id},                      (select h.exp_requisition_type_id                         from exp_requisition_headers h                        where h.exp_requisition_header_id = ${/parameter/@head_id}))              and t1.expense_type_id = er.expense_type_id)) or        (${@company_id} is not null and ${@company_id} != ${/session/@company_id} and        (exists (select 1                     from exp_req_ref_types t                    where t.expense_type_id = t1.expense_type_id                      and t.expense_requisition_type_id =                          (select et.expense_requisition_type_id                             from exp_expense_req_types et                            where et.company_id = ${@company_id}                              and et.enabled_flag = &apos;Y&apos;                              and et.expense_requisition_type_code =                                  (select ett.expense_requisition_type_code                                     from exp_expense_req_types ett                                    where ett.expense_requisition_type_id = ${/parameter/@exp_requisition_type_id}                                      and ett.enabled_flag = &apos;Y&apos;))) or         ((select et.expense_requisition_type_id                      from exp_expense_req_types et                     where et.company_id = ${@company_id}                       and et.enabled_flag = &apos;Y&apos;                       and et.expense_requisition_type_code =                           (select ett.expense_requisition_type_code                              from exp_expense_req_types ett                             where ett.expense_requisition_type_id = ${/parameter/@exp_requisition_type_id}                               and ett.enabled_flag = &apos;Y&apos;)) is null and         t1.company_id = ${@company_id}))))"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter name="enabled_flag" enforceOperations="query" expression="t1.enabled_flag=&apos;Y&apos;"/>
    </bm:data-filters>
    <bm:features>
        <f:multi-language-storage/>
    </bm:features>
</bm:model>
