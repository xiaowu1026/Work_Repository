<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[select *
		  from (select v1.*,
					   (req_release_amount - requisition_amount) as value,
					   fnd_format_mask_pkg.get_gld_amount(v1.currency_code,
														  decode(v1.req_unrelease_quantity,
																 0,
																 0,
																 v1.req_unrelease_amount /
																 v1.req_unrelease_quantity),
														  v1.set_of_books_id) req_unrelease_price
				  from (select distinct h.exp_requisition_number,
							   l.line_number,
							   (select eetv.description
								  from exp_expense_types_vl eetv
								 where eetv.expense_type_id = l.expense_type_id) expense_type_desc,
							   (select vt.description
								  from exp_req_items_vl vt
								 where vt.req_item_id = l.exp_req_item_id) exp_req_item_desc,
							   (select ev.expense_item_id
                                   from exp_expense_items_vl ev
                                  where ev.req_item_id = l.exp_req_item_id
                                    and rownum=1) expense_item_id,
                               (select ev.description
                                   from exp_expense_items_vl ev
                                  where ev.req_item_id = l.exp_req_item_id
                                    and rownum=1) expense_item_desc,
							   d.dist_number,
							   d.price,
							   d.primary_quantity,
							   d.requisition_amount,
							   d.requisition_functional_amount,
							   d.exp_req_item_id,
							   d.expense_type_id,
							   nvl(d.released_quantity,
								   0) req_release_quantity,
							   nvl(d.released_amount,
								   0) req_release_amount,
							   nvl(d.primary_quantity,
								   0) - nvl(d.released_quantity,
											0) req_unrelease_quantity,
							   nvl(d.requisition_amount,
								   0) - nvl(d.released_amount,
											0) req_unrelease_amount,
							   nvl(d.requisition_functional_amount,
								   0) - nvl(d.released_functional_amount,
											0) req_unrelease_functional_amt,
							   (select ee.name
								  from exp_employees ee
								 where ee.employee_id = l.employee_id) expense_employee_name,
							   d.period_name,
							   h.currency_code,
							   d.exchange_rate,
							   d.exchange_rate_type,
							   d.exchange_rate_quotation,
							   d.released_functional_amount,
							   d.company_id,
							   (select fc.set_of_books_id
								  from fnd_companies fc
								 where fc.company_id = d.company_id) set_of_books_id,
							   (select fcv.company_short_name
								  from fnd_companies_vl fcv
								 where fcv.company_id = d.company_id) company_desc,
							   (select frcv.responsibility_center_name
								  from fnd_responsibility_centers_vl frcv
								 where frcv.responsibility_center_id =
									   d.responsibility_center_id) responsibility_center_name,
							   d.responsibility_center_id,
							   d.unit_id,
							   (select eou.description
								  from exp_org_unit_vl eou
								 where eou.unit_id = d.unit_id) unit_desc,
							   (select ee.name
								  from exp_employees ee
								 where ee.employee_id = d.employee_id) employee_name,
							   d.employee_id,
							   d.position_id,
							   (select description
								  from exp_org_position_vl pv
								 where pv.position_id = d.position_id) position_id_display,
							   d.description,
							   d.dimension1_id e1,
							   d.dimension2_id e2,
							   d.dimension3_id e3,
							   d.dimension4_id e4,
							   d.dimension5_id e5,
							   d.dimension6_id e6,
							   d.dimension7_id e7,
							   d.dimension8_id e8,
							   d.dimension9_id e9,
							   d.dimension10_id e10,
							   l.place_type_id,
							   l.place_id,
							   (select vvt.place_desc
								  from exp_policy_places_vl vvt
								 where vvt.place_id = l.place_id) place,
							   (select vvtl.description
								  from exp_policy_place_types_vl vvtl
								 where vvtl.place_type_id = l.place_type_id) place_type,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension1_id) d1,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension2_id) d2,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension3_id) d3,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension4_id) d4,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension5_id) d5,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension6_id) d6,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension7_id) d7,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension8_id) d8,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension9_id) d9,
							   (select fdv.description
								  from fnd_dimension_values_vl fdv
								 where fdv.dimension_value_id = d.dimension10_id) d10,
							   d.exp_requisition_dists_id,
							   d.exp_requisition_line_id,
							   h.exp_requisition_header_id,
							   h.exp_requisition_type_id,
							   h.requisition_date,
							   decode(d.payee_category,
									  'EMPLOYEE',
									  (select employee_code|| '-' || name 
										 from exp_employees ee
										where ee.employee_id = d.payee_id),
									  'CUSTOMER',
									  (select vc.customer_code || '-' || vc.description
										 from ord_system_customers_vl vc
										where vc.customer_id = d.payee_id),
									  (select vv.vender_code || '-' || vv.description
										 from pur_system_venders_vl vv
										where vv.vender_id = d.payee_id)) payee_code,
							   exp_report_util_pkg.get_expense_item_id(d.exp_req_item_id) req_item_id1,
							   exp_report_util_pkg.get_expense_item_desc(d.exp_req_item_id) req_item_id1_display,
							   to_char(l.date_from,
									   'yyyy-mm-dd') date_from,
							   to_char(l.date_to,
									   'yyyy-mm-dd') date_to,
							   d.requisition_amount - d.released_amount this_amount,
							   d.requisition_functional_amount -
							   d.released_functional_amount this_functional_amount,
							   v.contract_number contract_header_code,
							   v.payment_schedule_line_id,
							   v.contract_header_id,
							   v.payment_schedule_line_number payment_schedule_line_code,
							   exp_report_util_pkg.get_object_list(l.exp_requisition_line_id) objlist,
							   /*vv.expense_report_type_id,*/
							   (select vv.EXPENSE_REPORT_TYPE_ID
		          from exp_expense_req_types vv
		         where h.exp_requisition_type_id = vv.EXPENSE_REQUISITION_TYPE_ID) EXPENSE_REPORT_TYPE_ID,
							   l.city,
							   h.company_id compay_id1,
							   (select fcv.company_short_name
								  from fnd_companies_vl fcv
								 where fcv.company_id = h.company_id) h_company_desc
						  from exp_requisition_headers h,
							   exp_requisition_lines l,
							   exp_requisition_dists d,
							   /*exp_expense_req_types_vl vv,*/
							   (select cch.contract_header_id,
									   cch.contract_number,
									   cps.payment_schedule_line_id,
									   cps.payment_schedule_line_number,
									   cdf.source_document_id,
									   cdf.source_document_line_id
								  from con_document_flows    cdf,
									   con_contract_headers  cch,
									   con_payment_schedules cps
								 where cdf.document_type = 'CON_CONTRACT'
								   and cdf.source_document_type = 'EXP_REQUISITION_LINES'
								   and cdf.document_id = cch.contract_header_id
								   and cdf.document_line_id =
									   cps.payment_schedule_line_id(+)
								   and cdf.document_id = cps.contract_header_id(+)) v,
	                           (select TO_NUMBER(${@granted_employee_id}) employee_id from dual ) x
						 where h.exp_requisition_header_id = l.exp_requisition_header_id
						  /* and h.exp_requisition_type_id =
							   vv.expense_requisition_type_id*/
						   and l.exp_requisition_line_id = d.exp_requisition_line_id
						   and h.audit_flag = 'Y'
						   and h.requisition_status = 'COMPLETELY_APPROVED'
						   and h.reversed_flag is null
						   and d.close_flag = 'N'
						   and v.source_document_id(+) = l.exp_requisition_header_id
						   and v.source_document_line_id(+) = l.exp_requisition_line_id
						   and d.company_id = ${/session/@company_id}
						   and d.requisition_functional_amount > nvl(d.released_amount,0)
						   and x.employee_id = d.employee_id) v1) v
				#WHERE_CLAUSE#
		 order by v.exp_requisition_number desc,
				  v.exp_requisition_line_id,
				  v.dist_number]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="req_number" datatype="java.lang.String" queryexpression="exp_requisition_number like ${@req_number}"/>
        <bm:query-field name="requesition_date_from" datatype="java.lang.String" queryexpression="requisition_date&gt;=to_date(${@requesition_date_from},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="requesition_date_to" datatype="java.lang.String" queryexpression="requisition_date&lt;=to_date(${@requesition_date_to},&apos;yyyy-mm-dd&apos;)"/>
        <bm:query-field name="currency_code" datatype="java.lang.String" queryexpression="currency_code = ${@currency_code}"/>
        <bm:query-field name="expense_type_id" datatype="java.lang.Long" queryexpression="expense_type_id=${@expense_type_id}"/>
        <bm:query-field name="exp_req_item_id" datatype="java.lang.Long" queryexpression="exp_req_item_id=${@exp_req_item_id}"/>
        <bm:query-field name="company_id" datatype="java.lang.Long" queryexpression="compay_id1=${@company_id}"/>
    </bm:query-fields>
    <bm:data-filters>
        <bm:data-filter enforceOperations="query" expression=" v.value &lt; ${@value_id} and (v.expense_report_type_id = ${@exp_report_type_id} and compay_id1=${/session/@company_id} or v.compay_id1 != ${/session/@company_id})"/>
    </bm:data-filters>
</bm:model>
