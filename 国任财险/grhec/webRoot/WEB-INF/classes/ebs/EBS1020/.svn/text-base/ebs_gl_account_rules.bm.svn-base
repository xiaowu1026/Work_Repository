<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[SELECT T.SET_OF_BOOKS_ID,
					   T.RULE_ID,
					   T.RULE_CODE,
					   T.DESCRIPTION,
					   T.CA_FLAG,
					   T.ENABLED_FLAG,
					   T.RULE_TYPE,
					   T.JE_CATEGORY_ID,
					   (SELECT V.DESCRIPTION
							  FROM EBS_GL_JE_CATEGORIES_VL V
							  WHERE V.ENABLED_FLAG = 'Y'
							  AND V.JE_CATEGORY_ID= T.JE_CATEGORY_ID) JE_CATEGORY_TYPE,
					   T.USER_DEFINE_FUNC,
					   decode((select count(1) 
		                  from ebs_gl_account_rule_doc_types py
		                 WHERE PY.RULE_ID = T.RULE_ID),0,'N','Y') COUNT_FLAG
				  FROM EBS_GL_ACCOUNT_RULES_VL T
		       #WHERE_CLAUSE#  order by T.RULE_CODE
       		]]></bm:query-sql>
        </bm:operation>
        <bm:operation name="insert">
            <bm:update-sql><![CDATA[
				begin
					ebs_gl_account_rules_pkg.insert_ebs_gl_account_rules(p_set_of_books_id 		=> gld_common_pkg.get_set_of_books_id(p_comany_id => ${/session/@company_id}),
																		 p_rule_code 	   		=> ${@rule_code},
																		 p_ca_flag         		=> ${@ca_flag},
																		 p_description     		=> ${@description},
																		 p_enabled_flag    		=> ${@enabled_flag},
																		 p_created_by      		=> ${/session/@user_id},
																		 P_rule_type       		=> ${@rule_type},
																		 p_je_category_id  		=> ${@je_category_id},
																		 p_user_define_func  	=> ${@user_define_func},
																		 p_rule_id         		=> ${@rule_id});
				 end;
   			]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:update-sql><![CDATA[
        		 begin
			     	ebs_gl_account_rules_pkg.update_ebs_gl_account_rules(${@rule_id},
																	 ${@description},
																	 ${@enabled_flag},
																	 ${@ca_flag},
																	 ${@rule_type},
																	 ${@je_category_id},
																	 ${@user_define_func},
																	 ${/session/@user_id});
				 end;
        	]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
    <bm:fields>
        <bm:field name="set_of_books_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="set_of_books_id"/>
        <bm:field name="rule_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="rule_id"/>
        <bm:field name="rule_code" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="rule_code"/>
        <bm:field name="description" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="description"/>
        <bm:field name="ca_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="ca_flag"/>
        <bm:field name="enabled_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="enabled_flag"/>
        <bm:field name="rule_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="rule_type"/>
        <bm:field name="je_category_id" databaseType="NUMBER" datatype="java.lang.Double" physicalName="je_category_id"/>
        <bm:field name="je_category_type" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="je_category_type"/>
        <bm:field name="user_define_func" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="user_define_func"/>
        <bm:field name="count_flag" databaseType="VARCHAR2" datatype="java.lang.String" physicalName="count_flag"/>
    </bm:fields>
    <bm:query-fields>
        <bm:query-field name="rule_code" queryExpression="upper(rule_code)  like &apos;%&apos;||upper(${@rule_code})||&apos;%&apos;"/>
        <bm:query-field name="description" queryExpression="upper(t.description) like &apos;%&apos;||upper(${@description})||&apos;%&apos;"/>
    </bm:query-fields>
</bm:model>
