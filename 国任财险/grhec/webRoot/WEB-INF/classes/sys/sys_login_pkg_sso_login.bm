<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:ns2="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="execute">
            <bm:parameters>
                <bm:parameter name="session_id" dataType="java.lang.Long" output="true" outputPath="/session/@session_id"/>
                <bm:parameter name="encryted_session_id" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@encryted_session_id"/>
                <bm:parameter name="message" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@message"/>
                <bm:parameter name="user_id" dataType="java.lang.Long" input="false" output="true" outputPath="/session/@user_id"/>
                <bm:parameter name="is_ipad" output="true" outputPath="/session/@is_ipad"/>
                <bm:parameter name="role_id" dataType="java.lang.Long" input="false" output="true" outputPath="/session/@role_id"/>
                <bm:parameter name="company_id" dataType="java.lang.Long" input="false" output="true" outputPath="/session/@company_id"/>
                <bm:parameter name="lang" dataType="java.lang.String" input="false" output="true" outputPath="/session/@lang"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                DECLARE
                    vsid NUMBER;
                BEGIN                	
                    SELECT
                        a.user_language
                    INTO
                        ${@lang}
                    FROM
                        sys_sso_login_session a
                    WHERE
                        a.encrypted_sso_session_id = ${@encrypted_sso_session_id};
                    sys_login_pkg.sso_login(${@encrypted_sso_session_id},vsid,${@encryted_session_id},${@message});
                    IF vsid != -1 THEN
                        SELECT
                            user_id,
                            vsid,
                            role_id,
                            company_id,
                            ${/parameter/@is_ipad}
                        INTO
                            ${@user_id},
                            ${@session_id},
                            ${@role_id},
                            ${@company_id},
                            ${@is_ipad}
                        FROM
                            sys_session
                        WHERE
                            session_id = vsid;
                    END IF;
                    exception 
                    	when no_data_found then
                    		null;          
                END;
            ]]></bm:update-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
