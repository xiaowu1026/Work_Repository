<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:ns2="aurora.database.local.oracle" xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="execute">
            <bm:parameters>
                <bm:parameter name="session_id" dataType="java.lang.Long" output="true" outputPath="/session/@session_id"/>
                <bm:parameter name="encryted_session_id" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@encryted_session_id"/>
                <bm:parameter name="message" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@message"/>
                <bm:parameter name="user_id" dataType="java.lang.Long" input="false" output="true" outputPath="/session/@user_id"/>
                <bm:parameter name="user_name" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@user_name"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
            	declare
            	   vsid number;
            	begin
				  sys_login_pkg.sso_login(p_encrypted_sso_session_id => ${@token},
				                          p_session_id => vsid,
				                          p_encrypted_session_id => ${@encryted_session_id},
				                          p_error_message => ${@message});
				   if vsid != -1 then
				        select ss.user_id, vsid ,su.user_name
				        into   ${@user_id}, ${@session_id},${@user_name}
				        from   sys_session ss,sys_user su
				        where  ss.session_id = vsid
				        and ss.user_id = su.user_id ;
				    end if;
				end;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="update">
            <bm:parameters>
                <bm:parameter name="token" dataType="java.lang.String" input="false" output="true" outputPath="/parameter/@token"/>
            </bm:parameters>
            <bm:update-sql><![CDATA[
                DECLARE
                    v_token VARCHAR2(50);
                BEGIN
                	sys_sso_login_session_pkg.create_sso_login_session(p_user_name => ${@sso_username},
                                     p_oa_flag   => 'Y',
                                     p_token     => ${@token});
                END;
            ]]></bm:update-sql>
        </bm:operation>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
            	SELECT
            	    t.instance_id,
            	    instance_param
            	FROM
            	    wfl_instance_node_recipient t,
            	    wfl_workflow_instance wwi, wfl_workflow ww
            	WHERE
            		wwi.workflow_id = ww.workflow_id
            		AND wwi.instance_id=t.instance_id
            	    and t.record_id = ${@record_id}
        	]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
</bm:model>
