<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>${page:title}</title>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
${page:html.head.css} 
${page:html.head.script}

<style>

.row-selected {
    background-color: #81c8fd;
}

.screenTitle {
	float: left;
	line-height: 40px;
	font-size: 18px;
}

.layout-th div {
	text-align: right;
	padding-left: 5px;
	padding-right: 5px;
	color: #000;
}

.screenTopToolbar {
	background: #fff;
	height: 44px;
	border-bottom: 1px solid #ccc;
	margin-bottom: 5px;
	margin-top:-10px;
}

.query-form {
	-webkit-radius: 4px;
	border-radius: 4px;
	margin-bottom: 0px;	
	-webkit-box-shadow:none;
	box-shadow:none;
}

.query-form .query_form_head {
	padding: 5px;
	-webkit-radius: 4px;
	border-radius: 4px;
	color: #000;
	background: #ededed;
	border: 1px solid #ccc;
}

.query-form .form_body_wrap {
	margin-top:2px;
	padding: 5px;
	position: absolute;
	background-color: #fcfcfc;
	border: 1px solid #ccc;
	-webkit-radius: 4px;
	border-radius: 4px;
	z-index: 21;
}

.item-btn-pressed .tm {
	background-position: 0 -125px;
}

.item-rbtn-gray div {
	color: #fff;
}

</style>

</head>
<body>
    <script language="javascript">
    	/**
    	超时标志，具体操作过程为：
    	1.在default.tplt中注册timeout事件
    	2.超时时调用main.screen的showlogin方法并设置isTimeout为true
    	3.用户在login_timeout.screen输入密码，如果成功则将isTimeout重新设置为false
    	**/
    	var isTimeout = false;
    
        function checkFrame(){
	    	Aurora.Status.enable = false;
			Aurora.SideBar.enable = false;
            if(parent && parent.unionKey == "hap_main"){                
            }else{
                //window.location.href = '${page:contextPath}/error_wrong_entrance.screen';
            }
        }

        checkFrame();
        if(parent && parent.ajaxSuccessFunction){
			Ext.Ajax.on('requestcomplete',parent.ajaxSuccessFunction);        
        }
        
        function isIpad() {
            var ua = navigator.userAgent.toLowerCase();
            if (ua.match(/iPad/i) == "ipad") {
                return true;
            } else {
                return false;
            }
        }
        
        Aurora.manager.on('timeout',function(){
            if(parent && parent.showlogin && !isTimeout){
 				isTimeout = true;
            	parent.showlogin();    
            }
        });
		
		Ext.getBody().on('click',function(el){
            if(parent && parent.hideCurrentMenu) parent.hideCurrentMenu();
        })
        
        //用户按F9，刷新当前Tab页面
        document.onkeydown = function(event){
        	event = event ? event : (window.event ? window.event : null);
            if (event.keyCode == 120) {
            	event.keyCode = -1;
            	event.cancelBubble = true;
                if(window && window.location.href){
                	window.location.href = window.location.href;
                }
            }
        }
		
		window.focus();
		
		(function() {
			var POW = Math.pow;
			// 乘法
			mul = function(a, b) {
				var m = 0, s1 = String(a), s2 = String(b), l1 = s1.indexOf('.'), l2 = s2
						.indexOf('.'), e1 = s1.indexOf('e'), e2 = s2.indexOf('e');
				if (e1 != -1) {
					m -= Number(s1.substr(e1 + 1));
					s1 = s1.substr(0, e1);
				}
				if (e2 != -1) {
					m -= Number(s2.substr(e2 + 1));
					s2 = s2.substr(0, e2);
				}
				if (l1 != -1)
					m += s1.length - l1 - 1;
				if (l2 != -1)
					m += s2.length - l2 - 1;
				return Number(s1.replace('.', '')) * Number(s2.replace('.', ''))
						/ POW(10, m);
			}
		
			// 除法
			div = function(a, b) {
				var re = String(a / b), i = re.indexOf('.');
				if (i != -1) {
					re = Number(re).toFixed(16 - i - 1)
				}
				return Number(re);
			}
		
			// 加法
			plus = function(a, b) {
				var m1 = 0, m2 = 0, m3, s1 = String(a), s2 = String(b), l1 = s1
						.indexOf('.'), l2 = s2.indexOf('.'), e1 = s1.indexOf('e'), e2 = s2
						.indexOf('e');
				if (e1 != -1) {
					m1 -= Number(s1.substr(e1 + 1));
					s1 = s1.substr(0, e1);
				}
				if (e2 != -1) {
					m2 -= Number(s2.substr(e2 + 1));
					s2 = s2.substr(0, e2);
				}
				if (l1 != -1)
					m1 += s1.length - l1 - 1;
				if (l2 != -1)
					m2 += s2.length - l2 - 1;
				if (m2 > m1) {
					m3 = m2;
					m1 = m2 - m1;
					m2 = 0;
				} else if (m1 > m2) {
					m3 = m1;
					m2 = m1 - m2;
					m1 = 0;
				} else {
					m3 = m1;
					m1 = m2 = 0;
				}
				return (Number(s1.replace('.', '')) * POW(10, m1) + Number(s2.replace(
						'.', ''))
						* POW(10, m2))
						/ POW(10, m3);
			}
		
			// 减法
			minus = function(a, b) {
				return plus(a, -b);
			}
		
			pow = function(a, b) {
				var re = String(POW(a, b)), i = re.indexOf('.');
				if (i != -1) {
					re = Number(re).toFixed(16 - i - 1)
				}
				return Number(re);
			}
			
			/*
			if (!Ext.isIE && !Ext.isIE9 && !Ext.isIE10) {
				var _toFixed = Number.prototype.toFixed;
				Number.prototype.toFixed = function(deci) {
					var sf = this,
						s = sf+'',
						fix = new Array(deci).join('0')+1;
					if(s.indexOf('e') != -1){
						var arr = s.split('e');
						if(arr[1]<0){
							if(arr[0].indexOf('.') == -1){
								arr[1]-=-arr[0].length;
								arr[0] = '.'+arr[0];
							}
							return _toFixed.call(Number(arr[0]+fix+'e'+arr[1]),deci);
						}else{
							return _toFixed.call(sf,deci);
						}
					}else if(s.indexOf('.') == -1){
						return _toFixed.call(sf,deci);
					}else{
						return _toFixed.call(Number(s+fix),deci);
					}
				}
			}
			*/
		})();
    </script>
    <div></div>
	${page:init}
	${page:content}
	<input type="hidden" class="logLink" screen="${/@service_name}" value="viewlog?file=${/@SERVICE_LOGGING_FILE}"/>	
</body>
</html>