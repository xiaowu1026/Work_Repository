<?xml version="1.0" encoding="UTF-8"?>
<a:screen xmlns:a="http://www.aurora-framework.org/application" xmlns:p="uncertain.proc" trace="true">
    <a:init-procedure>
        <a:session-clear/>
        <!-- <a:qiyeweixin-init autoLoginProc="weixin.sys.login" groupname="hecGroup"/> -->
        <!-- <a:qiyeweixin-init autoLoginProc="weixin.sys.login" groupname="hecGroup"/> -->
        <p:echo/>
    </a:init-procedure>
    <a:view template="weixin">
        <script src="javascripts/jquery-1.6.4.min.js"/>
        <div id="gesture-wrapper" style="width:100%;height:100%;display:none;">
            <div class="gesture" style="margin-top:1rem;width:100%;">
                <canvas id="myCanvas"/>
            </div>
            <div class="gefdsfsture-tip" style="display:block;width:100%;height:5rem;text-align:center;line-height:5rem;color:#000;">
                <span id="gesture-text-tip"><![CDATA[
                
              ]]></span>
            </div>
            <div id="reset-gesture-pwd" style="position:absolute;left:0px;right:0px;bottom:1rem;text-align:center;text-decoration:none;font-size:0.8rem;">
                <a href="javascript:forceResetPwd();" style="display:block;height:2rem;line-height:2rem;width:6rem;"><![CDATA[重置密码]]></a>
            </div>
        </div>
        <div id="weixin-login-loading" class="load8">
            <div class="load8-container container1">
                <div class="circle1"/>
                <div class="circle2"/>
                <div class="circle3"/>
                <div class="circle4"/>
            </div>
            <div class="load8-container container2">
                <div class="circle1"/>
                <div class="circle2"/>
                <div class="circle3"/>
                <div class="circle4"/>
            </div>
            <div class="load8-container container3">
                <div class="circle1"/>
                <div class="circle2"/>
                <div class="circle3"/>
                <div class="circle4"/>
            </div>
        </div>
        <style><![CDATA[
                *{
                  margin: 0px;
                  padding: 0px;
                }
                html body{
                  width: 100%;
                  height: 100%;
                }
                .load8 {
                  margin: 50px auto;
                  width: 20px;
                  height: 20px;
                  position: relative;
                }
                .container1 > div, .container2 > div, .container3 > div {
                  width: 6px;
                  height: 6px;
                  background-color: #0c63ee;
                  border-radius: 100%;
                  position: absolute;
                  -webkit-animation: bouncedelay 1.2s infinite ease-in-out;
                  animation: bouncedelay 1.2s infinite ease-in-out;
                  -webkit-animation-fill-mode: both;
                  animation-fill-mode: both;
                }
                .load8 .load8-container {
                  position: absolute;
                  width: 100%;
                  height: 100%;
                }
                .container2 {
                  -webkit-transform: rotateZ(45deg);
                  transform: rotateZ(45deg);
                }
                .container3 {
                  -webkit-transform: rotateZ(90deg);
                  transform: rotateZ(90deg);
                }
                .circle1 { top: 0; left: 0; }
                .circle2 { top: 0; right: 0; }
                .circle3 { right: 0; bottom: 0; }
                .circle4 { left: 0; bottom: 0; }
                .container2 .circle1 {
                  -webkit-animation-delay: -1.1s;
                  animation-delay: -1.1s;
                }
                .container3 .circle1 {
                  -webkit-animation-delay: -1.0s;
                  animation-delay: -1.0s;
                }
                .container1 .circle2 {
                  -webkit-animation-delay: -0.9s;
                  animation-delay: -0.9s;
                }
                .container2 .circle2 {
                  -webkit-animation-delay: -0.8s;
                  animation-delay: -0.8s;
                }
                .container3 .circle2 {
                  -webkit-animation-delay: -0.7s;
                  animation-delay: -0.7s;
                }
                .container1 .circle3 {
                  -webkit-animation-delay: -0.6s;
                  animation-delay: -0.6s;
                }
                .container2 .circle3 {
                  -webkit-animation-delay: -0.5s;
                  animation-delay: -0.5s;
                }
                .container3 .circle3 {
                  -webkit-animation-delay: -0.4s;
                  animation-delay: -0.4s;
                }
                .container1 .circle4 {
                  -webkit-animation-delay: -0.3s;
                  animation-delay: -0.3s;
                }
                .container2 .circle4 {
                  -webkit-animation-delay: -0.2s;
                  animation-delay: -0.2s;
                }
                .container3 .circle4 {
                  -webkit-animation-delay: -0.1s;
                  animation-delay: -0.1s;
                }
                @-webkit-keyframes bouncedelay {
                  0%, 80%, 100% { -webkit-transform: scale(0.0) }
                  40% { -webkit-transform: scale(1.0) }
                }
                @keyframes bouncedelay {
                  0%, 80%, 100% {
                    transform: scale(0.0);
                    -webkit-transform: scale(0.0);
                  } 40% {
                    transform: scale(1.0);
                    -webkit-transform: scale(1.0);
                  }
                }
        ]]></style>
        <script type="text/javascript"><![CDATA[
            var R = 26, CW = 400, CH = 320, OffsetX = 30, OffsetY = 30;
            var  mCanvasContainer,mCxt,mLinePoint = [];
            function CaculateNinePointLotion(diffX, diffY) {
                var Re = [];
                for (var row = 0; row < 3; row++) {
                    for (var col = 0; col < 3; col++) {
                        var Point = {
                            X: (OffsetX + col * diffX + ( col * 2 + 1) * R),
                            Y: (OffsetY + row * diffY + (row * 2 + 1) * R)
                        };
                        Re.push(Point);
                    }
                }
                return Re;
            };
            var PointLocationArr = [];            
            function Draw(cxt, _PointLocationArr, _LinePointArr,touchPoint) {
                if (_LinePointArr.length > 0) {
                    cxt.beginPath();
                    for (var i = 0; i < _LinePointArr.length; i++) {
                        var pointIndex = _LinePointArr[i];
                        cxt.lineTo(_PointLocationArr[pointIndex].X, _PointLocationArr[pointIndex].Y);
                    }
                    cxt.lineWidth = 10;
                    cxt.strokeStyle = "#627eed";
                    cxt.stroke();
                    cxt.closePath();
                    if(touchPoint!=null)
                    {
                        var lastPointIndex=_LinePointArr[_LinePointArr.length-1];
                        var lastPoint=_PointLocationArr[lastPointIndex];
                        cxt.beginPath();
                        cxt.moveTo(lastPoint.X,lastPoint.Y);
                        cxt.lineTo(touchPoint.X,touchPoint.Y);
                        cxt.stroke();
                        cxt.closePath();
                    }
                }
                for (var i = 0; i < _PointLocationArr.length; i++) {
                    var Point = _PointLocationArr[i];
                    cxt.fillStyle = "#627eed";
                    cxt.beginPath();
                    cxt.arc(Point.X, Point.Y, R, 0, Math.PI * 2, true);
                    cxt.closePath();
                    cxt.fill();
                    cxt.fillStyle = "#ffffff";
                    cxt.beginPath();
                    cxt.arc(Point.X, Point.Y, R - 3, 0, Math.PI * 2, true);
                    cxt.closePath();
                    cxt.fill();
                    if(_LinePointArr.indexOf(i)>=0)
                    {
                        cxt.fillStyle = "#627eed";
                        cxt.beginPath();
                        cxt.arc(Point.X, Point.Y, R -16, 0, Math.PI * 2, true);
                        cxt.closePath();
                        cxt.fill();
                    }

                }
            };
            function IsPointSelect(touches,LinePoint)
            {
                for (var i = 0; i < PointLocationArr.length; i++) {
                    var currentPoint = PointLocationArr[i];
                    var xdiff = Math.abs(currentPoint.X - touches.pageX);
                    var ydiff = Math.abs(currentPoint.Y - touches.pageY);
                    var dir = Math.pow((xdiff * xdiff + ydiff * ydiff), 0.5);
                    if (dir < R ) {
                        if(LinePoint.indexOf(i) < 0){ LinePoint.push(i);}
                        break;
                    }
                }
            };
            function InitEvent(canvasContainer, ctx){
                //var LinePoint = [];
                canvasContainer.addEventListener("touchstart", touchStartFun, false);
                canvasContainer.addEventListener("touchmove", touchmoveFun, false);
                canvasContainer.addEventListener("touchend", touchendFun, false);
            };
            var weixinGestureShow = function () {
                var c = mCanvasContainer = document.getElementById("myCanvas");
                CW = document.body.offsetWidth;
                // CH = document.body.offsetHeight;               
                if(CW > 500){
                    OffsetX = ( CW - 500 )/2;
                    // CW = 500;
                };
                c.width = CW;
                c.height = CH;                
                mCxt =  c.getContext("2d");
                //两个圆之间的外距离 就是说两个圆心的距离去除两个半径
                var X = (CW - 2 * OffsetX - R * 2 * 3) / 2;
                var Y = (CH - 2 * OffsetY - R * 2 * 3) / 2;
                PointLocationArr = CaculateNinePointLotion(X, Y);
                InitEvent(c, mCxt);
                //CW=2*offsetX+R*2*3+2*X
                Draw(mCxt, PointLocationArr, [],null);
            };
            var touchStartFun = function(e){
                IsPointSelect(e.touches[0],mLinePoint);
            };
            var touchendFun = function(e){
                mCxt.clearRect(0,0,CW,CH);
                Draw(mCxt,PointLocationArr,mLinePoint,null);
                // console.log("密码结果是："+mLinePoint.join("->")); 
                gestureTouchEnd(mLinePoint.join(''));
                mLinePoint=[];
            };
            var touchmoveFun = function(e){
                e.preventDefault();
                var touches = e.touches[0];
                IsPointSelect(touches,mLinePoint);
                mCxt.clearRect(0,0,CW,CH);
                Draw(mCxt,PointLocationArr,mLinePoint,{X:touches.pageX,Y:touches.pageY});
            };
            function clearGestureCavans(notGesture){
                if(notGesture){
                  mCxt.clearRect(0,0,CW,CH);
                }else{
                  mCxt.clearRect(0,0,CW,CH);
                  Draw(mCxt, PointLocationArr,[],null);
                };                
            };
            //weixinGestureShow();
        ]]></script>
        <script><![CDATA[
            var gestureTextTipSpan;
            var isForceReset = false;
            var gestureIsReset = false;
            var gestureLastPw;
            var forceResetA;
            //var debug = false;
            
            function gestureTouchEnd(gesturePw) {
                if (isForceReset) {
                    validGesturePwForReset(gesturePw);
                    return;
                };
                if (gestureIsReset) {
                    if (gestureLastPw) {
                        if (gestureLastPw == gesturePw) {
                            resetGesturePw(gesturePw);
                        } else {
                            gestureLastPw = null;
                            gestureTextTipSpan.innerText = "两次密码不一致，请重新输入";
                            clearGestureCavans();
                        };
                    } else {
                        gestureLastPw = gesturePw;
                        gestureTextTipSpan.innerText = "请再次输入密码";
                        clearGestureCavans();
                    };
                } else {
                    validGesturePw(gesturePw);
                };
            };
            
            var resetGesturePw = function(pw) {
                    //////alert('resetGesturePw == : '+pw);
                    var data = {
                        mobile_gesture_pwd: pw
                    };
                    gestureTextTipSpan.innerText = "正在重置密码，请稍候......";
                    jQuery.ajax({
                        url: 'autocrud/weixin.sys.reset_gesture_password/execute',
                        type: 'POST',
                        data: {
                            _request_data: JSON.stringify({
                                parameter: data
                            })
                        },
                        success: function(data, textStatus) {
                            if (data.success) {
                                //////alert("手势设置成功 !请重新输入登陆...");
                                gestureIsReset = false;
                                gestureTextTipSpan.innerText = "手势设置成功,请重新输入登陆";
                                forceResetA.display = "block";
                                clearGestureCavans();
                            };
                        },
                        error: function(data, textStatus) {
                            ////alert("重置手势密码失败!   "+JSON.stringify(data));
                        }
                    });
                };
            
            var validGesturePwForReset = function(pw) {
                    var data = {
                        mobile_gesture_pwd: pw
                    };
                    gestureTextTipSpan.innerText = "正在验证密码，请稍候......";
                    jQuery.ajax({
                        url: 'autocrud/weixin.sys.valide_gesture_password/execute',
                        type: 'POST',
                        data: {
                            _request_data: JSON.stringify({
                                parameter: data
                            })
                        },
                        success: function(data, textStatus) {
                            if (data.success) {
                                gestureTextTipSpan.innerText = "请输入新密码";
                                isForceReset = false;
                                gestureIsReset = true;
                                clearGestureCavans();
                            } else {
                                gestureTextTipSpan.innerText = "旧密码输入有误，请重新输入";
                                clearGestureCavans();
                            };
                        },
                        error: function(data, textStatus) {
                            //alert("ERROR:  重置手势密码失败!请重新进入...");
                        }
                    });
                };
            
            var validGesturePw = function(pw) {
                    var data = {
                        mobile_gesture_pwd: pw
                    };
                    gestureTextTipSpan.innerText = "正在验证密码，请稍候......";
                    jQuery.ajax({
                        url: 'autocrud/weixin.sys.valide_gesture_password/execute',
                        type: 'POST',
                        data: {
                            _request_data: JSON.stringify({
                                parameter: data
                            })
                        },
                        success: function(data, textStatus) {
                            if (data.success) {
                                gestureTextTipSpan.innerText = "密码正确，请稍候...";
                                clearGestureCavans(true);
                                //window.location.href="weixin_main.screen#/home/main";
                                window.location.replace("weixin_main2.screen#/home/main");
                            } else {
                                gestureTextTipSpan.innerText = "密码错误请重新输入";
                                clearGestureCavans();
                            };
                        },
                        error: function(data, textStatus) {
                            ////alert("重置手势密码失败!");
                        }
                    });
                };
            
            var weixinLogin = function() {
                    var data = {
                        ticket: '${/weixin/@ticket}',
                        user_name: '${/weixin/@user_name}'
                    };
            
                    jQuery.ajax({
                        url: 'modules/weixin/sys/login.svc',
                        type: 'POST',
                        data: {
                            _request_data: JSON.stringify({
                                parameter: data
                            })
                        },
                        success: function(data, textStatus) {
                            if (data.success) {
                                var loadEle = document.getElementById('weixin-login-loading');
                                loadEle.style.display = "none";
            
                                var gestureWrapperEle = document.getElementById('gesture-wrapper');
                                forceResetA = document.getElementById('reset-gesture-pwd');
                                gestureTextTipSpan = document.getElementById('gesture-text-tip');
                                gestureWrapperEle.style.display = "block";
            
                                if (data.result.need_reset_gesture_pwd == '1' || data.result.need_reset_gesture_pwd == '') {
                                    gestureTextTipSpan.innerText = "请设置手势密码";
                                    gestureIsReset = true;
                                    forceResetA.style.display = "none";
                                };
            
                                if (data.result.need_reset_gesture_pwd == '0') {
                                    gestureTextTipSpan.innerText = "请输入手势密码";
                                    gestureIsReset = false;
                                    forceResetA.style.display = "block";
                                };
            
                                weixinGestureShow();
                            } else {
                                //window.location.href="weixin_certify_error.screen";
                                window.location.replace("weixin_certify_error.screen");
                            };
                        },
                        error: function(data) {
                            window.location.replace("weixin_certify_error.screen");
                        },
                        dataType: 'json'
                    });
                };
            
            function forceResetPwd() {
                isForceReset = true;
                gestureIsReset = true;
                gestureTextTipSpan.innerText = "请输入之前的密码";
                forceResetA.style.display = "none";
                clearGestureCavans();
            };
            
            
            
            // weixinLogin();                                
            var loadEle = document.getElementById('weixin-login-loading');
            loadEle.style.display = "none";
            
            var gestureWrapperEle = document.getElementById('gesture-wrapper');
            gestureWrapperEle.style.display = "block";
            weixinGestureShow();
        ]]></script>
    </a:view>
</a:screen>
